interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
      authorization:
      - DUMMY
    method: GET
    uri: https://api.case.law/v1/cases/?cite=49+F.3d+807&full_case=true
  response:
    body:
      string: "{\"count\":1,\"next\":null,\"previous\":null,\"results\":[{\"id\":7416609,\"url\":\"https://api.case.law/v1/cases/7416609/\",\"name\":\"LOTUS
        DEVELOPMENT CORPORATION, Plaintiff, Appellee, v. BORLAND INTERNATIONAL, INC.,
        Defendant, Appellant\",\"name_abbreviation\":\"Lotus Development Corp. v.
        Borland International, Inc.\",\"decision_date\":\"1995-03-09\",\"docket_number\":\"No.
        93-2214\",\"first_page\":\"807\",\"last_page\":\"822\",\"citations\":[{\"type\":\"official\",\"cite\":\"49
        F.3d 807\"}],\"volume\":{\"url\":\"https://api.case.law/v1/volumes/32044110573003/\",\"volume_number\":\"49\",\"barcode\":\"32044110573003\"},\"reporter\":{\"url\":\"https://api.case.law/v1/reporters/933/\",\"full_name\":\"Federal
        Reporter 3d Series\",\"id\":933},\"court\":{\"url\":\"https://api.case.law/v1/courts/1st-cir/\",\"name_abbreviation\":\"1st
        Cir.\",\"slug\":\"1st-cir\",\"id\":8809,\"name\":\"United States Court of
        Appeals for the First Circuit\"},\"jurisdiction\":{\"id\":39,\"name_long\":\"United
        States\",\"url\":\"https://api.case.law/v1/jurisdictions/us/\",\"slug\":\"us\",\"whitelisted\":false,\"name\":\"U.S.\"},\"cites_to\":[{\"cite\":\"121
        L.Ed.2d 141\",\"category\":\"reporters:federal\",\"reporter\":\"L. Ed. 2d\",\"weight\":2,\"year\":1992,\"opinion_id\":0},{\"cite\":\"113
        S.Ct. 198\",\"category\":\"reporters:federal\",\"reporter\":\"S. Ct.\",\"year\":1992,\"opinion_id\":0},{\"cite\":\"960
        F.2d 1465\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[10525985],\"pin_cites\":[{\"page\":\"1477\"}],\"opinion_id\":0},{\"cite\":\"379
        F.2d 675\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[2069440],\"weight\":2,\"pin_cites\":[{\"page\":\"678-79\"},{\"page\":\"678-79\"}],\"opinion_id\":0},{\"cite\":\"17
        U.S.C. \xA7 101\",\"category\":\"laws:leg_statute\",\"reporter\":\"U.S.C.\",\"weight\":3,\"pin_cites\":[{\"parenthetical\":\"defining
        \\\"literary works\\\" as \\\"works ... expressed in words, numbers, or other
        verbal or numerical symbols or indicia, regardless of the nature of the material
        objects, such as books, periodicals, phonorecords, film, tapes, disks, or
        cards, in which they are embodied\\\" (emphasis added)\"}],\"opinion_id\":0},{\"cite\":\"9
        F.3d 823\",\"category\":\"reporters:federal\",\"reporter\":\"F.3d\",\"case_ids\":[10513702],\"opinion_id\":0},{\"cite\":\"982
        F.2d 693\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[36437],\"weight\":6,\"pin_cites\":[{\"page\":\"707\"},{\"page\":\"710\"},{\"page\":\"702\",\"parenthetical\":\"\\\"It
        is now well settled that the literal elements of computer programs, i.e.,
        their source and object codes, are the subject of copyright protection.\\\"\"}],\"opinion_id\":0},{\"cite\":\"25
        L.Ed. 841\",\"category\":\"reporters:federal\",\"reporter\":\"L. Ed.\",\"case_ids\":[5632045,5630095],\"year\":1879,\"opinion_id\":0},{\"cite\":\"101
        U.S. 99\",\"category\":\"reporters:federal\",\"reporter\":\"U.S.\",\"case_ids\":[5630095],\"weight\":2,\"year\":1879,\"pin_cites\":[{\"page\":\"104-05\"}],\"opinion_id\":0},{\"cite\":\"126
        L.Ed.2d 254\",\"category\":\"reporters:federal\",\"reporter\":\"L. Ed. 2d\",\"year\":1993,\"opinion_id\":0},{\"cite\":\"114
        S.Ct. 307\",\"category\":\"reporters:federal\",\"reporter\":\"S. Ct.\",\"case_ids\":[6531200],\"year\":1993,\"opinion_id\":0},{\"cite\":\"994
        F.2d 1476\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[6525256,10518404],\"weight\":6,\"pin_cites\":[{\"page\":\"1481\"}],\"opinion_id\":0},{\"cite\":\"937
        F.2d 759\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[10526236],\"pin_cites\":[{\"page\":\"763\"}],\"opinion_id\":0},{\"cite\":\"17
        U.S.C. \xA7 410\",\"category\":\"laws:leg_statute\",\"reporter\":\"U.S.C.\",\"pin_cites\":[{\"page\":\"(c)\"}],\"opinion_id\":0},{\"cite\":\"893
        F.2d 1104\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[11650492],\"pin_cites\":[{\"page\":\"1106\"}],\"opinion_id\":0},{\"cite\":\"26
        F.3d 1335\",\"category\":\"reporters:federal\",\"reporter\":\"F.3d\",\"case_ids\":[10516011],\"weight\":3,\"pin_cites\":[{\"page\":\"1340\"},{\"page\":\"1340\"},{\"page\":\"1341\"}],\"opinion_id\":0},{\"cite\":\"843
        F.2d 600\",\"category\":\"reporters:federal\",\"reporter\":\"F.2d\",\"case_ids\":[10544994],\"weight\":2,\"pin_cites\":[{\"page\":\"605\"},{\"page\":\"606\"}],\"opinion_id\":0},{\"cite\":\"36
        F.3d 1147\",\"category\":\"reporters:federal\",\"reporter\":\"F.3d\",\"case_ids\":[10530360],\"opinion_id\":0},{\"cite\":\"499
        U.S. 340\",\"category\":\"reporters:federal\",\"reporter\":\"U.S.\",\"case_ids\":[11318883],\"weight\":5,\"year\":1991,\"pin_cites\":[{\"page\":\"361\"},{\"page\":\"1296\"},{\"page\":\"349-50\"},{\"page\":\"1290\",\"parenthetical\":\"quotations
        and citations omitted\"}],\"opinion_id\":0},{\"cite\":\"17 U.S.C. \xA7 102\",\"category\":\"laws:leg_statute\",\"reporter\":\"U.S.C.\",\"weight\":4,\"pin_cites\":[{\"page\":\"(b)\"},{\"page\":\"(b)\"},{\"page\":\"(a)\"},{\"page\":\"(a)(1)\",\"parenthetical\":\"granting
        protection to \\\"literary works\\\"\"}],\"opinion_id\":0},{\"cite\":\"740
        F.Supp. 37\",\"category\":\"reporters:federal\",\"reporter\":\"F. Supp.\",\"case_ids\":[4086167],\"pin_cites\":[{\"page\":\"68,
        70\"}],\"opinion_id\":0},{\"cite\":\"831 F.Supp. 223\",\"category\":\"reporters:federal\",\"reporter\":\"F.
        Supp.\",\"case_ids\":[571968],\"opinion_id\":0},{\"cite\":\"831 F.Supp. 202\",\"category\":\"reporters:federal\",\"reporter\":\"F.
        Supp.\",\"case_ids\":[571966],\"opinion_id\":0},{\"cite\":\"799 F.Supp. 203\",\"category\":\"reporters:federal\",\"reporter\":\"F.
        Supp.\",\"case_ids\":[3815938],\"weight\":7,\"pin_cites\":[{\"page\":\"217\"},{\"page\":\"223\",\"parenthetical\":\"emphasis
        in original\"},{\"page\":\"222-23\"},{\"page\":\"216\"}],\"opinion_id\":0},{\"cite\":\"788
        F.Supp. 78\",\"category\":\"reporters:federal\",\"reporter\":\"F. Supp.\",\"case_ids\":[7406680],\"weight\":3,\"pin_cites\":[{\"page\":\"80\"},{\"page\":\"82\"}],\"opinion_id\":0},{\"cite\":\"114
        S.Ct. 1164\",\"category\":\"reporters:federal\",\"reporter\":\"S. Ct.\",\"case_ids\":[234489],\"weight\":2,\"year\":1994,\"pin_cites\":[{\"page\":\"1174\"}],\"opinion_id\":1},{\"cite\":\"471
        U.S. 539\",\"category\":\"reporters:federal\",\"reporter\":\"U.S.\",\"case_ids\":[6206269],\"weight\":5,\"year\":1985,\"pin_cites\":[{\"page\":\"562\"},{\"page\":\"2231-32\"}],\"opinion_id\":1},{\"cite\":\"25
        L.Ed. 841\",\"category\":\"reporters:federal\",\"reporter\":\"L. Ed.\",\"case_ids\":[5632045,5630095],\"year\":1879,\"opinion_id\":1},{\"cite\":\"101
        U.S. 99\",\"category\":\"reporters:federal\",\"reporter\":\"U.S.\",\"case_ids\":[5630095],\"year\":1879,\"opinion_id\":1}],\"frontend_url\":\"https://cite.case.law/f3d/49/807/\",\"frontend_pdf_url\":\"https://cite.case.law/pdf/7416609/Lotus%20Development%20Corp.%20v.%20Borland%20International,%20Inc.,%2049%20F.3d%20807%20(1995).pdf\",\"preview\":[],\"analysis\":{\"word_count\":9247,\"random_bucket\":53025,\"sha256\":\"728f6b586be4914121ca4002706414f617c6a0c4d433147434e5af53ec74264e\",\"ocr_confidence\":0.681,\"char_count\":57323,\"random_id\":2548420385,\"pagerank\":{\"percentile\":0.9637525199345599,\"raw\":6.792335702795885e-07},\"cardinality\":2007,\"simhash\":\"1:2eef8007895ad901\"},\"last_updated\":\"2024-02-27T19:56:48.781900+00:00\",\"provenance\":{\"date_added\":\"2019-08-29\",\"batch\":\"2018\",\"source\":\"Harvard\"},\"casebody\":{\"status\":\"ok\",\"data\":{\"corrections\":\"\",\"parties\":[\"LOTUS
        DEVELOPMENT CORPORATION, Plaintiff, Appellee, v. BORLAND INTERNATIONAL, INC.,
        Defendant, Appellant.\"],\"attorneys\":[\"Gary L. Rebaek, with whom Peter
        N. Det-kin, Michael Barclay, Isabella E. Fu, Wilson Sonsini Goodrich & Rosati,
        P.C., Palo Alto, CA, Peter E. Gelhaar, Katherine L. Parks, and Donnelly Conroy
        & Gelhaar, Boston, MA, were on brief for appellant.\",\"Matthew P. Poppel,
        Boston, MA, et ah, were on brief for Computer Scientists, ami-cus curiae.\",\"Dennis
        S. Karjala, Tempe, AZ, and Peter S. Menell, Berkeley, CA, on brief, amici
        curiae.\",\"Jeffrey C. Cannon and Baker Keaton Sei-bel & Cannon, Walnut Creek,
        CA, were on brief for Computer Software Industry Ass\u2019n, amicus curiae.\",\"Laureen
        E. McGurk, David A. Rabin, Bryan G. Harrison and Morris Manning & Martin,
        Atlanta, GA, were on brief for Chicago Computer Soc., Diablo Users Group,
        Dan-bury Area Computer Soc., IBM AB Users Group, Kentucky-Indiana Personal
        Computer Users Group, Long Island PC Users Group, Napa Valley PC Users Group,
        Pacific Northwest PC Users Group, Palmetto Personal Computer Club, Philadelphia
        Area Computer Soc., Inc., Phoenix IBM PC Users Group, Pinellas IBM PC Users
        Group, Quad Cities Computer Soc., Quattro Pro Users Group, Sacramento PC Users
        Group, San Francisco PC Users Group, Santa Barbara PC Users Group, Twin Cities
        PC Users Group, and Warner Robbins Personal Computer Ass\u2019n, amici curiae.\",\"Diane
        Marie O\u2019Malley and Hanson Bridgett Marcus Vlahos & Rudy, San Francisco,
        CA, were on brief for Software Entrepreneurs\u2019 Forum, amicus curiae.\",\"Peter
        M.C. Choy, Mountain View, CA, was on brief for American Committee for Interoperable
        Systems, amicus curiae.\",\"Howard B. Abrams, Detroit, MI, Howard C. Anawalt,
        Santa Clara, CA, Stephen R. Barnett, Berkeley, CA, Ralph S. Brown, Stephen
        L. Carter, New Haven, CT, Amy B. Cohen, Longmeadow, MA, Paul J. Heald, Athens,
        GA, Peter A. Jaszi, John A. Kidwell, Madison, WI, Edmund W. Kitch, Charlottes-ville,
        VA, Roberta R. Kwall, Chicago, IL, David L. Lange, Durham, NC, Marshall Leafier,
        Toledo, OH, Jessica D. Litman, Ann Arbor, MI, Charles R. McManis, St. Louis,
        MO, L. Ray Patterson, Athens, GA, Jerome H. Reichman, David A. Rice, Chestnut
        Hill, MA, Pamela Samuelson, Pittsburgh, PA, David J. Seipp, Boston, MA, David
        E. Ship-ley, Lexington, KY, Lionel S. Sobel, Santa Monica, CA, Alfred C. Yen,
        Newton, MA, and Diane L. Zimmerman, New York City, were on brief for Copyright
        Law Professors, amicus curiae.\",\"Henry B. Gutman, Baker & Botts, LLP, with
        whom Kerry L. Konrad, Joshua H. Epstein, Kimberly A. Caldwell, O\u2019Sullivan
        Graev & Karabell, New York City, Thomas M. Lemberg, James C. Burling, and
        Hale and Dorr, Boston, MA, were on brief for appellee.\",\"Morton David Goldberg,
        June M. Besek, David 0. Carson, Jesse M. Feder, Schwab Goldberg Price & Dannay,
        New York City, and Arthur R. Miller, Cambridge, MA, were on brief for Apple
        Computer, Inc., Digital Equip. Corp., International Business Machines Corp.,
        and Xerox Corp., amici curiae.\",\"Jon A. Baumgarten, Proskauer Rose Goetz
        & Mendelsohn,\u2019 and Robert A. Gorman, New York City, were on brief for
        Adobe Systems, Inc., Apple Computer, Inc., Computer Associates Intern., Inc.,
        Digital Equip. Corp., and International Business Machines Corp., amici curiae.\",\"Herbert
        F. Schwartz, Vincent N. Palladi-no, Susan Progoff, Fish & Neave, New York
        City, William J. Cheeseman, and Foley Hoag & Eliot, Boston, MA, were on brief
        for Computer and Business Equip. Mfrs. Ass\u2019n, ami-cus curiae.\"],\"opinions\":[{\"author\":\"STAHL,
        Circuit Judge.\",\"text\":\"STAHL, Circuit Judge.\\nThis appeal requires us
        to decide whether a computer menu command hierarchy is copyrightable subject
        matter. In particular, we must decide whether, as the district court held,
        plaintiff-appellee Lotus Development Corporation\u2019s copyright in Lotus
        1-2-3, a computer spreadsheet program, was infringed by defendant-appellant
        Borland International, Inc., when Borland copied the Lotus 1-2-3 menu command
        hierarchy into its Quattro and Quattro Pro computer spreadsheet programs.
        See Lotus Dev. Corp. v. Borland Int\u2019l, Inc., 788 F.Supp. 78 (D.Mass.1992)
        (\u201CBorland I\u201D); Lotus Dev. Corp. v. Borland Int\u2019l, Inc., 799
        F.Supp. 203 (D.Mass.1992) (\u201CBorland II\u201D); Lotus Dev. Corp. v. Borland
        Int\u2019l, Inc., 831 F.Supp. 202 (D.Mass.1993) (\u201CBorland III\u201D);
        Lotus Dev. Corp. v. Borland Int\u2019l, Inc., 831 F.Supp. 223 (D.Mass.1993)
        (\u201CBorland IV\u201D).\\nI.\\nBackground\\nLotus 1-2-3 is a spreadsheet
        program that enables users to perform accounting functions electronically
        on a computer. Users manipulate and control the program via a series of menu
        commands, such as \u201CCopy,\u201D \u201CPrint,\u201D and \u201CQuit.\u201D
        Users choose commands either by highlighting them on the screen or by typing
        their first letter. In all, Lotus 1-2-3 has 469 commands arranged into more
        than 50 menus and submenus.\\nLotus 1-2-3, like many computer programs, allows
        users to write what are called \u201Cmacros.\u201D By writing a macro, a user
        can designate a series of command choices with a single macro keystroke. Then,
        to execute that series of commands in multiple parts of the spreadsheet, rather
        than typing the whole series each time, the user only needs to type the single
        pre-programmed macro keystroke, causing the program to recall and perform
        the designated series of commands automatically. Thus, Lotus 1-2-3 macros
        shorten the time needed to set up and operate the program.\\nBorland released
        its first Quattro program to the public in 1987, after Borland\u2019s engineers
        had labored over its development for nearly three years. Borland\u2019s objective
        was to develop a spreadsheet program far superi- or to existing programs,
        including Lotus 1-2-3. In Borland\u2019s words, \u201C[flrom the time of its
        initial release ... Quattro included enormous innovations over competing spreadsheet
        products.\u201D\\nThe district court found, and Borland does not now contest,
        that Borland included in its Quattro and Quattro Pro version 1.0 programs
        \u201Ca virtually identical copy of the entire 1-2-3 menu tree.\u201D Borland
        III, 831 F.Supp. at 212 (emphasis in original). In so doing, Borland did not
        copy any of Lotus\u2019s underlying computer code; it copied only the words
        and structure of Lotus\u2019s menu command hierarchy. Borland included the
        Lotus menu command hierarchy in its programs to make them compatible with
        Lotus 1-2-3 so that spreadsheet users who were already familiar with Lotus
        1-2-3 would be able to switch to the Borland programs without having to learn
        new commands or rewrite their Lotus macros.\\nIn its Quattro and Quattro Pro
        version 1.0 programs, Borland achieved compatibility with Lotus 1-2-3 by offering
        its users an alternate user interface, the \u201CLotus Emulation Interface.\u201D
        By activating the Emulation Interface, Borland users would see the Lotus menu
        commands on their screens and could interact with Quattro or Quattro Pro as
        if using Lotus 1-2-3, albeit with a slightly different looking screen and
        with many Bor-land options not available on Lotus 1-2-3. In effect, Borland
        allowed users to choose how they wanted to communicate with Bor-land\u2019s
        spreadsheet programs: either by using menu commands designed by Borland, or
        by using the commands and command structure used in Lotus 1-2-3 augmented
        by Bor-land-added commands.\\nLotus filed this action against Borland in the
        District of Massachusetts on July 2,1990, four days after a district court
        held that the Lotus 1-2-3 \u201Cmenu structure, taken as a whole \u2014 including
        the choice of command terms [and] the structure and order of those terms,\u201D
        was protected expression covered by Lotus\u2019s copyrights. Lotus Dev. Corp.
        v. Paperback Software Int\u2019l, 740 F.Supp. 37, 68, 70 (D.Mass.1990) (\u201CPaperback\u201D).
        Three days earlier, on the morning after the Paperback decision, Borland had
        filed a declaratory judgment action against Lotus in the Northern District
        of California, seeking a declaration of non-infringement. On September 10,
        1990, the district court in California dismissed Borland\u2019s declaratory
        judgment action in favor of this action.\\nLotus and Borland filed cross motions
        for summary judgment; the district court denied both motions on March 20,
        1992, concluding that \u201Cneither party\u2019s motion is supported by the
        record.\u201D Borland I, 788 F.Supp. at 80. The district court invited the
        parties to file renewed summary judgment motions that would \u201Cfocus their
        arguments more precisely\u201D in light of rulings it had made in conjunction
        with its denial of their summary judgment motions. Id. at 82. Both parties
        filed renewed motions for summary judgment on April 24, 1992. In its motion,
        Borland contended that the Lotus 1-2-3 menus were not copyrightable as a matter
        of law and that no reasonable trier of fact could find that the similarity
        between its products and Lotus 1-2-3 was sufficient to sustain a determination
        of infringement. Lotus contended in its motion that Borland had copied Lotus
        1-2-3\u2019s entire user interface and had thereby infringed Lotus\u2019s
        copyrights.\\nOn July 31, 1992, the district court denied Borland\u2019s motion
        and granted Lotus\u2019s motion in part. The district court ruled that the
        Lotus menu command hierarchy was copyrightable expression because\\n[a] very
        satisfactory spreadsheet menu tree can be constructed using different commands
        and a different command structure from those of Lotus 1-2-3. In fact, Borland
        has constructed just such an alternate tree for use in Quattro Pro\u2019s
        native mode. Even if one holds the arrangement of menu commands constant,
        it is possible to generate literally millions of satisfactory menu trees by
        varying the menu commands employed.\\nBorland II, 799 F.Supp. at 217. The
        district court demonstrated this by offering alternate command words for the
        ten commands that appear in Lotus\u2019s main menu. Id. For example, the district
        court stated that \u201C[t]he \u2018Quit\u2019 command could be named \u2018Exit\u2019
        without any other modifications,\u201D and that \u201C[t]he \u2018Copy' command
        could be called \u2018Clone,\u2019 \u2018Ditto,\u2019 \u2018Duplicate,\u2019
        \u2018Imitate,\u2019 \u2018Mimic,\u2019 \u2018Replicate,\u2019 and \u2018Reproduce,\u2019
        among others.\u201D Id. Because so many variations were possible, the district
        court concluded that the Lotus developers\u2019 choice and arrangement of
        command terms, reflected in the Lotus menu command hierarchy, constituted
        copyrightable expression.\\nIn granting partial summary judgment to Lotus,
        the district court held that Borland had infringed Lotus\u2019s copyright
        in Lotus 1-2-8:\\n[A]s a matter of law, Borland\u2019s Quattro products infringe
        the Lotus 1-2-3 copyright because of (1) the extent of copying of the \u201Cmenu
        commands\u201D and \u201Cmenu structure\u201D that is not genuinely disputed
        in this case, (2) the extent to which the copied elements of the \u201Cmenu
        commands\u201D and \u201Cmenu structure\u201D contain expressive aspects separable
        from the functions of the \u201Cmenu commands\u201D and \u201Cmenu structure,\u201D
        and (3) the scope of those copied expressive aspects as an integral part of
        Lotus 1-2-3.\\nBorland II, 799 F.Supp. at 223 (emphasis in original). The
        court nevertheless concluded that while the Quattro and Quattro Pro programs
        infringed Lotus\u2019s copyright, Borland had not copied the entire Lotus
        1-2-3 user interface, as Lotus had contended. Accordingly, the court concluded
        that a jury trial was necessary to determine the scope of Borland\u2019s infringement,
        including whether Borland copied the long prompts of Lotus 1-2-3, whether
        the long prompts contained expressive elements, and to what extent, if any,
        functional constraints limited the number of possible ways that the Lotus
        menu command hierarchy could have been arranged at the time of its creation.
        See Borland III, 831 F.Supp. at 207. Additionally, the district court granted
        Lotus summary judgment on Borland\u2019s affirmative defense of waiver, but
        not on its affirmative defenses of laches and estoppel. Borland II, 799 F.Supp.
        at 222-23.\\nImmediately following the district court\u2019s summary judgment
        decision, Borland removed the Lotus Emulation Interface from its products.
        Thereafter, Borland\u2019s spreadsheet programs no longer displayed the Lotus
        1-2-3 menus to Borland users, and as a result Borland users could no longer
        communicate with Borland\u2019s programs as if they were using a more sophisticated
        version of Lotus 1-2-3. Nonetheless, Borland\u2019s programs continued to
        be partially compatible with Lotus 1-2-3, for Borland retained what it called
        the \u201CKey Reader\u201D in its Quattro Pro programs. Once turned on, the
        Key Reader allowed Borland\u2019s programs to understand and perform some
        Lotus 1-2-3 macros. With the Key Reader on, the Borland programs used Quattro
        Pro menus for display, interaction, and macro execution, except when they
        encountered a slash (\u201C/\u201D) key in a macro (the starting key for any
        Lotus 1-2-3 macro), in which case they interpreted the macro as having been
        written for Lotus 1-2-3. Accordingly, people who wrote or purchased macros
        to shorten the time needed to perform an operation in Lotus 1-2-3 could still
        use those macros in Borland\u2019s programs. The district court permitted
        Lotus to file a supplemental complaint alleging that the Key Reader infringed
        its copyright.\\nThe parties agreed to try the remaining liability issues
        without a jury. The district court held two trials, the Phase I trial covering
        all remaining issues raised in the original complaint (relating to the Emulation
        Interface) and the Phase II trial covering all issues raised in the supplemental
        complaint (relating to the Key Reader). At the Phase I trial, there were no
        live witnesses, although considerable testimony was presented in the form
        of affidavits and deposition excerpts. The district court ruled upon evidentiary
        objections counsel interposed. At the Phase II trial, there were two live
        witnesses, each of whom demonstrated the programs for the district court.\\nAfter
        the close of the Phase I trial, the district court permitted Borland to amend
        its answer to include the affirmative defense of \u201Cfair use.\u201D Because
        Borland had presented all of the evidence supporting its fair-use defense
        dining the Phase I trial, but Lotus had not presented any evidence on fair
        use (as the defense had not been raised before the conclusion of the Phase
        I trial), the district court considered Lotus\u2019s motion for judgment on
        partial findings of fact. See Fed.R.Civ.P. 52(c). The district court held
        that Borland had failed to show that its use of the Lotus 1-2-3 menu command
        hierarchy in its Emulation Interface was a fair use. See Borland III, 831
        F.Supp. at 208.\\nIn its Phase I-trial decision, the district court found
        that \u201Ceach of the Borland emulation interfaces contains a virtually identical
        copy of the 1-2-3 menu tree and that the 1-2-3 menu tree is capable of a wide
        variety of expression.\u201D Borland III, 831 F.Supp. at 218. The district
        court also rejected Bor-land\u2019s affirmative defenses of laches and es-toppel.
        Id. at 218-23.\\nIn its Phase II-trial decision, the district court found
        that Borland\u2019s Key Reader file included \u201Ca virtually identical copy
        of the Lotus menu tree structure, but represented in a different form and
        with first letters of menu command names in place of the full menu command
        names.\u201D Borland TV, 831 F.Supp. at 228. In other words, Borland\u2019s
        programs no longer included the Lotus command terms, but only their first
        letters. The district court held that \u201Cthe Lotus menu structure, organization,
        and first letters of the command names ... constitute part of the protectable
        expression found in [Lotus 1-2-3].\u201D Id. at 233. Accordingly, the district
        court held that with its Key Reader, Borland had infringed Lotus\u2019s copyright.
        Id. at 245. The district court also rejected Borland\u2019s affirmative defenses
        of waiver, laches, estoppel, and fair use. Id. at 235-45. The district court
        then entered a permanent injunction against Borland, id. at 245, from which
        Borland appeals.\\nThis appeal concerns only Borland\u2019s copying of the
        Lotus menu command hierarchy into its Quattro programs and Borland\u2019s
        affirmative defenses to such copying. Lotus has not cross-appealed; in other
        words, Lotus does not contend on appeal that the district court erred in finding
        that Borland had not copied other elements of Lotus 1-2-3, such as its screen
        displays.\\nII.\\nDiscussion\\nOn appeal, Borland does not dispute that it
        factually copied the words and arrangement of the Lotus menu command hierarchy.
        Rather, Borland argues that it \u201Clawfully copied the unprotectable menus
        of Lotus 1-2-3.\u201D Borland contends that the Lotus menu command hierarchy
        is not copyrightable because it is a system, method of operation, process,
        or procedure foreclosed from protection by 17 U.S.C. \xA7 102(b). Borland
        also raises a number of affirmative defenses.\\nA Copyright Infringement Generally\\nTo
        establish copyright infringement, a plaintiff must prove \u201C(1) ownership
        of a valid copyright, and (2) copying of constituent elements of the work
        that are original.\u201D Feist Publications, Inc. v. Rural Tel. Serv. Co.,
        499 U.S. 340, 361, 111 S.Ct. 1282, 1296, 113 L.Ed.2d 358 (1991); see also
        Data Gen. Corp. v. Grumman Sys. Support Corp., 36 F.3d 1147, 1160 n. 19 (1st
        Cir.1994); Concrete Mach. Co. v. Classic Lawn Ornaments, Inc., 843 F.2d 600,
        605 (1st Cir.1988). To, show ownership of a valid copyright and therefore
        satisfy Feist\u2019s first prong, a plaintiff must prove that the work as
        a whole is original and that the plaintiff complied with applicable statutory
        formalities. See Engineering Dynamics, Inc. v. Structural Software, Inc.,
        26 F.3d 1335, 1340 (5th Cir.1994). \u201CIn judicial proceedings, a certificate
        of copyright registration constitutes prima facie evidence of copyrightability
        and shifts the burden to the defendant to demonstrate why the copyright is
        not valid.\u201D Bibbero Sys., Inc. v. Colwell Sys., Inc., 893 F.2d 1104,
        1106 (9th Cir.1990); see also 17 U.S.C. \xA7 410(c); Folio Impressions, Inc.
        v. Byer California, 937 F.2d 759, 763 (2d Cir.1991) (presumption of validity
        may be rebutted).\\nTo show actionable copying and therefore satisfy Feist\u2019s
        second prong, a plaintiff must first prove that the alleged infringer copied
        plaintiffs copyrighted work as a factual matter; to do this, he or she may
        either present direct evidence of factual copying or, if that is unavailable,
        evidence that the alleged infringer had access to the copyrighted work and
        that the offending and copyrighted works are so similar that the court may
        infer that there was factual copying (i.e., probative similarity). Engineering
        Dynamics, 26 F.3d at 1340; see also Concrete Mach., 843 F.2d at 606. The plaintiff
        must then prove that the copying of copyrighted material was so extensive
        that it rendered the offending and copyrighted works substantially similar.
        See Engineering Dynamics, 26 F.3d at 1341.\\nIn this appeal, we are faced
        only with whether the Lotus menu command hierarchy is copyrightable subject
        matter in the first instance, for Borland concedes that Lotus has a valid
        copyright in Lotus 1-2-3 as a whole and admits to factually copying the Lotus
        menu command hierarchy. As a result, this appeal is in a very different posture
        from most copyright-infringement cases, for copyright infringement generally
        turns on whether the defendant has copied protected expression as a factual
        matter. Because of this different posture, most copyright-infringement cases
        provide only limited help to us in deciding this appeal. This is true even
        with respect to those copyright-infringement cases that deal with computers
        and computer software.\\nB. Matter of First Impression\\nWhether a computer
        menu command hierarchy constitutes copyrightable subject matter is a matter
        of first impression in this court. While some other courts appear to have
        touched on it briefly in dicta, see, e.g., Autoskill, Inc. v. National Educ.
        Support Sys., Inc., 994 F.2d 1476, 1495 n. 23 (10th Cir.), cert. denied, \u2014
        U.S.-, 114 S.Ct. 307, 126 L.Ed.2d 254 (1993), we know of no cases that deal
        with the copyrightability of a menu command hierarchy standing on its own
        (i.e., without other elements of the user interface, such as screen displays,
        in issue). Thus we are navigating in uncharted waters.\\nBorland vigorously
        argues, however, that the Supreme Court charted our course more than 100 years
        ago when it decided Baker v. Selden, 101 U.S. 99, 25 L.Ed. 841 (1879). In
        Baker v. Selden, the Court held that Selden\u2019s copyright over the textbook
        in which he explained his new way to do accounting did not grant him a monopoly
        on the use of his accounting system. Borland argues:\\nThe facts of Baker
        v. Selden, and even the arguments advanced by the parties in that case, are
        identical to those in this case. The only difference is that the \u201Cuser
        interface\u201D of Selden\u2019s system was implemented by pen and paper rather
        than by computer.\\nTo demonstrate that Baker v. Selden and this appeal both
        involve accounting systems, Borland even supplied this court with a video
        that, with special effects, shows Selden\u2019s paper forms \u201Cmelting\u201D
        into a computer screen and transforming into Lotus 1-2-3.\\nWe do not think
        that Baker v. Selden is nearly as analogous to this appeal as Borland claims.
        Of course, Lotus 1-2-3 is a computer spreadsheet, and as such its grid of
        horizontal rows and vertical columns certainly resembles an accounting ledger
        or any other paper spreadsheet. Those grids, however, are not at issue in
        this appeal for, unlike Selden, Lotus does not claim to have a monopoly over
        its accounting system. Rather, this appeal involves Lotus\u2019s monopoly
        over the commands it uses to operate the computer. Accordingly, this appeal
        is not, as Bor-land contends, \u201Cidentical\u201D to Baker v. Selden.\\nC.
        Altai\\nBefore we analyze whether the Lotus menu command hierarchy is a system,
        method of operation, process, or procedure, we first consider the applicability
        of the test the Second Circuit set forth in Computer Assoc. Int'l, Inc. v.
        Altai, Inc., 982 F.2d 693 (2d Cir.1992). The Second Circuit designed its Altai
        test to deal with the fact that computer programs, copyrighted as \u201Cliterary
        works,\u201D can be infringed by what is known as \u201Cnonliteral\u201D copying,
        which is copying that is paraphrased or loosely paraphrased rather than word
        for word. See id. at 701 (citing nonliteral-copying cases); see also 3 Melville
        B. Nimmer & David Nimmer, Nimmer on Copyright \xA7 13.03[A][1] (1993). When
        faced with nonliteral-copying eases, courts must determine whether similarities
        are due merely to the fact that the two works share the same underlying idea
        or whether they instead indicate that the second author copied the first author\u2019s
        expression. The Second Circuit designed its Altai test to deal with this situation
        in the computer context, specifically with whether one computer program copied
        nonliteral expression from another program\u2019s code.\\nThe Altai test involves
        three steps: abstraction, filtration, and comparison. The abstraction step
        requires courts to \u201Cdissect the allegedly copied program\u2019s structure
        and isolate each level of abstraction contained within it.\u201D Altai, 982
        F.2d at 707. This step enables courts to identify the appropriate framework
        within which to separate protect-able expression from unprotected ideas. Second,
        courts apply a \u201Cfiltration\u201D step in which they examine \u201Cthe
        structural components at each level of abstraction to determine whether their
        particular inclusion at that level was \u2018idea\u2019 or was dictated by
        considerations of efficiency, so as to be necessarily incidental to that idea;
        required by factors external to the program itself; or taken from the public
        domain.\u201D Id. Finally, courts compare the protected elements of the infringed
        work (i.e., those that survived the filtration screening) to the corresponding
        elements of the allegedly infringing work to determine whether there was sufficient
        copying of protected material to constitute infringement. Id. at 710.\\nIn
        the instant appeal, we are not confronted with alleged nonliteral copying
        of computer code. Rather, we are faced with Borland\u2019s deliberate, literal
        copying of the Lotus menu command hierarchy. Thus, we must determine not whether
        nonliteral copying occurred in some amorphous sense, but rather whether the
        literal copying of the Lotus menu command hierarchy constitutes copyright
        infringement.\\nWhile the Altai test may provide a useful framework for assessing
        the alleged nonliteral copying of computer code, we find it to be of little
        help in assessing whether the literal copying of a menu command hierarchy
        constitutes copyright infringement. In fact, we think that the Altai test
        in this context may actually be misleading because, in instructing courts
        to abstract the various levels, it seems to encourage them to find a base
        level that includes copyrightable subject matter that, if literally copied,
        would make the copier liable for copyright infringement. While that base (or
        literal) level would not be at issue in a nonliteral-copying case like Altai,
        it is precisely what is at issue in this appeal. We think that abstracting
        menu command hierarchies down to their individual word and menu levels and
        then filtering idea from expression at that stage, as both the Altai and the
        district court tests require, obscures the more fundamental question of whether
        a menu command hierarchy can be copyrighted at all. The initial inquiry should
        not be whether individual components of a menu command hierarchy are expressive,
        but rather whether the menu command hierarchy as a whole can be copyrighted.
        But see Gates Rubber Co. v. Bando Chem. Indus., Ltd., 9 F.3d 823 (10th Cir.1993)
        (endorsing Altai\u2019s abstraction-filtration-comparison test as a way of
        determining whether \u201Cmenus and sorting criteria\u201D are copyrightable).\\nD.
        The Lotus Menu Command Hierarchy: A \u201CMethod of Operation\u201D\\nBorland
        argues that the Lotus menu command hierarchy is uneopyrightable because it
        is a system, method of operation, process, or procedure foreclosed from copyright
        protection by 17 U.S.C. \xA7 102(b). Section 102(b) states: \u201CIn no case
        does copyright protection for an original work of authorship extend to any
        idea, procedure, process, system, method of operation, concept, principle,
        or discovery, regardless of the form in which it is described, explained,
        illustrated, or embodied in such work.\u201D Because we conclude that the
        Lotus menu command hierarchy is a method of operation, we do not consider
        whether it could also be a system, process, or procedure.\\nWe think that
        \u201Cmethod of operation,\u201D as that term is used in \xA7 102(b), refers
        to the means by which a person operates something, whether it be a car, a
        food processor, or a computer. Thus a text describing how to operate something
        would not extend copyright protection to the method of operation itself; other
        people would be free to employ that method and to describe it in their own
        words. Similarly, if a new method of operation is used rather than described,
        other people would still be free to employ or describe that method.\\nWe hold
        that the Lotus menu command hierarchy is an uneopyrightable \u201Cmethod of
        operation.\u201D The Lotus menu command hierarchy provides the means by which
        users control and operate Lotus 1-2-3. If users wish to copy material, for
        example, they use the \u201CCopy\u201D command. If users wish to print material,
        they use the \u201CPrint\u201D command. Users must use the command terms to
        tell the computer what to do. Without the menu command hierarchy, users would
        not be able to access and control, or indeed make use of, Lotus 1-2-3\u2019s
        functional capabilities.\\nThe Lotus menu command hierarchy does not merely
        explain and present Lotus 1-2-3\u2019s functional capabilities to the user;
        it also serves as the method by which the program is operated and controlled.
        The Lotus menu command hierarchy is different from the Lotus long prompts,
        for the long prompts are not necessary to the operation of the program; users
        could operate Lotus 1-2-3 even if there were no long prompts. The Lotus menu
        command hierarchy is also different from the Lotus screen displays, for users
        need not \u201Cuse\u201D any expressive aspects of the screen displays in
        order to operate Lotus 1-2-3; because the way the screens look has little
        bearing on how users control the program, the screen displays are not part
        of Lotus 1-2-3\u2019s \u201Cmethod of operation.\u201D The Lotus menu command
        hierarchy is also different from the underlying computer code, because while
        code is necessary for the program to work, its precise formulation is not.
        In other words, to offer the same capabilities as Lotus 1-2-3, Borland did
        not have to copy Lotus\u2019s underlying code (and indeed it did not); to
        'allow users to operate its programs in substantially the same way, however,
        Bor-land had to copy the Lotus menu command hierarchy. Thus the Lotus 1-2-3
        code is not a uncopyrightable \u201Cmethod of operation.\u201D\\nThe district
        court held that the Lotus menu command hierarchy, with its specific choice
        and arrangement of command terms, constituted an \u201Cexpression\u201D of
        the \u201Cidea\u201D of operating a computer program with commands arranged
        hierarchically into menus and submenus. Borland II, 799 F.Supp. at 216. Under
        the district court\u2019s reasoning, Lotus\u2019s decision to employ hierarchically
        arranged command terms to operate its program could not foreclose its competitors
        from also employing hierarchically arranged command terms to operate their
        programs, but it did foreclose them from employing the specific command terms
        and arrangement that Lotus had used. In effect, the district court limited
        Lotus 1-2-3\u2019s \u201Cmethod of operation\u201D to an abstraction.\\nAccepting
        the district court\u2019s finding that the Lotus developers made some expressive
        choices in choosing and arranging the Lotus command terms, we nonetheless
        hold that that expression is not copyrightable because it is part of Lotus
        1-2-3\u2019s \u201Cmethod of operation.\u201D We do not think that \u201Cmethods
        of operation\u201D are limited to abstractions; rather, they are the means
        by which a user operates something. If specific words are essential to operating
        something, then they are part of a \u201Cmethod of operation\u201D and, as
        such, are unprotectable. This is so whether they must be highlighted, typed
        in, or even spoken, as computer programs no doubt will soon be controlled
        by spoken words.\\nThe fact that Lotus developers could have designed the
        Lotus menu command hierarchy differently is immaterial to the question of
        whether it is a \u201Cmethod of operation.\u201D In other words, our initial
        inquiry is not whether the Lotus menu command hierarchy incorporates any expression.
        Rather, our initial inquiry is whether the Lotus menu command hierarchy is
        a \u201Cmethod of operation.\u201D Concluding, as we do, that users operate
        Lotus 1-2-3 by using the Lotus menu command hierarchy, and that the entire
        Lotus menu command hierarchy is essential to operating Lotus 1-2-3, we do
        not inquire further whether that method of operation could have been designed
        differently. The \u201Cexpressive\u201D choices of what to name the command
        terms and how to arrange them do not magically change the uncopyrightable
        menu command hierarchy into copyrightable subject matter.\\nOur holding that
        \u201Cmethods of operation\u201D are not limited to mere abstractions is bolstered
        by Baker v. Selden. In Baker, the Supreme Court explained that\\nthe teachings
        of science and the rules and methods of useful art have their final end in
        application and use; and this application and use are what the public derive
        from the publication of a book which teaches them.... The description of the
        art in a book, though entitled to the benefit of copyright, lays no foundation
        for an exclusive claim to the art itself. The object of the one is explanation;
        the object of the other is use. The'former may be secured by copyright. The
        latter can only be secured, if it can be secured at all, by letters-patent.\\nBaker
        v. Selden, 101 U.S. at 104-05. Lotus wrote its menu command hierarchy so that
        people could learn it and use it. Accordingly, it falls squarely within the
        prohibition on copyright protection established in Baker v. Selden and codified
        by Congress in \xA7 102(b).\\nIn many ways, the Lotus menu command hierarchy
        is like the buttons used to control, say, a video cassette recorder (\u201CVCR\u201D).
        A VCR is a machine that enables one to watch and record video tapes. Users
        operate VCRs by pressing a series of buttons that are typically labelled \u201CRecord,
        Play, Reverse, Fast Forward, Pause, Stop/Eject.\u201D That the buttons are
        arranged and labeled does not make them a \u201Cliterary work,\u201D nor does
        it make them an \u201Cexpression\u201D of the abstract \u201Cmethod of operating\u201D
        a VCR via a set of labeled buttons. Instead, the buttons are themselves the
        \u201Cmethod of operating\u201D the VCR.\\nWhen a Lotus 1-2-3 user chooses
        a command, either by highlighting it on the screen or by typing its first
        letter, he or she effectively pushes a button. Highlighting the \u201CPrint\u201D
        command on the screen, or typing the letter \u201CP,\u201D is analogous to
        pressing a VCR button labeled \u201CPlay.\u201D\\nJust as one could not operate
        a buttonless VCR, it would be impossible to operate Lotus 1-2-3 without employing
        its menu command hierarchy. Thus the Lotus command terms are not equivalent
        to the labels on the VCR\u2019s buttons, but are instead equivalent to the
        buttons themselves. Unlike the labels on a VCR\u2019s buttons, which merely
        make operating a VCR easier by indicating the buttons\u2019 functions, the
        Lotus menu commands are essential to operating Lotus 1-2-3. Without the menu
        commands, there would be no way to \u201Cpush\u201D the Lotus buttons, as
        one could push unlabeled VCR buttons. While Lotus could probably have designed
        a user interface for which the command terms were mere labels, it did not
        do so here. Lotus 1-2-3 depends for its operation on use of the precise command
        terms that make up the Lotus.menu \u25A0 command hierarchy.\\nOne might argue
        that the buttons for operating a VCR are not analogous to the commands for
        operating a computer program because VCRs are not copyrightable, whereas computer
        programs are. VCRs may not be copyrighted because they do not fit within any
        of the \xA7 102(a) categories of copyrightable works; the closest they come
        is \u201Csculptural work.\u201D Sculptural works, however, are subject to
        a \u201Cuseful-article\u201D exception whereby \u201Cthe design of a useful
        article ... shall be considered a pictorial, graphic, or sculptural work only
        if, and only to the extent that, such design incorporates pictorial, graphic,
        or sculptural features that can be identified separately from, and are\\\"
        capable of existing independently of, the utilitarian aspects of the article.\u201D
        17 U.S.C. \xA7 101. A \u201Cuseful article\u201D is \u201Can article having
        an intrinsic utilitarian function that is not merely to portray the appearance
        of the article or to convey information.\u201D Id. Whatever expression there
        may be in the arrangement of the parts of a VCR is not capable of existing
        separately from the VCR itself, so an ordinary VCR would not be copyrightable.\\nComputer
        programs, unlike VCRs, are copyrightable as \u201Cliterary works.\u201D 17
        U.S.C. \xA7 102(a). Accordingly, one might argue, the \u201Cbuttons\u201D
        used to operate a computer program are not like the buttons used to operate
        a VCR, for they are not subject to a useful-article exception. The response,
        of course, is that the arrangement of buttons on a VCR would not be- copyrightable
        even without a useful-article exception, because the buttons are an uncopyrightable
        \u201Cmethod of operation.\u201D Similarly, the \u201Cbuttons\u201D of a computer
        program are also an uncopyrightable \u201Cmethod of operation.\u201D\\nThat
        the Lotus menu command hierarchy is a \u201Cmethod of operation\u201D becomes
        clearer when one considers program compatibility. Under Lotus\u2019s theory,
        if a user uses several different programs, he or she must learn how to perform
        the same operation in a different way for each program used. For example,
        if the user wanted the computer to print material, then the user would have
        to learn not just one method of operating the computer such that it prints,
        but many different methods. We find this absurd. The fact that there may be
        many different ways to operate a computer program, or even many different
        ways to operate a computer program using a set of hierarchically arranged
        command terms, does not make the actual method of operation chosen copyrightable;
        it still functions as a method for operating the computer and as such is uncopyrightable.\\nConsider
        also that users employ the Lotus menu command hierarchy in writing macros.
        Under the district court\u2019s holding, if the user wrote a macro to shorten
        the time needed to perform a certain operation in Lotus 1-2-3,, the user would
        be unable to use that macro to shorten the time needed to perform that same
        operation in another program. Rather, the user would have to rewrite his or
        her macro using that other program\u2019s menu command hierarchy. This is
        despite the fact that the macro is clearly the user\u2019s own work product.
        We think that forcing the user to cause the computer to perform the same operation
        in a different way ignores Congress\u2019s direction in \xA7 102(b) that \u201Cmethods
        of operation\u201D are not copyrightable. That programs can offer users the
        ability to write macros in many different ways does not change the fact that,
        once written,- the macro allows the user to perform an operation automatically.
        As the Lotus menu command hierarchy serves as the basis for Lotus 1-2-3 macros,
        the Lotus menu command hierarchy is a \u201Cmethod of operation.\u201D\\nIn
        holding that expression that is part of a \u201Cmethod of operation\u201D
        cannot be copyrighted, we do not understand ourselves to go against the Supreme
        Court\u2019s holding in Feist In Feist, the Court explained:\\nThe primary
        objective of copyright is not to reward the labor of authors, but to promote
        the Progress of Science and useful Arts. To this end, copyright assures authors
        the right to their original expression, but encourages others to- build freely
        upon the ideas and information conveyed by a work.\\nFeist, 499 U.S. at 349-50,
        111 S.Ct. at 1290 (quotations and citations omitted). We do not think that
        the Court\u2019s statement that \u201Ccopyright assures authors the right
        to their original expression\u201D indicates that all expression is necessarily
        copyrightable; while original expression is necessary for copyright protection,
        we do not think that it is alone sufficient. Courts must still inquire whether
        original expression falls within one of the categories foreclosed from copyright
        protection by \xA7 102(b), such as being a \u201Cmethod of operation.\u201D\\nWe
        also note that in most contexts, there is no need to \u201Cbuild\u201D upon
        other people\u2019s expression, for the ideas conveyed by that expression
        can be conveyed by someone else without copying the first author\u2019s expression.
        In the context of methods of operation, however, \u201Cbuilding\u201D requires
        the use of the precise method of operation already employed; otherwise, \u201Cbuilding\u201D
        would require dismantling, too. Original developers are not the only people
        entitled to build on the methods of operation they create; anyone can. Thus,
        Borland may build on the method of operation that Lotus designed and may use
        the Lotus menu command hierarchy in doing so.\\nOur holding that methods of
        operation are not limited to abstractions goes against Autoskill, 994 F.2d
        at 1495 n. 23, in which the Tenth Circuit rejected the defendant\u2019s argument
        that the keying procedure used in a computer program was an uncopyrightable
        \u201Cprocedure\u201D or \u201Cmethod of operation\u201D under \xA7 102(b).
        The program at issue, which was designed t\xF3 test and train students with
        reading deficiencies, id. at 1481, required students to select responses to
        the program\u2019s queries \u201Cby pressing the 1, 2, or 3 keys.\u201D Id.
        at 1495 n. 23. The Tenth Circuit held that, \u201Cfor purposes of the preliminary
        injunction, ... the record showed that [this] keying procedure reflected at
        least a minimal degree of creativity,\u201D as required by Feist for copyright
        protection. Id. As an initial matter, we question whether a programmer\u2019s
        decision to have users select a response by pressing the 1,\u20192, or 3 keys
        is original. More importantly, however, we fail to see how \u201Ca student
        selecting] a response by pressing the 1, 2, or 3 keys,\u201D id., can be anything
        but an unprotectable method of operation.\\nIII.\\nConclusion\\nBecause we
        hold that the Lotus menu command hierarchy is uneopyrightable subject matter,
        we further hold that Borland did not infringe Lotus\u2019s copyright by copying
        it. Accordingly, we need not consider any of Bor-land\u2019s affirmative defenses.
        The judgment of the district court is\\nReversed.\\nConcurrence follows.\\n.
        Judge Keeton presided over both the Paperback litigation and this case.\\n.
        Lotas 1-2-3 utilizes a two-line menu; the top line lists the commands from
        which the user may choose, and the bottom line displays what Lotus calls its
        \\\"long prompts.\u201D The long prompts explain, as a sort of \u201Chelp
        text,\u201D what the highlighted menu command will do if entered. For example,
        the long prompt for the \\\"Worksheet\u201D command displays the submenu that
        the \\\"Worksheet\u201D command calls up; it reads \\\"Global, Insert, Delete,
        Column, Erase, Titles, Window, Status, Page.\\\" The long prompt for the \u201CCopy\u201D
        command explains what function the \u201CCopy\u201D command will perform;
        \u201CCopy a cell or range of cells.\u201D The long prompt for the \\\"Quit\\\"
        command reads, \u201CEnd 1-2-3 session (Have you saved your work?).\u201D\\nPrior
        to trial, the parties agreed to exclude the copying of the long prompts from
        the case; Lotus agreed not to contend that Borland had copied the long prompts,
        Borland agreed not to argue that it had not copied the long prompts, and both
        sides agreed not to argue that the issue of whether Borland had copied the
        long prompts was material to any other issue in the case. See Borland III,
        831 F.Supp. at 208.\\n. Because Borland's programs could no longer display
        the Lotus menu command hierarchy to users, the Key Reader did not allow debugging
        or modification of macros, nor did it permit the execution of most interactive
        macros.\\n. See Borland IV, 831 F.Supp. at 226-27, for a more detailed explanation
        of macros and the Key Reader.\\n. Computer programs receive copyright protection
        as \u201Cliterary works.\u201D See 17 U.S.C. \xA7 102(a)(1) (granting protection
        to \u201Cliterary works\u201D) and 17 U.S.C. \xA7 101 (defining \\\"literary
        works\u201D as \\\"works ... expressed in words, numbers, or other verbal
        or numerical symbols or indicia, regardless of the nature of the material
        objects, such as books, periodicals, phonorecords, film, tapes, disks, or
        cards, in which they are embodied\\\" (emphasis added)); see also H.R.Rep.
        No. 1476, 94th Cong., 2d Sess. 54 (1976), reprinted in 1976 U.S.C.C.A.N. 5659,
        5667 (\\\"The term \u2018literary works' ... includes computer data bases,
        and computer programs to the extent that they incorporate authorship in the
        programmer\u2019s expression of original ideas, as distinguished from the
        ideas themselves.\u201D).\\n. Selden's system of double-entry bookkeeping
        is the now almost-universal T-accounts system.\\n. We consider the Altai test
        because both parties and many of the amici focus on it so heavily. Borland,
        in particular, is highly critical of the district court for not employing
        the Altai test. Borland does not, however, indicate how using that test would
        have been dispositive in Bor-land's favor. Interestingly, Borland appears
        to contradict its own reasoning at times by criticizing the applicability
        of the Altai test.\\n. We recognize that Altai never states that every work
        contains a copyrightable \u201Cnugget\\\" of pro-tectable expression. Nonetheless,
        the implication is that for literal copying, \\\"it is not necessary to determine
        the level of abstraction at which similarity ceases to consist of an 'expression
        of ideas,' because literal similarity by definition is always a similarity
        as to the expression of ideas.\u201D 3 Melville B. Nimmer & David Nimmer,
        Nimmer on Copyright \xA7 13.03[A](2) (1993).\\n. As the Lotus long prompts
        are not before us on appeal, we take no position on their copyright-ability,
        although we do note that a strong argument could be made that the brief explanations
        they provide \\\"merge\u201D with the underlying idea of explaining such functions.
        See Morrissey v. Procter & Gamble Co., 379 F.2d 675, 678-79 (1st Cir.1967)
        (when the possible ways to express an idea are limited, the expression \\\"merges\u201D
        with the idea and is therefore uncopyrightable; when merger occurs, identical
        copying is permitted).\\n.As they are not before us on appeal, we take no
        position on whether the Lotus 1-2-3 screen displays constitute original expression
        capable of being copyrighted.\\n. Because the Lotus 1-2-3 code is not before
        us on appeal, we take no position on whether it is copyrightable. We note,
        however, that original computer codes generally are protected by copyright.
        See, e.g., Altai, 982 F.2d at 702 (\\\"It is now well settled that the literal
        elements of computer programs, i.e., their source and object codes, are the
        subject of copyright protection.\u201D) (citing cases).\\n. We think that
        the Altai test would contemplate this being the initial inquiry.\\n. When
        there are a limited number of ways to express an idea, however, the expression
        \u201Cmerges\u201D with the idea and becomes uncopyrightable. Morrissey, 379
        F.2d at 678-79.\\n. The Ninth Circuit has also indicated in dicta that \\\"menus,
        and keystrokes\u201D may be copyrightable. Brown Bag Software v. Symantec
        Corp., 960 F.2d 1465, 1477 (9th Cir.), cert. denied, BB Asset Management,
        Inc. v. Symantec Corp., \u2014 U.S. -, 113 S.Ct. 198, 121 L.Ed.2d 141 (1992).
        In that case, however, the plaintiff did not show that the defendant had copied
        the plaintiffs menus or keystrokes, so the court was not directly faced with
        whether the menus or keystrokes constituted an unprotectable method of operation.
        Id.\",\"type\":\"majority\"},{\"author\":\"BOUDIN, Circuit Judge,\",\"text\":\"BOUDIN,
        Circuit Judge,\\nconcurring.\\nThe importance of this ease, and a slightly
        different emphasis in my view of the underlying problem, prompt me to add
        a few words to the majority\u2019s tightly focused discussion.\\nI.\\nMost
        of the law of copyright and the \u201Ctools\u201D of analysis have developed
        in the context of literary works such as novels, plays, and films. In this
        milieu, the principal problem \u2014 simply stated, if difficult to resolve
        \u2014 is to stimulate creative expression without unduly limiting access
        by others to the broader themes and concepts deployed by the author. The middle
        of the spectrum presents close cases; but a \u201Cmistake\u201D in providing
        too much protection involves a small cost: subsequent authors treating the
        same themes must take a few more steps away from the original expression.\\nThe
        problem presented by computer programs is fundamentally different in one re-speet.
        The computer program is a means for causing something to happen; it has a
        mechanical utility, an instrumental role, in accomplishing the world\u2019s
        work. Granting protection, in other words, can have some of the consequences
        of patent protection in limiting other people\u2019s ability to perform a
        task in the most efficient manner. Utility does not bar copyright (dictionaries
        may be copyrighted), but it alters the calculus.\\nOf course, the argument
        for protection is undiminished, perhaps even enhanced, by utility: if we want
        more of an intellectual product, a temporary monopoly for the creator provides
        incentives for others to create other, different items in this class. But
        the \u201Ccost\u201D side of the equation may be different where one places
        a very high value on public access to a useful innovation that may be the
        most efficient means of performing a given task. Thus, the argument for extending
        protection may be the same; but the stakes on the other side are much higher.\\nIt
        is no accident that patent protection has preconditions that copyright protection
        does not \u2014 notably, the requirements of novelty and non-obviousness \u2014
        and that patents are granted for a shorter period than copyrights. This problem
        of utility has sometimes manifested itself in copyright cases, such as Baker
        v. Selden, 101 U.S. 99, 25 L.Ed. 841 (1879), and been dealt with through various
        formulations that limit copyright or create limited rights to copy. But the
        case law and doctrine addressed to utility in copyright have been brief detours
        in the general march of copyright law.\\nRequests for the protection of computer
        menus present the concern with fencing off access to the commons in an acute
        form. A new menu may be a creative work, but over time its importance may
        come to reside more in the investment that has been made by users in learning
        the menu and in building their own mini-programs \u2014 macros\u2014in reliance
        upon the menu. Better typewriter keyboard layouts may exist, but the familiar
        QWERTY keyboard dominates the market because that is what everyone has learned
        to use. See P. David, CLIO and the Economics of QWERTY, 75 Am.Econ.Rev. 332
        (1985). The QWERTY keyboard is nothing other than a menu of letters.\\nThus,
        to assume that computer programs are just one more new means of expression,
        like a filmed play, may be quite wrong. The \u201Cform\u201D \u2014 the written
        source code or the menu structure depicted on the screen \u2014 look hauntingly
        like the familiar stuff of copyright; but the \u201Csubstance\u201D probably
        has more to do with problems presented in patent law or, as already noted,
        in those rare cases where copyright law has confronted industrially useful
        expressions. Applying copyright law to computer programs is like assembling
        a jigsaw puzzle whose pieces do not quite fit.\\nAll of this would make no
        difference if Congress had squarely confronted the issue, and given explicit
        directions as to what should be done. The Copyright Act of 1976 took a different
        course. While Congress said that computer programs might be subject to copyright
        protection, it said this in very general terms; and, especially in \xA7 102(b),
        Congress adopted a string of exclusions that if taken literally might easily
        seem to exclude most computer programs from protection. The only detailed
        prescriptions for computers involve narrow issues (like back-up copies) of
        no relevance here.\\nOf course, one could still read the statute as a congressional
        command that the familiar doctrines of copyright law be taken and applied
        to computer programs, in cookie cutter fashion, as if the programs were novels
        or play scripts. Some of the eases involving computer programs embody this
        approach. It seems to be mistaken on two different grounds: the tradition
        of copyright law, and the likely intent of Congress.\\nThe broad-brush conception
        of copyright protection, the time limits, and the formalities have long been
        prescribed by statute. But the heart of copyright doctrine \u2014 what may
        be protected and with what limitations and exceptions \u2014 has been developed
        by the courts through experience with individual cases. B. Kaplan, An Unhurried
        View of Copyright 40 (1967). Occasionally Congress addresses a problem in
        detail. For the most part the interstitial development of copyright through
        the courts is our tradition.\\nNothing in the language or legislative history
        of the 1976 Act, or at least nothing brought to our attention, suggests that
        Congress meant the courts to abandon this case-by-case approach. Indeed, by
        setting up \xA7 102(b) as a counterpoint theme, Congress has arguably recognized
        the tension and left it for the courts to resolve through the development
        of ease law. And case law development is adaptive: it allows new problems
        to be solved with help of earlier doctrine, but it does not preclude new doctrines
        to meet new situations.\\nII.\\nIn this case, the raw facts are mostly, if
        not entirely, undisputed. Although the inferences to be drawn may be more
        debatable, it is very hard to see that Borland has shown any interest in the
        Lotus menu except as a fall-back option for those users already committed
        to it. by prior experience or in order to run their own macros using 1-2-3
        commands. At least for the amateur, accessing the Lotus menu in the Borland
        Quattro or Quattro Pro program takes some effort.\\nPut differently, it is
        unlikely that users who value the Lotus menu for its own sake\u2014 independent
        of any investment they have made themselves in learning Lotus\u2019 commands
        or creating macros dependent upon them \u2014 would choose the Borland program
        in order to secure access to the Lotus menu. Borland\u2019s success is due
        primarily to other features. Its rationale for deploying the Lotus menu bears
        the ring of truth.\\nNow, any use of the Lotus menu by Bor-land is a commercial
        use and deprives Lotus of a portion of its \u201Creward,\u201D in the sense
        that an infringement claim if allowed would increase Lotus\u2019 profits.
        But this is circular reasoning: broadly speaking, every limitation on copyright
        or privileged use diminishes the reward of the original creator. Yet not every
        writing is copyrightable or every use an infringement. The provision of reward
        is one concern of copyright law, but it is not the only one. If it were, copyrights
        would be perpetual and there would be no exceptions.\\nThe present case is
        an unattractive one for copyright protection of the menu. The menu, commands
        (e.g., \u201Cprint,\u201D \u201Cquit\u201D) are largely for standard procedures
        that Lotus did not invent and are common words that Lotus cannot monopolize.
        What is left is the particular combination and sub-grouping of commands in
        a pattern devised by Lotus. This arrangement may have a more appealing logic
        and ease of use than some other configurations; but there is a certain arbitrariness
        to many of the choices.\\nIf Lotus is granted a monopoly on this pattern,
        users who have learned the command structure of Lotus 1-2-3 or devised their
        own macros are locked into Lotus, just as a typist who has learned the QWERTY
        keyboard would be the captive of anyone who had a monopoly on the production
        of such a keyboard. Apparently, for a period Lotus 1-2-3 has had such sway
        in the market that it has represented the de facto standard for electronic
        spreadsheet commands. So long as Lotus is the superior spreadsheet \u2014
        either in quality or in price \u2014 there may be nothing wrong with this
        advantage.\\nBut if a better spreadsheet comes along, it is hard to see why
        customers who have learned the Lotus menu and devised macros for it should
        remain captives of Lotus because of an investment in learning made by the
        users and not by Lotus. Lotus has already reaped a substantial reward for
        being first; assuming that the Borland program is now better, good reasons
        exist for freeing it to attract old Lotus customers: to enable the old customers
        to take advantage of a new advance, and to reward Borland in turn for making
        a better product. If Bor-land has not made a better product, then customers
        will remain with Lotus anyway.\\nThus, for me the question is not whether
        Borland should prevail but on what basis. Various avenues might be traveled,
        but the main choices are between holding that the menu is not protectable
        by copyright and devising a new doctrine that Borland\u2019s use is privileged.
        No solution is perfect and no intermediate appellate court can make the final
        choice.\\nTo call the menu a \u201Cmethod of operation\u201D is, in the common
        use of those words, a defensible position. After all, the purpose of the menu
        is not to be admired as a work of literary or pictorial art. It is to transmit
        directions from the user to the computer, i.e., to operate the computer. The
        menu is also a \u201Cmethod\u201D in the dictionary sense because it is a
        \u201Cplanned way of doing something,\u201D an \u201Corder or system,\u201D
        and (aptly here) an \u201Corderly or systematic arrangement, sequence or the
        like.\u201D Random House Webster\u2019s College Dictionary 853 (1991).\\nA
        different approach would be to say that Borland\u2019s use is privileged because,
        in the context already described, it is not seeking to appropriate the advances
        made by Lotus\u2019 menu; rather, having provided an arguably more attractive
        menu of its own, Borland is merely trying to give former Lotus users an option
        to exploit their own prior investment in learning or in macros. The difference
        is that such a privileged use approach would not automatically protect Borland
        if it had simply copied the Lotus menu (using different codes), contributed
        nothing of its own, and resold Lotus under the Borland label.\\nThe closest
        analogue in conventional copyright is the fair use doctrine. E.g., Harper
        & Row, Publishers, Inc. v. Nation Enters., 471 U.S. 539, 105 S.Ct. 2218, 85
        L.Ed.2d 588 (1985). Although invoked by Borland, it has largely been brushed
        aside in this case because the Supreme Court has said that it is \u201Cpresumptively\u201D
        unavailable where the use is a \u201Ccommercial\u201D one. See id. at 562,
        105 S.Ct. at 2231-32. But see Campbell v. Acuff-Rose Music, Inc., \u2014 U.S.
        -, -, 114 S.Ct. 1164, 1174; 127 L.Ed.2d 500 (1994). In my view, this is something
        less than a definitive answer; \u201Cpresumptively\u201D does not mean \u201Calways\u201D
        and, in any event, the doctrine of fair use was created by the courts and
        can- be adapted to new purposes.\\nBut a privileged use doctrine would certainly
        involve problems of its own. It might more closely tailor the limits on copyright
        protection to the reasons for limiting that protection; but it would entail
        a host of administrative problems that would cause cost and delay, and would
        also reduce the ability of the industry to predict outcomes. Indeed, to the
        extent that Lotus\u2019 menu is an important standard in the industry, it
        might be argued that any use ought to be deemed privileged.\\nIn sum, the
        majority\u2019s result persuades me and its formulation is as good, if not
        better, than any other that occurs to me now as within the reach of courts.
        Some solutions {e.g., a very short copyright period for menus) are not options
        at all for courts but might be for Congress. In all events, the choices are
        important ones of policy, not linguistics, and they should be made with the
        underlying considerations in view.\",\"type\":\"concurrence\"}],\"judges\":[\"Before
        TORRUELLA, Chief Judge, BOUDIN and STAHL, Circuit Judges.\"],\"head_matter\":\"LOTUS
        DEVELOPMENT CORPORATION, Plaintiff, Appellee, v. BORLAND INTERNATIONAL, INC.,
        Defendant, Appellant.\\nNo. 93-2214.\\nUnited States Court of Appeals, First
        Circuit.\\nHeard Oct. 6, 1994.\\nDecided March 9, 1995.\\nGary L. Rebaek,
        with whom Peter N. Det-kin, Michael Barclay, Isabella E. Fu, Wilson Sonsini
        Goodrich & Rosati, P.C., Palo Alto, CA, Peter E. Gelhaar, Katherine L. Parks,
        and Donnelly Conroy & Gelhaar, Boston, MA, were on brief for appellant.\\nMatthew
        P. Poppel, Boston, MA, et ah, were on brief for Computer Scientists, ami-cus
        curiae.\\nDennis S. Karjala, Tempe, AZ, and Peter S. Menell, Berkeley, CA,
        on brief, amici curiae.\\nJeffrey C. Cannon and Baker Keaton Sei-bel & Cannon,
        Walnut Creek, CA, were on brief for Computer Software Industry Ass\u2019n,
        amicus curiae.\\nLaureen E. McGurk, David A. Rabin, Bryan G. Harrison and
        Morris Manning & Martin, Atlanta, GA, were on brief for Chicago Computer Soc.,
        Diablo Users Group, Dan-bury Area Computer Soc., IBM AB Users Group, Kentucky-Indiana
        Personal Computer Users Group, Long Island PC Users Group, Napa Valley PC
        Users Group, Pacific Northwest PC Users Group, Palmetto Personal Computer
        Club, Philadelphia Area Computer Soc., Inc., Phoenix IBM PC Users Group, Pinellas
        IBM PC Users Group, Quad Cities Computer Soc., Quattro Pro Users Group, Sacramento
        PC Users Group, San Francisco PC Users Group, Santa Barbara PC Users Group,
        Twin Cities PC Users Group, and Warner Robbins Personal Computer Ass\u2019n,
        amici curiae.\\nDiane Marie O\u2019Malley and Hanson Bridgett Marcus Vlahos
        & Rudy, San Francisco, CA, were on brief for Software Entrepreneurs\u2019
        Forum, amicus curiae.\\nPeter M.C. Choy, Mountain View, CA, was on brief for
        American Committee for Interoperable Systems, amicus curiae.\\nHoward B. Abrams,
        Detroit, MI, Howard C. Anawalt, Santa Clara, CA, Stephen R. Barnett, Berkeley,
        CA, Ralph S. Brown, Stephen L. Carter, New Haven, CT, Amy B. Cohen, Longmeadow,
        MA, Paul J. Heald, Athens, GA, Peter A. Jaszi, John A. Kidwell, Madison, WI,
        Edmund W. Kitch, Charlottes-ville, VA, Roberta R. Kwall, Chicago, IL, David
        L. Lange, Durham, NC, Marshall Leafier, Toledo, OH, Jessica D. Litman, Ann
        Arbor, MI, Charles R. McManis, St. Louis, MO, L. Ray Patterson, Athens, GA,
        Jerome H. Reichman, David A. Rice, Chestnut Hill, MA, Pamela Samuelson, Pittsburgh,
        PA, David J. Seipp, Boston, MA, David E. Ship-ley, Lexington, KY, Lionel S.
        Sobel, Santa Monica, CA, Alfred C. Yen, Newton, MA, and Diane L. Zimmerman,
        New York City, were on brief for Copyright Law Professors, amicus curiae.\\nHenry
        B. Gutman, Baker & Botts, LLP, with whom Kerry L. Konrad, Joshua H. Epstein,
        Kimberly A. Caldwell, O\u2019Sullivan Graev & Karabell, New York City, Thomas
        M. Lemberg, James C. Burling, and Hale and Dorr, Boston, MA, were on brief
        for appellee.\\nMorton David Goldberg, June M. Besek, David 0. Carson, Jesse
        M. Feder, Schwab Goldberg Price & Dannay, New York City, and Arthur R. Miller,
        Cambridge, MA, were on brief for Apple Computer, Inc., Digital Equip. Corp.,
        International Business Machines Corp., and Xerox Corp., amici curiae.\\nJon
        A. Baumgarten, Proskauer Rose Goetz & Mendelsohn,\u2019 and Robert A. Gorman,
        New York City, were on brief for Adobe Systems, Inc., Apple Computer, Inc.,
        Computer Associates Intern., Inc., Digital Equip. Corp., and International
        Business Machines Corp., amici curiae.\\nHerbert F. Schwartz, Vincent N. Palladi-no,
        Susan Progoff, Fish & Neave, New York City, William J. Cheeseman, and Foley
        Hoag & Eliot, Boston, MA, were on brief for Computer and Business Equip. Mfrs.
        Ass\u2019n, ami-cus curiae.\\nBefore TORRUELLA, Chief Judge, BOUDIN and STAHL,
        Circuit Judges.\"}}}]}"
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Headers:
      - Authorization
      Access-Control-Allow-Origin:
      - '*'
      Allow:
      - GET, HEAD, OPTIONS
      CF-Cache-Status:
      - MISS
      CF-RAY:
      - 8861a8f4d8234752-DFW
      Cache-Control:
      - s-maxage=0, max-age=0
      Connection:
      - keep-alive
      Content-Disposition:
      - attachment; filename="CAP_2024-05-19 05:24:19.882927.json"
      Content-Encoding:
      - gzip
      Content-Length:
      - '23258'
      Content-Type:
      - application/json
      Date:
      - Sun, 19 May 2024 05:24:20 GMT
      Last-Modified:
      - Sun, 19 May 2024 05:24:19 GMT
      Referrer-Policy:
      - same-origin
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15768000
      Vary:
      - Accept, Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
    status:
      code: 200
      message: OK
version: 1
