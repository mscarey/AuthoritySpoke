interactions:
- request:
    body: reporter=F.3d&volume=750&page=1339
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
    method: GET
    uri: https://www.courtlistener.com/api/rest/v4/citation-lookup/
  response:
    body:
      string: "[{\"citation\":\"750 F.3d 1339\",\"normalized_citations\":[\"750 F.3d
        1339\"],\"start_index\":0,\"end_index\":13,\"status\":200,\"error_message\":\"\",\"clusters\":[{\"resource_uri\":\"https://www.courtlistener.com/api/rest/v4/clusters/2673149/\",\"id\":2673149,\"absolute_url\":\"/opinion/2673149/oracle-america-inc-v-google-inc/\",\"panel\":[],\"non_participating_judges\":[],\"docket_id\":260804,\"docket\":\"https://www.courtlistener.com/api/rest/v4/dockets/260804/\",\"sub_opinions\":[\"https://www.courtlistener.com/api/rest/v4/opinions/2673149/\"],\"citations\":[{\"volume\":750,\"reporter\":\"F.3d\",\"page\":\"1339\",\"type\":1},{\"volume\":110,\"reporter\":\"U.S.P.Q.
        2d (BNA)\",\"page\":\"1985\",\"type\":4},{\"volume\":2014,\"reporter\":\"WL\",\"page\":\"1855277\",\"type\":7},{\"volume\":2014,\"reporter\":\"U.S.
        App. LEXIS\",\"page\":\"8744\",\"type\":6}],\"date_created\":\"2015-12-02T08:49:17.791662-08:00\",\"date_modified\":\"2024-11-04T22:22:35.435828-08:00\",\"judges\":\"O\u2019Malley,
        Plager, Taranto\",\"date_filed\":\"2014-05-09\",\"date_filed_is_approximate\":false,\"slug\":\"oracle-america-inc-v-google-inc\",\"case_name_short\":\"\",\"case_name\":\"Oracle
        America, Inc. v. Google Inc.\",\"case_name_full\":\"ORACLE AMERICA, INC.,
        Plaintiff-Appellant, v. GOOGLE INC., Defendant-Cross-Appellant\",\"scdb_id\":\"\",\"scdb_decision_direction\":null,\"scdb_votes_majority\":null,\"scdb_votes_minority\":null,\"source\":\"CU\",\"procedural_history\":\"\",\"attorneys\":\"E.
        Joshua Rosenkranz, Orrick, Herring-ton & Sutcliffe LLP, of New York, New York,
        argued for plaintiff-appellant. With him on the brief were Mark S. Davies,
        Andrew D. Silverman, Kelly M. Daley; and Annette L. Hurst, Gabriel M. Ramsey,
        and Elizabeth C. McBride, of San Francisco, CA. Of counsel on the brief were
        Dorian E. Daley, Deborah K. Miller, Matthew Sarboraria, and Andrew C. Temkin,
        Oracle America, Inc., of Redwood Shores, CA; and Dale M. Cendali, Diana M.
        Torres, Sean B. Fernandes, and Joshua L. Simmons, Kirkland & Ellis LLP, of
        New York, NY. Of counsel were Susan M. Davies, Kirkland & Ellis LLP, of New
        York, NY; Michael A. Jacobs, Morrison & Foerster LLP, of San Francisco, CA;
        and Kenneth A. Kuwayti, of Palo Alto, CA., Robert A. Van Nest, Keker & Van
        Nest LLP, of San Francisco, CA, argued for defendant-cross-appellant. With
        him on the brief were Christa M. Anderson, Steven A. Hirsch, Michael S. Kwun,
        and Daniel E. Jackson. Of counsel on the brief were Ian C. Ballon and Heather
        Meeker, Greenberg Traurig, LLP, of East Palo Alto, CA; Renny Hwang, Google
        Inc., of Mountain View, CA; and Daryl L. Joseffer and Bruce W. Baber, King
        & Spalding LLP, of Washington, DC., Marcia B. Paul, Davis Wright Tremaine
        LLP, of New York, NY, for amicus curiae Ralph Oman. With her on the brief
        were Lacy H. Koonce, III and Deborah A. Adler., William A. Rudy, Lathrop &
        Gage LLP, of Kansas City, MO, for amici curiae Picture Archive Council of
        America, Inc., et al. With him on the brief were Carole E. Handler and Brianna
        E. Dahlberg, of Los Angeles, CA., Gregory G. Garre, Latham & Watkins, LLP,
        of Washington, DC, for amici curiae Microsoft Corporation, et al. With him
        on the brief was Lori Alvino McGill. Of counsel on the brief were Paul T.
        Dacier, Krishnendu Gupta, EMC Corporation, of Hopkinton, MA; and Douglas Luftman,
        Netapp, Inc., of Sunnyvale, CA., Jared Bobrow, Weil, Gotshal & Manges LLP,
        of Redwood Shores, CA, for amici curiae Eugene H. Spafford, Ph.D., et al.
        With him on the brief was Aaron Y. Huang., Matthew S. Heilman, Jenner & Block
        LLP, of Washington, DC, for amicus curiae BSA/The Software Alliance. With
        him on the brief was Paul M. Smith., Steven T. Cottreau, Clifford Chance U.S.
        LLP, of Washington, DC, for amici curiae, Scott McNealy, et al., Meredith
        Jacob, Program on Information Justice and Intellectual Property, American
        University, Washington College of Law, of Washington, DC, for amici curiae
        Intellectual Property Law Professors., Julie P. Samuels, Electronic Frontier
        Foundation, of San Francisco, CA, for amici curiae Computer Scientists. With
        her on the brief was Michael Barclay. Of counsel on the brief was Jason M.
        Schultz, NYU Technology Law and Policy Clinic, NYU School of Law, of New York,
        NY., Jonathan Band, Jonathan Band PLLC, of Washington, DC, filed a brief for
        amicus curiae Computer & Communications Industry Association. With him on
        the brief was Matthew Schruers, Computer & Communications Industry Association,
        of Washington, DC., Chad Ruback, The Ruback Law Firm, of Dallas, TX, filed
        a brief for amici curiae Rackspace US, Inc., et al., Jennifer M. Urban, Samuelson
        Law, Technology and Public Policy Clinic, U.C. Berkeley School of Law, of
        Berkeley, CA for amici curiae Software Innovators, et al.\",\"nature_of_suit\":\"\",\"posture\":\"\",\"syllabus\":\"\",\"headnotes\":\"\",\"summary\":\"\",\"disposition\":\"\",\"history\":\"\",\"other_dates\":\"\",\"cross_reference\":\"\",\"correction\":\"\",\"citation_count\":28,\"precedential_status\":\"Published\",\"date_blocked\":null,\"blocked\":false,\"filepath_json_harvard\":\"law.free.cap.f3d.750/1339.4066790.json\",\"filepath_pdf_harvard\":\"harvard_pdf/2673149.pdf\",\"arguments\":\"\",\"headmatter\":\"<parties
        id=\\\"b1363-9\\\">\\n    ORACLE AMERICA, INC., Plaintiff-Appellant, v. GOOGLE
        INC., Defendant-Cross-Appellant.\\n   </parties><br><docketnumber id=\\\"b1363-12\\\">\\n
        \   Nos. 2013-1021, 2013-1022.\\n   </docketnumber><br><court id=\\\"b1363-13\\\">\\n
        \   United States Court of Appeals, Federal Circuit.\\n   </court><br><decisiondate
        id=\\\"b1363-14\\\">\\n    May 9, 2014.\\n   </decisiondate><br><attorneys
        id=\\\"b1370-13\\\">\\n<span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1346\\\"> \\n     *1346\\n     </span>\\n    E. Joshua Rosenkranz,
        Orrick, Herring-ton &amp; Sutcliffe LLP, of New York, New York, argued for
        plaintiff-appellant. With him on the brief were Mark S. Davies, Andrew D.
        Silverman, Kelly M. Daley; and Annette L. Hurst, Gabriel M. Ramsey, and Elizabeth
        C. McBride, of San Francisco, CA. Of counsel on the brief were Dorian E. Daley,
        Deborah K. Miller, Matthew Sarboraria, and Andrew C. Temkin, Oracle America,
        Inc., of Redwood Shores, CA; and Dale M. Cendali, Diana M. Torres, Sean B.
        Fernandes, and Joshua L. Simmons, Kirkland &amp; Ellis LLP, of New York, NY.
        Of counsel were Susan M. Davies, Kirkland &amp; Ellis LLP, of New York, NY;
        Michael A. Jacobs, Morrison &amp; Foerster LLP, of San Francisco, CA; and
        Kenneth A. Kuwayti, of Palo Alto, CA.\\n   </attorneys><br><attorneys id=\\\"b1370-15\\\">\\n
        \   Robert A. Van Nest, Keker &amp; Van Nest LLP, of San Francisco, CA, argued
        for defendant-cross-appellant. With him on the brief were Christa M. Anderson,
        Steven A. Hirsch, Michael S. Kwun, and Daniel E. Jackson. Of counsel on the
        brief were Ian C. Ballon and Heather Meeker, Greenberg Traurig, LLP, of East
        Palo Alto, CA; Renny Hwang, Google Inc., of Mountain View, CA; and Daryl L.
        Joseffer and Bruce W. Baber, King &amp; Spalding LLP, of Washington, DC.\\n
        \  </attorneys><br><attorneys id=\\\"b1370-16\\\">\\n    Marcia B. Paul, Davis
        Wright Tremaine LLP, of New York, NY, for amicus curiae Ralph Oman. With her
        on the brief were Lacy H. Koonce, III and Deborah A. Adler.\\n   </attorneys><br><attorneys
        id=\\\"b1370-17\\\">\\n    William A. Rudy, Lathrop &amp; Gage LLP, of Kansas
        City, MO, for amici curiae Picture Archive Council of America, Inc., et al.
        With him on the brief were Carole E. Handler and Brianna E. Dahlberg, of Los
        Angeles, CA.\\n   </attorneys><br><attorneys id=\\\"b1370-18\\\">\\n    Gregory
        G. Garre, Latham &amp; Watkins, LLP, of Washington, DC, for amici curiae Microsoft
        Corporation, et al. With him on the brief was Lori Alvino McGill. Of counsel
        on the brief were Paul T. Dacier, Krishnendu Gupta, EMC Corporation, of Hopkinton,
        MA; and Douglas Luftman, Netapp, Inc., of Sunnyvale, CA.\\n   </attorneys><br><attorneys
        id=\\\"b1370-19\\\">\\n    Jared Bobrow, Weil, Gotshal &amp; Manges LLP, of
        Redwood Shores, CA, for amici curiae Eugene H. Spafford, Ph.D., et al.\\n
        \   <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1347\\\">
        \\n     *1347\\n     </span>\\n    With him on the brief was Aaron Y. Huang.\\n
        \  </attorneys><br><attorneys id=\\\"b1371-5\\\">\\n    Matthew S. Heilman,
        Jenner &amp; Block LLP, of Washington, DC, for amicus curiae BSA/The Software
        Alliance. With him on the brief was Paul M. Smith.\\n   </attorneys><br><attorneys
        id=\\\"b1371-6\\\">\\n    Steven T. Cottreau, Clifford Chance U.S. LLP, of
        Washington, DC, for amici curiae, Scott McNealy, et al.\\n   </attorneys><br><attorneys
        id=\\\"b1371-7\\\">\\n    Meredith Jacob, Program on Information Justice and
        Intellectual Property, American University, Washington College of Law, of
        Washington, DC, for amici curiae Intellectual Property Law Professors.\\n
        \  </attorneys><br><attorneys id=\\\"b1371-8\\\">\\n    Julie P. Samuels,
        Electronic Frontier Foundation, of San Francisco, CA, for amici curiae Computer
        Scientists. With her on the brief was Michael Barclay. Of counsel on the brief
        was Jason M. Schultz, NYU Technology Law and Policy Clinic, NYU School of
        Law, of New York, NY.\\n   </attorneys><br><attorneys id=\\\"b1371-9\\\">\\n
        \   Jonathan Band, Jonathan Band PLLC, of Washington, DC, filed a brief for
        amicus curiae Computer &amp; Communications Industry Association. With him
        on the brief was Matthew Schruers, Computer &amp; Communications Industry
        Association, of Washington, DC.\\n   </attorneys><br><attorneys id=\\\"b1371-10\\\">\\n
        \   Chad Ruback, The Ruback Law Firm, of Dallas, TX, filed a brief for amici
        curiae Rackspace US, Inc., et al.\\n   </attorneys><br><attorneys id=\\\"b1371-11\\\">\\n
        \   Jennifer M. Urban, Samuelson Law, Technology and Public Policy Clinic,
        U.C. Berkeley School of Law, of Berkeley, CA for amici curiae Software Innovators,
        et al.\\n   </attorneys><br><judges id=\\\"b1371-12\\\">\\n    Before O\u2019MALLEY,
        PLAGER, and TARANTO, Circuit Judges.\\n   </judges>\"}]}]"
    headers:
      Alt-Svc:
      - h3=":443"; ma=86400
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 24 Aug 2024 08:17:05 GMT
      Vary:
      - Accept-Encoding
      - Accept, origin, Cookie
      Via:
      - 1.1 6d22f808ca7913389d497e76f02c0ffc.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - oDdFG3kxLo1XkP6A2wZHA53mRxFy9G9Q4feAdckwdHSgEisURxLBLA==
      X-Amz-Cf-Pop:
      - PHX52-P2
      X-Cache:
      - Miss from cloudfront
      allow:
      - GET, PUT, PATCH, DELETE, HEAD, OPTIONS
      content-security-policy:
      - font-src 'self' https://storage.courtlistener.com/ data:; style-src 'self'
        'report-sample' https://storage.courtlistener.com/ https://hcaptcha.com/ https://*.hcaptcha.com/
        'unsafe-inline'; object-src 'self' https://storage.courtlistener.com/; upgrade-insecure-requests;
        frame-src 'self' https://storage.courtlistener.com/ https://hcaptcha.com/
        https://*.hcaptcha.com/; default-src 'self' https://storage.courtlistener.com/;
        media-src 'self' https://storage.courtlistener.com/ data:; connect-src 'self'
        https://storage.courtlistener.com/ https://hcaptcha.com/ https://*.hcaptcha.com/
        https://plausible.io/; img-src 'self' https://storage.courtlistener.com/ https://portraits.free.law/
        https://seals.free.law/ data:; script-src 'self' 'report-sample' https://storage.courtlistener.com/
        https://hcaptcha.com/ https://*.hcaptcha.com/ https://plausible.io/; base-uri
        'self'
      cross-origin-opener-policy:
      - same-origin
      permissions-policy:
      - browsing-topics=()
      referrer-policy:
      - same-origin
      server:
      - uvicorn
      strict-transport-security:
      - max-age=63072000; includeSubDomains; preload
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
    method: GET
    uri: https://www.courtlistener.com/api/rest/v4/opinions/2673149/
  response:
    body:
      string: "{\"resource_uri\":\"https://www.courtlistener.com/api/rest/v4/opinions/2673149/\",\"id\":2673149,\"absolute_url\":\"/opinion/2673149/oracle-america-inc-v-google-inc/\",\"cluster_id\":2673149,\"cluster\":\"https://www.courtlistener.com/api/rest/v4/clusters/2673149/\",\"author_id\":null,\"author\":null,\"joined_by\":[],\"date_created\":\"2014-05-09T17:02:04.678169-07:00\",\"date_modified\":\"2023-08-31T00:18:49.278744-07:00\",\"author_str\":\"O'Malley\",\"per_curiam\":false,\"joined_by_str\":\"\",\"type\":\"010combined\",\"sha1\":\"8e22fb4f85e25289cc2c54de3a5a50c33a859535\",\"page_count\":69,\"download_url\":\"http://www.cafc.uscourts.gov/images/stories/opinions-orders/13-1021.Opinion.5-7-2014.1.PDF\",\"local_path\":\"pdf/2014/05/09/oracle_america_inc._v._google_inc..pdf\",\"plain_text\":\"
        \ United States Court of Appeals\\n      for the Federal Circuit\\n                 ______________________\\n\\n
        \             ORACLE AMERICA, INC.,\\n                 Plaintiff-Appellant,\\n\\n
        \                           v.\\n\\n                    GOOGLE INC.,\\n               Defendant-Cross-Appellant.\\n
        \               ______________________\\n\\n                    2013-1021,
        -1022\\n                 ______________________\\n\\n    Appeals from the
        United States District Court for the\\nNorthern District of California in
        No. 10-CV-3561, Judge\\nWilliam H. Alsup.\\n                ______________________\\n\\n
        \                 Decided: May 9, 2014\\n                 ______________________\\n\\n
        \    E. JOSHUA ROSENKRANZ, Orrick, Herrington & Sut-\\ncliffe LLP, of New
        York, New York, argued for plaintiff-\\nappellant. With him on the brief were
        MARK S. DAVIES,\\nANDREW D. SILVERMAN, KELLY M. DALEY; and ANNETTE L.\\nHURST,
        GABRIEL M. RAMSEY, and ELIZABETH C. MCBRIDE,\\nof San Francisco, California.
        Of counsel on the brief were\\nDORIAN E. DALEY, DEBORAH K. MILLER, MATTHEW\\nSARBORARIA,
        and ANDREW C. TEMKIN, Oracle America,\\nInc., of Redwood Shores, California;
        and DALE M.\\nCENDALI, DIANA M. TORRES, SEAN B. FERNANDES, and\\nJOSHUA L.
        SIMMONS, Kirkland & Ellis LLP, of New York,\\nNew York. Of counsel were SUSAN
        M. DAVIES, Kirkland &\\n\\f2                       ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\nEllis LLP, of New York, New York; MICHAEL A. JACOBS,\\nMorrison
        & Foerster LLP, of San Francisco, California;\\nand KENNETH A. KUWAYTI, of
        Palo Alto, California.\\n\\n    ROBERT A. VAN NEST, Keker & Van Nest LLP,
        of San\\nFrancisco, California, argued for defendant-cross-\\nappellant. With
        him on the brief were CHRISTA M.\\nANDERSON, STEVEN A. HIRSCH, MICHAEL S.
        KWUN, and\\nDANIEL E. JACKSON. Of counsel on the brief were IAN C.\\nBALLON
        and HEATHER MEEKER, Greenberg Traurig, LLP,\\nof East Palo Alto, California;
        RENNY HWANG, Google Inc.,\\nof Mountain View, California; and DARYL L. JOSEFFER
        and\\nBRUCE W. BABER, King & Spalding LLP, of Washington,\\nDC.\\n\\n    MARCIA
        B. PAUL, Davis Wright Tremaine LLP, of New\\nYork, New York, for amicus curiae
        Ralph Oman. With\\nher on the brief were LACY H. KOONCE, III and DEBORAH\\nA.
        ADLER.\\n\\n    WILLIAM A. RUDY, Lathrop & Gage LLP, of Kansas\\nCity, Missouri,
        for amici curiae Picture Archive Council of\\nAmerica, Inc., et al. With him
        on the brief were CAROLE\\nE. HANDLER and BRIANNA E. DAHLBERG, of Los Angeles,\\nCalifornia.\\n\\n
        \   GREGORY G. GARRE, Latham & Watkins, LLP, of\\nWashington, DC, for amici
        curiae Microsoft Corporation,\\net al. With him on the brief was LORI ALVINO
        MCGILL. Of\\ncounsel on the brief were PAUL T. DACIER, KRISHNENDU\\nGUPTA,
        EMC Corporation, of Hopkinton, Massachusetts;\\nand DOUGLAS LUFTMAN, NETAPP,
        Inc., of Sunnyvale,\\nCalifornia.\\n\\n    JARED BOBROW, Weil, Gotshal & Manges
        LLP, of\\nRedwood Shores, California, for amici curiae Eugene H.\\nSpafford,
        Ph.D., et al. With him on the brief was AARON\\nY. HUANG.\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                      3\\n\\n\\n\\n\\n    MATTHEW S.
        HELLMAN, Jenner & Block LLP, of Wash-\\nington, DC, for amicus curiae BSA/The
        Software Alliance.\\nWith him on the brief was PAUL M. SMITH.\\n\\n   STEVEN
        T. COTTREAU, Clifford Chance US LLP, of\\nWashington, DC, for amici curiae,
        Scott McNealy, et al.\\n\\n    MEREDITH JACOB, Program on Information Justice\\nand
        Intellectual Property, American University, Washing-\\nton College of Law,
        of Washington, DC, for amici curiae\\nIntellectual Property Law Professors.\\n\\n
        \   JULIE P. SAMUELS, Electronic Frontier Foundation, of\\nSan Francisco,
        California, for amici curiae Computer\\nScientists. With her on the brief
        was MICHAEL BARCLAY.\\nOf counsel on the brief was JASON M. SCHULTZ, NYU\\nTechnology
        Law and Policy Clinic, NYU School of Law, of\\nNew York, New York.\\n\\n    JONATHAN
        BAND, Jonathan Band PLLC, of Washing-\\nton, DC, filed a brief for amicus
        curiae Computer & Com-\\nmunications Industry Association. With him on the
        brief\\nwas MATTHEW SCHRUERS, Computer & Communications\\nIndustry Association,
        of Washington, DC.\\n\\n     CHAD RUBACK, The Ruback Law Firm, of Dallas,
        Tex-\\nas, filed a brief for amici curiae Rackspace US, Inc., et al.\\n\\n
        \   JENNIFER M. URBAN, Samuelson Law, Technology and\\nPublic Policy Clinic,
        U.C. Berkeley School of Law, of\\nBerkeley, California for amici curiae Software
        Innovators,\\net al.\\n                 ______________________\\n\\nBefore
        O\u2019MALLEY, PLAGER, and TARANTO, Circuit Judges.\\n\\f4                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nO\u2019MALLEY, Circuit Judge.\\n
        \   This copyright dispute involves 37 packages of com-\\nputer source code.
        The parties have often referred to\\nthese groups of computer programs, individually
        or collec-\\ntively, as \u201Capplication programming interfaces,\u201D or
        API\\npackages, but it is their content, not their name, that\\nmatters. The
        predecessor of Oracle America, Inc. (\u201COra-\\ncle\u201D) wrote these and
        other API packages in the Java\\nprogramming language, and Oracle licenses
        them on\\nvarious terms for others to use. Many software develop-\\ners use
        the Java language, as well as Oracle\u2019s API pack-\\nages, to write applications
        (commonly referred to as\\n\u201Capps\u201D) for desktop and laptop computers,
        tablets,\\nsmartphones, and other devices.\\n    Oracle filed suit against
        Google Inc. (\u201CGoogle\u201D) in the\\nUnited States District Court for
        the Northern District of\\nCalifornia, alleging that Google\u2019s Android
        mobile operat-\\ning system infringed Oracle\u2019s patents and copyrights.
        The\\njury found no patent infringement, and the patent claims\\nare not at
        issue in this appeal. As to the copyright claims,\\nthe parties agreed that
        the jury would decide infringe-\\nment, fair use, and whether any copying
        was de minimis,\\nwhile the district judge would decide copyrightability and\\nGoogle\u2019s
        equitable defenses. The jury found that Google\\ninfringed Oracle\u2019s copyrights
        in the 37 Java packages and\\na specific computer routine called \u201CrangeCheck,\u201D
        but\\nreturned a noninfringement verdict as to eight decompiled\\nsecurity
        files. The jury deadlocked on Google\u2019s fair use\\ndefense.\\n     After
        the jury verdict, the district court denied Ora-\\ncle\u2019s motion for judgment
        as a matter of law (\u201CJMOL\u201D)\\nregarding fair use as well as Google\u2019s
        motion for JMOL\\nwith respect to the rangeCheck files. Order on Motions\\nfor
        Judgment as a Matter of Law, Oracle Am., Inc. v.\\nGoogle Inc., No. 3:10-cv-3561
        (N.D. Cal. May 10, 2012),\\nECF No. 1119. Oracle also moved for JMOL of infringe-\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      5\\n\\n\\n\\nment with
        respect to the eight decompiled security files.\\nIn granting that motion,
        the court found that: (1) Google\\nadmitted to copying the eight files; and
        (2) no reasonable\\njury could find that the copying was de minimis. Oracle\\nAm.,
        Inc. v. Google Inc., No. C 10-3561, 2012 U.S. Dist.\\nLEXIS 66417 (N.D. Cal.
        May 11, 2012) (\u201COrder Granting\\nJMOL on Decompiled Files\u201D).\\n
        \   Shortly thereafter, the district court issued its deci-\\nsion on copyrightability,
        finding that the replicated ele-\\nments of the 37 API packages\u2014including
        the declaring\\ncode and the structure, sequence, and organization\u2014were\\nnot
        subject to copyright protection. Oracle Am., Inc. v.\\nGoogle Inc., 872 F.
        Supp. 2d 974 (N.D. Cal. 2012) (\u201CCopy-\\nrightability Decision\u201D).
        Accordingly, the district court\\nentered final judgment in favor of Google
        on Oracle\u2019s\\ncopyright infringement claims, except with respect to the\\nrangeCheck
        code and the eight decompiled files. Final\\nJudgment, Oracle Am., Inc. v.
        Google Inc., No. 3:10-cv-\\n3561 (N.D. Cal. June 20, 2012), ECF No. 1211.
        Oracle\\nappeals from the portion of the final judgment entered\\nagainst
        it, and Google cross-appeals from the portion of\\nthat same judgment entered
        in favor of Oracle as to the\\nrangeCheck code and eight decompiled files.\\n
        \    Because we conclude that the declaring code and the\\nstructure, sequence,
        and organization of the API packages\\nare entitled to copyright protection,
        we reverse the district\\ncourt\u2019s copyrightability determination with
        instructions to\\nreinstate the jury\u2019s infringement finding as to the
        37 Java\\npackages. Because the jury deadlocked on fair use, we\\nremand for
        further consideration of Google\u2019s fair use\\ndefense in light of this
        decision. With respect to Google\u2019s\\ncross-appeal, we affirm the district
        court\u2019s decisions:\\n(1) granting Oracle\u2019s motion for JMOL as to
        the eight\\ndecompiled Java files that Google copied into Android;\\nand (2)
        denying Google\u2019s motion for JMOL with respect to\\nthe rangeCheck function.
        Accordingly, we affirm-in-part,\\nreverse-in-part, and remand for further
        proceedings.\\n\\f6                      ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\n                      BACKGROUND\\n                   A. The
        Technology\\n    Sun Microsystems, Inc. (\u201CSun\u201D) developed the Java\\n\u201Cplatform\u201D
        for computer programming and released it in\\n1996. 1 The aim was to relieve
        programmers from the\\nburden of writing different versions of their computer\\nprograms
        for different operating systems or devices. \u201CThe\\nJava platform, through
        the use of a virtual machine,\\nenable[d] software developers to write programs
        that\\n[we]re able to run on different types of computer hard-\\nware without
        having to rewrite them for each different\\ntype.\u201D Copyrightability Decision,
        872 F. Supp. 2d at 977.\\nWith Java, a software programmer could \u201Cwrite
        once, run\\nanywhere.\u201D\\n    The Java virtual machine (\u201CJVM\u201D)
        plays a central role\\nin the overall Java platform. The Java programming\\nlanguage
        itself\u2014which includes words, symbols, and\\nother units, together with
        syntax rules for using them to\\ncreate instructions\u2014is the language
        in which a Java\\nprogrammer writes source code, the version of a program\\nthat
        is \u201Cin a human-readable language.\u201D Id. For the\\ninstructions to
        be executed, they must be converted (or\\ncompiled) into binary machine code
        (object code) consist-\\ning of 0s and 1s understandable by the particular
        compu-\\nting device. In the Java system, \u201Csource code is first\\nconverted
        into \u2018bytecode,\u2019 an intermediate form, before it\\nis then converted
        into binary machine code by the Java\\nvirtual machine\u201D that has been
        designed for that device.\\nId. The Java platform includes the \u201CJava
        development kit\\n(JDK), javac compiler, tools and utilities, runtime pro-\\ngrams,
        class libraries (API packages), and the Java virtu-\\nal machine.\u201D Id.
        at 977 n.2.\\n\\n\\n\\n\\n    1   Oracle acquired Sun in 2010.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      7\\n\\n\\n\\n     Sun
        wrote a number of ready-to-use Java programs to\\nperform common computer
        functions and organized those\\nprograms into groups it called \u201Cpackages.\u201D
        These packag-\\nes, which are the application programming interfaces at\\nissue
        in this appeal, allow programmers to use the pre-\\nwritten code to build
        certain functions into their own\\nprograms, rather than write their own code
        to perform\\nthose functions from scratch. They are shortcuts. Sun\\ncalled
        the code for a specific operation (function) a \u201Cmeth-\\nod.\u201D It
        defined \u201Cclasses\u201D so that each class consists of\\nspecified methods
        plus variables and other elements on\\nwhich the methods operate. To organize
        the classes for\\nusers, then, it grouped classes (along with certain related\\n\u201Cinterfaces\u201D)
        into \u201Cpackages.\u201D See id. at 982 (describing\\norganization: \u201C[e]ach
        package [i]s broken into classes and\\nthose in turn [are] broken into methods\u201D).
        The parties\\nhave not disputed the district court\u2019s analogy: Oracle\u2019s\\ncollection
        of API packages is like a library, each package\\nis like a bookshelf in the
        library, each class is like a book\\non the shelf, and each method is like
        a how-to chapter in a\\nbook. Id. at 977.\\n    The original Java Standard
        Edition Platform (\u201CJava\\nSE\u201D) included \u201Ceight packages of
        pre-written programs.\u201D\\nId. at 982. The district court found, and Oracle
        concedes\\nto some extent, that three of those packages\u2014java.lang,\\njava.io,
        and java.util\u2014were \u201Ccore\u201D packages, meaning that\\nprogrammers
        using the Java language had to use them\\n\u201Cin order to make any worthwhile
        use of the language.\u201D\\nId. By 2008, the Java platform had more than
        6,000\\nmethods making up more than 600 classes grouped into\\n166 API packages.
        There are 37 Java API packages at\\nissue in this appeal, three of which are
        the core packages\\nidentified by the district court. 2 These packages contain\\n\\n\\n\\n
        \   2  The 37 API packages involved in this appeal are:\\njava.awt.font, java.beans,
        \  java.io,  java.lang,   ja-\\n\\f8                        ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nthousands of individual elements, including
        classes,\\nsubclasses, methods, and interfaces.\\n     Every package consists
        of two types of source code\u2014\\nwhat the parties call (1) declaring code;
        and\\n(2) implementing code. Declaring code is the expression\\nthat identifies
        the prewritten function and is sometimes\\nreferred to as the \u201Cdeclaration\u201D
        or \u201Cheader.\u201D As the dis-\\ntrict court explained, the \u201Cmain
        point is that this header\\nline of code introduces the method body and specifies
        very\\nprecisely the inputs, name and other functionality.\u201D Id. at\\n979-80.
        The expressions used by the programmer from\\nthe declaring code command the
        computer to execute the\\nassociated implementing code, which gives the computer\\nthe
        step-by-step instructions for carrying out the declared\\nfunction.\\n    To
        use the district court\u2019s example, one of the Java\\nAPI packages at issue
        is \u201Cjava.lang.\u201D Within that package\\nis a class called \u201Cmath,\u201D
        and within \u201Cmath\u201D there are\\nseveral methods, including one that
        is designed to find the\\nlarger of two numbers: \u201Cmax.\u201D The declaration
        for the\\n\u201Cmax\u201D method, as defined for integers, is: \u201Cpublic
        static int\\nmax(int x, int y),\u201D where the word \u201Cpublic\u201D means
        that the\\nmethod is generally accessible, \u201Cstatic\u201D means that no\\n\\n\\nva.lang.annotation,
        java.lang.ref, java.lang.reflect, ja-\\nva.net, java.nio, java.nio.channels,
        java.nio.channels.spi,\\njava.nio.charset, java.nio.charset.spi, java.security,
        ja-\\nva.security.acl, java.security.cert, java.security.interfaces,\\njava.security.spec,
        java.sql, java.text, java.util, ja-\\nva.util.jar,    java.util.logging,      java.util.prefs,
        \   ja-\\nva.util.regex,          java.util.zip,            javax.crypto,\\njavax.crypto.interfaces,
        \     javax.crypto.spec,     javax.net,\\njavax.net.ssl,             javax.security.auth,
        \            ja-\\nvax.security.auth.callback,         javax.security.auth.login,\\njavax.security.auth.x500,
        javax.security.cert, and ja-\\nvax.sql.\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                      9\\n\\n\\n\\nspecific instance of the class is needed
        to call the method,\\nthe first \u201Cint\u201D indicates that the method
        returns an inte-\\nger, and \u201Cint x\u201D and \u201Cint y\u201D are the
        two numbers (inputs)\\nbeing compared. Copyrightability Decision, 872 F. Supp.\\n2d
        at 980-82. A programmer calls the \u201Cmax\u201D method by\\ntyping the name
        of the method stated in the declaring\\ncode and providing unique inputs for
        the variables \u201Cx\u201D and\\n\u201Cy.\u201D The expressions used command
        the computer to\\nexecute the implementing code that carries out the opera-\\ntion
        of returning the larger number.\\n    Although Oracle owns the copyright on
        Java SE and\\nthe API packages, it offers three different licenses to those\\nwho
        want to make use of them. The first is the General\\nPublic License, which
        is free of charge and provides that\\nthe licensee can use the packages\u2014both
        the declaring and\\nimplementing code\u2014but must \u201Ccontribute back\u201D
        its inno-\\nvations to the public. This arrangement is referred to as\\nan
        \u201Copen source\u201D license. The second option is the Specifi-\\ncation
        License, which provides that the licensee can use\\nthe declaring code and
        organization of Oracle\u2019s API pack-\\nages but must write its own implementing
        code. The\\nthird option is the Commercial License, which is for\\nbusinesses
        that \u201Cwant to use and customize the full Java\\ncode in their commercial
        products and keep their code\\nsecret.\u201D Appellant Br. 14. Oracle offers
        the Commercial\\nLicense in exchange for royalties. To maintain Java\u2019s\\n\u201Cwrite
        once, run anywhere\u201D motto, the Specification and\\nCommercial Licenses
        require that the licensees\u2019 programs\\npass certain tests to ensure compatibility
        with the Java\\nplatform.\\n    The testimony at trial also revealed that
        Sun was li-\\ncensing a derivative version of the Java platform for use\\non
        mobile devices: the Java Micro Edition (\u201CJava ME\u201D).\\nOracle licensed
        Java ME for use on feature phones and\\nsmartphones. Sun/Oracle has never
        successfully devel-\\noped its own smartphone platform using Java.\\n\\f10
        \                    ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\n          B.
        Google\u2019s Accused Product: Android\\n    The accused product is Android,
        a software platform\\nthat was designed for mobile devices and competes with\\nJava
        in that market. Google acquired Android, Inc. in\\n2005 as part of a plan
        to develop a smartphone platform.\\nLater that same year, Google and Sun began
        discussing\\nthe possibility of Google \u201Ctaking a license to use and to\\nadapt
        the entire Java platform for mobile devices.\u201D Copy-\\nrightability Decision,
        872 F. Supp. 2d at 978. They also\\ndiscussed a \u201Cpossible co-development
        partnership deal\\nwith Sun under which Java technology would become an\\nopen-source
        part of the Android platform, adapted for\\nmobile devices.\u201D Id. The
        parties negotiated for months\\nbut were unable to reach an agreement. The
        point of\\ncontention between the parties was Google\u2019s refusal to\\nmake
        the implementation of its programs compatible with\\nthe Java virtual machine
        or interoperable with other Java\\nprograms. Because Sun/Oracle found that
        position to be\\nanathema to the \u201Cwrite once, run anywhere\u201D philosophy,\\nit
        did not grant Google a license to use the Java API\\npackages.\\n    When
        the parties\u2019 negotiations reached an impasse,\\nGoogle decided to use
        the Java programming language to\\ndesign its own virtual machine\u2014the
        Dalvik virtual ma-\\nchine (\u201CDalvik VM\u201D)\u2014and \u201Cto write
        its own implementa-\\ntions for the functions in the Java API that were key
        to\\nmobile devices.\u201D Id. Google developed the Android plat-\\nform,
        which grew to include 168 API packages\u201437 of\\nwhich correspond to the
        Java API packages at issue in\\nthis appeal.\\n    With respect to the 37
        packages at issue, \u201CGoogle be-\\nlieved Java application programmers
        would want to find\\nthe same 37 sets of functionalities in the new Android\\nsystem
        callable by the same names as used in Java.\u201D Id.\\nTo achieve this result,
        Google copied the declaring source\\ncode from the 37 Java API packages verbatim,
        inserting\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    11\\n\\n\\n\\nthat
        code into parts of its Android software. In doing so,\\nGoogle copied the
        elaborately organized taxonomy of all\\nthe names of methods, classes, interfaces,
        and packages\u2014\\nthe \u201Coverall system of organized names\u2014covering
        37\\npackages, with over six hundred classes, with over six\\nthousand methods.\u201D
        Copyrightability Decision, 872 F.\\nSupp. 2d at 999. The parties and district
        court referred\\nto this taxonomy of expressions as the \u201Cstructure, se-\\nquence,
        and organization\u201D or \u201CSSO\u201D of the 37 packages. It\\nis undisputed,
        however, that Google wrote its own imple-\\nmenting code, except with respect
        to: (1) the rangeCheck\\nfunction, which consisted of nine lines of code;
        and\\n(2) eight decompiled security files.\\n    As to rangeCheck, the court
        found that the Sun engi-\\nneer who wrote it later worked for Google and contributed\\ntwo
        files he created containing the rangeCheck function\u2014\\n\u201CTimsort.java\u201D
        and \u201CComparableTimsort\u201D\u2014to the Android\\nplatform. In doing
        so, the nine-line rangeCheck function\\nwas copied directly into Android.
        As to the eight decom-\\npiled files, the district court found that they were
        copied\\nand used as test files but \u201Cnever found their way into\\nAndroid
        or any handset.\u201D Id. at 983.\\n     Google released the Android platform
        in 2007, and the\\nfirst Android phones went on sale the following year.\\nAlthough
        it is undisputed that certain Android software\\ncontains copies of the 37
        API packages\u2019 declaring code at\\nissue, neither the district court nor
        the parties specify in\\nwhich programs those copies appear. Oracle indicated
        at\\noral argument, however, that all Android phones contain\\ncopies of the
        accused portions of the Android software.\\nOral Argument at 1:35, available
        at http://www.\\ncafc.uscourts.gov/oral-argument-recordings/2013-1021/all.\\nAndroid
        smartphones \u201Crapidly grew in popularity and\\nnow comprise a large share
        of the United States market.\u201D\\nCopyrightability Decision, 872 F. Supp.
        2d at 978. Google\\nprovides the Android platform free of charge to\\nsmartphone
        manufacturers and receives revenue when\\n\\f12                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncustomers use particular functions
        on the Android phone.\\nAlthough Android uses the Java programming language,\\nit
        is undisputed that Android is not generally Java com-\\npatible. As Oracle
        explains, \u201CGoogle ultimately designed\\nAndroid to be incompatible with
        the Java platform, so\\nthat apps written for one will not work on the other.\u201D\\nAppellant
        Br. 29.\\n             C. Trial and Post-Trial Rulings\\n     Beginning on
        April 16, 2012, the district court and the\\njury\u2014on parallel tracks\u2014viewed
        documents and heard\\ntestimony from twenty-four witnesses on copyrightability,\\ninfringement,
        fair use, and Google\u2019s other defenses.\\nBecause the parties agreed the
        district court would decide\\ncopyrightability, the court instructed the jury
        to assume\\nthat the structure, sequence, and organization of the 37\\nAPI
        packages was copyrightable. And, the court informed\\nthe jury that Google
        conceded that it copied the declaring\\ncode used in the 37 packages verbatim.
        The court also\\ninstructed the jury that Google conceded copying the\\nrangeCheck
        function and the eight decompiled security\\nfiles, but that Google maintained
        that its use of those\\nlines of code was de minimis. See Final Charge to
        the\\nJury (Phase One), Oracle Am., Inc. v. Google Inc., 3:10-cv-\\n3561 (N.D.
        Cal. Apr. 30, 2012), ECF No. 1018 at 14 (\u201CWith\\nrespect to the infringement
        issues concerning the\\nrangeCheck and other similar files, Google agrees
        that\\nthe accused lines of code and comments came from the\\ncopyrighted
        material but contends that the amounts\\ninvolved were so negligible as to
        be de minimis and thus\\nshould be excused.\u201D).\\n    On May 7, 2012,
        the jury returned a verdict finding\\nthat Google infringed Oracle\u2019s
        copyright in the 37 Java\\nAPI packages and in the nine lines of rangeCheck
        code,\\nbut returned a noninfringement verdict as to eight de-\\ncompiled
        security files. The jury hung on Google\u2019s fair use\\ndefense.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      13\\n\\n\\n\\n     The
        parties filed a number of post-trial motions, most\\nof which were ultimately
        denied. In relevant part, the\\ndistrict court denied Oracle\u2019s motion
        for JMOL regarding\\nfair use and Google\u2019s motion for JMOL as to the\\nrangeCheck
        files. Order on Motions for Judgment as a\\nMatter of Law, Oracle Am., Inc.
        v. Google Inc., No. 3:10-\\ncv-3561 (N.D. Cal. May 10, 2012), ECF No. 1119.
        The\\ndistrict court granted Oracle\u2019s motion for JMOL of in-\\nfringement
        as to the eight decompiled files, however. In\\nits order, the court explained
        that: (1) Google copied the\\nfiles in their entirety; (2) the trial testimony
        revealed that\\nthe use of those files was \u201Csignificant\u201D; and (3)
        no reason-\\nable jury could find the copying de minimis. Order Grant-\\ning
        JMOL on Decompiled Files, 2012 U.S. Dist. LEXIS\\n66417, at *6.\\n     On
        May 31, 2012, the district court issued the prima-\\nry decision at issue
        in this appeal, finding that the repli-\\ncated elements of the Java API packages\u2014including
        the\\ndeclarations and their structure, sequence, and organiza-\\ntion\u2014were
        not copyrightable. As to the declaring code,\\nthe court concluded that \u201Cthere
        is only one way to write\u201D\\nit, and thus the \u201Cmerger doctrine bars
        anyone from claim-\\ning exclusive copyright ownership of that expression.\u201D\\nCopyrightability
        Decision, 872 F. Supp. 2d at 998. The\\ncourt further found that the declaring
        code was not pro-\\ntectable because \u201Cnames and short phrases cannot
        be\\ncopyrighted.\u201D Id. As such, the court determined that\\n\u201Cthere
        can be no copyright violation in using the identical\\ndeclarations.\u201D
        Id.\\n    As to the overall structure, sequence, and organiza-\\ntion of the
        Java API packages, the court recognized that\\n\u201Cnothing in the rules
        of the Java language . . . required\\nthat Google replicate the same groupings
        even if Google\\nwas free to replicate the same functionality.\u201D Id. at
        999.\\nTherefore, the court determined that \u201COracle\u2019s best argu-\\nment
        . . . is that while no single name is copyrightable,\\nJava\u2019s overall
        system of organized names\u2014covering 37\\n\\f14                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\npackages, with over six hundred
        classes, with over six\\nthousand methods\u2014is a \u2018taxonomy\u2019 and,
        therefore, copy-\\nrightable.\u201D Id.\\n    Although it acknowledged that
        the overall structure of\\nOracle\u2019s API packages is creative, original,
        and \u201Cresem-\\nbles a taxonomy,\u201D the district court found that it
        \u201Cis\\nnevertheless a command structure, a system or method of\\noperation\u2014a
        long hierarchy of over six thousand com-\\nmands to carry out pre-assigned
        functions\u201D\u2014that is not\\nentitled to copyright protection under
        Section 102(b) of\\nthe Copyright Act. Id. at 999-1000. In reaching this\\nconclusion,
        the court emphasized that, \u201C[o]f the 166 Java\\npackages, 129 were not
        violated in any way.\u201D Id. at 1001.\\nAnd, of the 37 Java API packages
        at issue, \u201C97 percent of\\nthe Android lines were new from Google and
        the remain-\\ning three percent were freely replicable under the merger\\nand
        names doctrines.\u201D Id. On these grounds, the court\\ndismissed Oracle\u2019s
        copyright claims, concluding that \u201Cthe\\nparticular elements replicated
        by Google were free for all\\nto use under the Copyright Act.\u201D Id.\\n
        \   On June 20, 2012, the district court entered final\\njudgment in favor
        of Google and against Oracle on its\\nclaim for copyright infringement, except
        with respect to\\nthe rangeCheck function and the eight decompiled files.\\nAs
        to rangeCheck and the decompiled files, the court\\nentered judgment for Oracle
        and against Google in the\\namount of zero dollars, per the parties\u2019
        stipulation. Final\\nJudgment, Oracle Am., Inc. v. Google Inc., No. 3:10-cv-\\n3561
        (N.D. Cal. June 20, 2012), ECF No. 1211. Oracle\\ntimely appealed from the
        portion of the district court\u2019s\\nfinal judgment entered against it and
        Google timely cross-\\nappealed with respect to rangeCheck and the eight de-\\ncompiled
        files.   Because this action included patent\\nclaims, we have jurisdiction
        pursuant to 28 U.S.C.\\n\xA7 1295(a)(1).\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                   15\\n\\n\\n\\n                         DISCUSSION\\n
        \                  I. ORACLE\u2019S APPEAL\\n    It is undisputed that the
        Java programming language\\nis open and free for anyone to use. Except to
        the limited\\nextent noted below regarding three of the API packages, it\\nis
        also undisputed that Google could have written its own\\nAPI packages using
        the Java language. Google chose not\\nto do that. Instead, it is undisputed
        that Google copied\\n7,000 lines of declaring code and generally replicated
        the\\noverall structure, sequence, and organization of Oracle\u2019s\\n37
        Java API packages. The central question before us is\\nwhether these elements
        of the Java platform are entitled\\nto copyright protection. The district
        court concluded that\\nthey are not, and Oracle challenges that determination
        on\\nappeal. Oracle also argues that the district court should\\nhave dismissed
        Google\u2019s fair use defense as a matter of\\nlaw.\\n    According to Google,
        however, the district court cor-\\nrectly determined that: (1) there was only
        one way to\\nwrite the Java method declarations and remain \u201Cinterop-\\nerable\u201D
        with Java; and (2) the organization and structure\\nof the 37 Java API packages
        is a \u201Ccommand structure\u201D\\nexcluded from copyright protection under
        Section 102(b).\\nGoogle also argues that, if we reverse the district court\u2019s\\ncopyrightability
        determination, we should direct the\\ndistrict court to retry its fair use
        defense.\\n    \u201CWhen the questions on appeal involve law and prece-\\ndent
        on subjects not exclusively assigned to the Federal\\nCircuit, the court applies
        the law which would be applied\\nby the regional circuit.\u201D Atari Games
        Corp. v. Nintendo of\\nAm., Inc., 897 F.2d 1572, 1575 (Fed. Cir. 1990). Copyright\\nissues
        are not exclusively assigned to the Federal Circuit.\\nSee 28 U.S.C. \xA7
        1295. The parties agree that Ninth Cir-\\ncuit law applies and that, in the
        Ninth Circuit, whether\\nparticular expression is protected by copyright law
        is\\n\\f16                       ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\n\u201Csubject
        to de novo review.\u201D Ets-Hokin v. Skyy Spirits,\\nInc., 225 F.3d 1068,
        1073 (9th Cir. 2000). 3\\n\\n\\n\\n\\n     3   The Supreme Court has not addressed
        whether\\ncopyrightability is a pure question of law or a mixed\\nquestion
        of law and fact, or whether, if it is a mixed\\nquestion of law and fact,
        the factual components of that\\ninquiry are for the court, rather than the
        jury. Relatedly,\\nit has not decided the standard of review that applies
        on\\nappeal. Ten years ago, before finding it unnecessary to\\ndecide whether
        copyrightability is a pure question of law\\nor a mixed question of law and
        fact, the Seventh Circuit\\nnoted that it had \u201Cfound only a handful of
        appellate cases\\naddressing the issue, and they are split.\u201D Gaiman v.\\nMcFarlane,
        360 F.3d 644, 648 (7th Cir. 2004). And,\\npanels of the Ninth Circuit have
        defined the respective\\nroles of the jury and the court differently where
        questions\\nof originality were at issue. Compare North Coast Indus.\\nv.
        Jason Maxwell, Inc., 972 F.2d 1031, 1035 (9th Cir.\\n1992), with Ets-Hokin,
        225 F.3d at 1073. More recently,\\nseveral district courts within the Ninth
        Circuit have\\ntreated copyrightability as a question for only the court,\\nregardless
        of whether it is a pure question of law. See\\nStern v. Does, No. 09-1986,
        2011 U.S. Dist. LEXIS 37735,\\n*7 (C.D. Cal. Feb. 10, 2011); Jonathan Browning,
        Inc. v.\\nVenetian Casino Resort LLC, No. C 07-3983, 2009 U.S.\\nDist. LEXIS
        57525, at *2 (N.D. Cal. June 19, 2009); see\\nalso Pivot Point Int\u2019l,
        Inc. v. Charlene Prods., Inc., 932 F.\\nSupp. 220, 225 (N.D. Ill. 1996) (Easterbrook,
        J.) (citing to\\nMarkman v. Westview Instruments, Inc., 517 U.S. 370\\n(1996),
        and concluding that whether works are copyright-\\nable is a question which
        the \u201Cjury has nothing to do\\nwith\u201D). We need not address any of
        these questions,\\nbecause the parties here agreed that the district court\\nwould
        decide copyrightability, and both largely agree that\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                     17\\n\\n\\n\\n    We are mindful
        that the application of copyright law\\nin the computer context is often a
        difficult task. See Lotus\\nDev. Corp. v. Borland Int\u2019l, Inc., 49 F.3d
        807, 820 (1st Cir.\\n1995) (Boudin, J., concurring) (\u201CApplying copyright
        law to\\ncomputer programs is like assembling a jigsaw puzzle\\nwhose pieces
        do not quite fit.\u201D). On this record, however,\\nwe find that the district
        court failed to distinguish be-\\ntween the threshold question of what is
        copyrightable\u2014\\nwhich presents a low bar\u2014and the scope of conduct
        that\\nconstitutes infringing activity. The court also erred by\\nimporting
        fair use principles, including interoperability\\nconcerns, into its copyrightability
        analysis.\\n    For the reasons that follow, we conclude that the de-\\nclaring
        code and the structure, sequence, and organiza-\\ntion of the 37 Java API
        packages are entitled to copyright\\nprotection. Because there is an insufficient
        record as to\\nthe relevant fair use factors, we remand for further pro-\\nceedings
        on Google\u2019s fair use defense.\\n                    A. Copyrightability\\n
        \   The Copyright Act provides protection to \u201Coriginal\\nworks of authorship
        fixed in any tangible medium of\\nexpression,\u201D including \u201Cliterary
        works.\u201D          17 U.S.C.\\n\xA7 102(a). It is undisputed that computer
        programs\u2014\\ndefined in the Copyright Act as \u201Ca set of statements
        or\\ninstructions to be used directly or indirectly in a computer\\nin order
        to bring about a certain result,\u201D 17 U.S.C.\\n\xA7 101\u2014can be subject
        to copyright protection as \u201Cliterary\\nworks.\u201D See Atari Games Corp.
        v. Nintendo of Am., Inc.,\\n975 F.2d 832, 838 (Fed. Cir. 1992) (\u201CAs literary
        works,\\ncopyright protection extends to computer programs.\u201D).\\nIndeed,
        the legislative history explains that \u201Cliterary\\nworks\u201D includes
        \u201Ccomputer programs to the extent that\\n\\n\\n\\nwe may undertake a review
        of that determination de\\nnovo.\\n\\f18                       ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nthey incorporate authorship in the programmer\u2019s
        expres-\\nsion of original ideas, as distinguished from the ideas\\nthemselves.\u201D
        H.R. Rep. No. 1476, 94th Cong., 2d Sess. 54,\\nreprinted in 1976 U.S.C.C.A.N.
        5659, 5667.\\n    By statute, a work must be \u201Coriginal\u201D to qualify
        for\\ncopyright protection. 17 U.S.C. \xA7 102(a). This \u201Coriginality\\nrequirement
        is not particularly stringent,\u201D however. Feist\\nPubl\u2019ns, Inc. v.
        Rural Tel. Serv. Co., 499 U.S. 340, 358\\n(1991). \u201COriginal, as the term
        is used in copyright, means\\nonly that the work was independently created
        by the\\nauthor (as opposed to copied from other works), and that\\nit possesses
        at least some minimal degree of creativity.\u201D\\nId. at 345.\\n    Copyright
        protection extends only to the expression of\\nan idea\u2014not to the underlying
        idea itself. Mazer v. Stein,\\n347 U.S. 201, 217 (1954) (\u201CUnlike a patent,
        a copyright\\ngives no exclusive right to the art disclosed; protection is\\ngiven
        only to the expression of the idea\u2014not the idea\\nitself.\u201D). This
        distinction\u2014commonly referred to as the\\n\u201Cidea/expression dichotomy\u201D\u2014is
        codified in Section 102(b)\\nof the Copyright Act, which provides:\\n     In
        no case does copyright protection for an origi-\\n     nal work of authorship
        extend to any idea, proce-\\n     dure, process, system, method of operation,\\n
        \    concept, principle, or discovery, regardless of the\\n     form in which
        it is described, explained, illustrat-\\n     ed, or embodied in such work.\\n17
        U.S.C. \xA7 102(b); see Golan v. Holder, 132 S. Ct. 873,\\n890 (2012) (\u201CThe
        idea/expression dichotomy is codified at\\n17 U.S.C. \xA7 102(b).\u201D).\\n
        \   The idea/expression dichotomy traces back to the Su-\\npreme Court\u2019s
        decision in Baker v. Selden, 101 U.S. 99,\\n101 (1879). In Baker, the plaintiff
        Selden wrote and\\nobtained copyrights on a series of books setting out a
        new\\nsystem of bookkeeping. Id. at 100. The books included an\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                     19\\n\\n\\n\\nintroductory
        essay explaining the system and blank forms\\nwith ruled lines and headings
        designed for use with that\\nsystem. Id. Baker published account books employing
        a\\nsystem with similar forms, and Selden filed suit alleging\\ncopyright
        infringement. According to Selden, the \u201Cruled\\nlines and headings, given
        to illustrate the system, are a\\npart of the book\u201D and \u201Cno one
        can make or use similar\\nruled lines and headings, or ruled lines and headings\\nmade
        and arranged on substantially the same system,\\nwithout violating the copyright.\u201D
        Id. at 101.\\n    The Supreme Court framed the issue on appeal in\\nBaker
        as \u201Cwhether the exclusive property in a system of\\nbook-keeping can
        be claimed, under the law of copyright,\\nby means of a book in which that
        system is explained.\u201D\\nId. In reversing the circuit court\u2019s decision,
        the Court\\nconcluded that the \u201Ccopyright of a book on book-keeping\\ncannot
        secure the exclusive right to make, sell, and use\\naccount-books prepared
        upon the plan set forth in such\\nbook.\u201D Id. at 104. Likewise, the \u201Ccopyright
        of a work on\\nmathematical science cannot give to the author an exclu-\\nsive
        right to the methods of operation which he pro-\\npounds.\u201D Id. at 103.
        The Court found that, although the\\ncopyright protects the way Selden \u201Cexplained
        and de-\\nscribed a peculiar system of book-keeping,\u201D it does not\\nprevent
        others from using the system described therein.\\nId. at 104. The Court further
        indicated that, if it is neces-\\nsary to use the forms Selden included in
        his books to\\nmake use of the accounting system, that use would not\\namount
        to copyright infringement. See id. (noting that\\nthe public has the right
        to use the account-books and that,\\n\u201Cin using the art, the ruled lines
        and headings of accounts\\nmust necessarily be used as incident to it\u201D).\\n
        \   Courts routinely cite Baker as the source of several\\nprinciples incorporated
        into Section 102(b) that relate to\\nthis appeal, including that: (1) copyright
        protection ex-\\ntends only to expression, not to ideas, systems, or process-\\nes;
        and (2) \u201Cthose elements of a computer program that\\n\\f20                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nare necessarily incidental to its
        function are . . . unpro-\\ntectable.\u201D See Computer Assocs. Int\u2019l
        v. Altai, 982 F.2d\\n693, 704-05 (2d Cir. 1992) (\u201CAltai\u201D) (discussing
        Baker, 101\\nU.S. at 103-04).\\n    It is well established that copyright
        protection can ex-\\ntend to both literal and non-literal elements of a computer\\nprogram.
        See Altai, 982 F.2d at 702. The literal elements\\nof a computer program are
        the source code and object\\ncode. See Johnson Controls, Inc. v. Phoenix Control
        Sys.,\\nInc., 886 F.2d 1173, 1175 (9th Cir. 1989). Courts have\\ndefined source
        code as \u201Cthe spelled-out program com-\\nmands that humans can read.\u201D
        Lexmark Int\u2019l, Inc. v.\\nStatic Control Components, Inc., 387 F.3d 522,
        533 (6th\\nCir. 2004). Object code refers to \u201Cthe binary language\\ncomprised
        of zeros and ones through which the computer\\ndirectly receives its instructions.\u201D
        Altai, 982 F.2d at 698.\\nBoth source and object code \u201Care consistently
        held pro-\\ntected by a copyright on the program.\u201D Johnson Controls,\\n886
        F.2d at 1175; see also Altai, 982 F.2d at 702 (\u201CIt is\\nnow well settled
        that the literal elements of computer\\nprograms, i.e., their source and object
        codes, are the\\nsubject of copyright protection.\u201D). Google nowhere dis-\\nputes
        that premise. See, e.g., Oral Argument at 57:38.\\n    The non-literal components
        of a computer program in-\\nclude, among other things, the program\u2019s
        sequence, struc-\\nture, and organization, as well as the program\u2019s user\\ninterface.
        Johnson Controls, 886 F.2d at 1175. As dis-\\ncussed below, whether the non-literal
        elements of a pro-\\ngram \u201Care protected depends on whether, on the\\nparticular
        facts of each case, the component in question\\nqualifies as an expression
        of an idea, or an idea itself.\u201D Id.\\n    In this case, Oracle claims
        copyright protection with\\nrespect to both: (1) literal elements of its API
        packages\u2014\\nthe 7,000 lines of declaring source code; and (2) non-literal\\nelements\u2014the
        structure, sequence, and organization of\\neach of the 37 Java API packages.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                     21\\n\\n\\n\\n    The distinction
        between literal and non-literal aspects\\nof a computer program is separate
        from the distinction\\nbetween literal and non-literal copying. See Altai,
        982\\nF.2d at 701-02. \u201CLiteral\u201D copying is verbatim copying of\\noriginal
        expression. \u201CNon-literal\u201D copying is \u201Cparaphrased\\nor loosely
        paraphrased rather than word for word.\u201D Lotus\\nDev. Corp. v. Borland
        Int\u2019l, 49 F.3d 807, 814 (1st Cir.\\n1995). Here, Google concedes that
        it copied the declaring\\ncode verbatim. Oracle explains that the lines of
        declaring\\ncode \u201Cembody the structure of each [API] package, just as\\nthe
        chapter titles and topic sentences represent the struc-\\nture of a novel.\u201D
        Appellant Br. 45. As Oracle explains,\\nwhen Google copied the declaring code
        in these packages\\n\u201Cit also copied the \u2018sequence and organization\u2019
        of the\\npackages (i.e., the three-dimensional structure with all\\nthe chutes
        and ladders)\u201D employed by Sun/Oracle in the\\npackages. Appellant Br.
        27. Oracle also argues that the\\nnonliteral elements of the API packages\u2014the
        structure,\\nsequence, and organization that led naturally to the\\nimplementing
        code Google created\u2014are entitled to protec-\\ntion. Oracle does not assert
        \u201Cliteral\u201D copying of the entire\\nSSO, but, rather, that Google
        literally copied the declar-\\ning code and then paraphrased the remainder
        of the SSO\\nby writing its own implementing code. It therefore as-\\nserts
        non-literal copying with respect to the entirety of the\\nSSO.\\n    At this
        stage, it is undisputed that the declaring code\\nand the structure and organization
        of the Java API pack-\\nages are original. The testimony at trial revealed
        that\\ndesigning the Java API packages was a creative process\\nand that the
        Sun/Oracle developers had a vast range of\\noptions for the structure and
        organization. In its copy-\\nrightability decision, the district court specifically
        found\\nthat the API packages are both creative and original, and\\nGoogle
        concedes on appeal that the originality require-\\nments are met. See Copyrightability
        Decision, 872 F.\\nSupp. 2d at 976 (\u201CThe overall name tree, of course,
        has\\n\\f22                       ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncreative
        elements . . . .\u201D); Id. at 999 (\u201CYes, it is creative.\\nYes, it
        is original.\u201D); Appellee Br. 5 (\u201CGoogle does not\\ndispute\u201D
        the district court\u2019s finding that \u201Cthe Java API\\nclears the low
        originality threshold.\u201D). The court found,\\nhowever, that neither the
        declaring code nor the SSO was\\nentitled to copyright protection under the
        Copyright Act.\\n    Although the parties agree that Oracle\u2019s API packages\\nmeet
        the originality requirement under Section 102(a),\\nthey disagree as to the
        proper interpretation and applica-\\ntion of Section 102(b). For its part,
        Google suggests that\\nthere is a two-step copyrightability analysis, wherein\\nSection
        102(a) grants copyright protection to original\\nworks, while Section 102(b)
        takes it away if the work has\\na functional component. To the contrary, however,
        Con-\\ngress emphasized that Section 102(b) \u201Cin no way enlarges\\nor
        contracts the scope of copyright protection\u201D and that its\\n\u201Cpurpose
        is to restate . . . that the basic dichotomy be-\\ntween expression and idea
        remains unchanged.\u201D Feist,\\n499 U.S. at 356 (quoting H.R. Rep. No. 1476,
        94th Cong.,\\n2d Sess. 54, reprinted in 1976 U.S.C.C.A.N. 5659, 5670).\\n\u201CSection
        102(b) does not extinguish the protection accord-\\ned a particular expression
        of an idea merely because that\\nexpression is embodied in a method of operation.\u201D
        Mitel,\\nInc. v. Iqtel, Inc., 124 F.3d 1366, 1372 (10th Cir. 1997).\\nSection
        102(a) and 102(b) are to be considered collectively\\nso that certain expressions
        are subject to greater scrutiny.\\nId. In assessing copyrightability, the
        district court is\\nrequired to ferret out apparent expressive aspects of
        a\\nwork and then separate protectable expression from\\n\u201Cunprotectable
        ideas, facts, processes, and methods of\\noperation.\u201D See Atari, 975
        F.2d at 839.\\n    Of course, as with many things, in defining this task,\\nthe
        devil is in the details. Circuit courts have struggled\\nwith, and disagree
        over, the tests to be employed when\\nattempting to draw the line between
        what is protectable\\nexpression and what is not. Compare Whelan Assocs.,
        Inc.\\nv. Jaslow Dental Lab., Inc., 797 F.2d 1222, 1236 (3d Cir.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                     23\\n\\n\\n\\n1986) (everything
        not necessary to the purpose or function\\nof a work is expression), with
        Lotus, 49 F.3d at 815\\n(methods of operation are means by which a user operates\\nsomething
        and any words used to effectuate that opera-\\ntion are unprotected expression).
        When assessing wheth-\\ner the non-literal elements of a computer program\\nconstitute
        protectable expression, the Ninth Circuit has\\nendorsed an \u201Cabstraction-filtration-comparison\u201D
        test\\nformulated by the Second Circuit and expressly adopted\\nby several
        other circuits. Sega Enters. Ltd. v. Accolade,\\nInc., 977 F.2d 1510, 1525
        (9th Cir. 1992) (\u201CIn our view, in\\nlight of the essentially utilitarian
        nature of computer\\nprograms, the Second Circuit\u2019s approach is an appropriate\\none.\u201D).
        This test rejects the notion that anything that\\nperforms a function is necessarily
        uncopyrightable. See\\nMitel, 124 F.3d at 1372 (rejecting the Lotus court\u2019s
        formu-\\nlation, and concluding that, \u201Calthough an element of a\\nwork
        may be characterized as a method of operation, that\\nelement may nevertheless
        contain expression that is\\neligible for copyright protection.\u201D). And
        it also rejects as\\nflawed the Whelan assumption that, once any separable\\nidea
        can be identified in a computer program everything\\nelse must be protectable
        expression, on grounds that more\\nthan one idea may be embodied in any particular
        pro-\\ngram. Altai, 982 F.2d at 705-06.\\n     Thus, this test eschews bright
        line approaches and re-\\nquires a more nuanced assessment of the particular\\nprogram
        at issue in order to determine what expression is\\nprotectable and infringed.
        As the Second Circuit explains,\\nthis test has three steps. In the abstraction
        step, the\\ncourt \u201Cfirst break[s] down the allegedly infringed program\\ninto
        its constituent structural parts.\u201D Id. at 706. In the\\nfiltration step,
        the court \u201Csift[s] out all non-protectable\\nmaterial,\u201D including
        ideas and \u201Cexpression that is neces-\\nsarily incidental to those ideas.\u201D
        Id. In the final step, the\\n\\f24                        ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\ncourt compares the remaining creative expression
        with\\nthe allegedly infringing program. 4\\n    In the second step, the court
        is first to assess whether\\nthe expression is original to the programmer
        or author.\\nAtari, 975 F.2d at 839. The court must then determine\\nwhether
        the particular inclusion of any level of abstrac-\\ntion is dictated by considerations
        of efficiency, required by\\nfactors already external to the program itself,
        or taken\\nfrom the public domain\u2014all of which would render the\\nexpression
        unprotectable. Id. These conclusions are to be\\ninformed by traditional copyright
        principles of originality,\\nmerger, and scenes a faire. See Mitel, 124 F.3d
        at 1372\\n(\u201CAlthough this core of expression is eligible for copyright\\nprotection,
        it is subject to the rigors of filtration analysis\\nwhich excludes from protection
        expression that is in the\\npublic domain, otherwise unoriginal, or subject
        to the\\ndoctrines of merger and scenes a faire.\u201D).\\n     In all circuits,
        it is clear that the first step is part of\\nthe copyrightability analysis
        and that the third is an\\ninfringement question. It is at the second step
        of this\\nanalysis where the circuits are in less accord. Some treat\\nall
        aspects of this second step as part of the copyrightabil-\\nity analysis,
        while others divide questions of originality\\nfrom the other inquiries, treating
        the former as a question\\nof copyrightability and the latter as part of the
        infringe-\\nment inquiry. Compare Lexmark, 387 F.3d at 537-38\\n\\n\\n     4
        \  Importantly, this full analysis only applies where\\na copyright owner
        alleges infringement of the non-literal\\naspects of its work. Where \u201Cadmitted
        literal copying of a\\ndiscrete, easily-conceptualized portion of a work\u201D
        is at\\nissue\u2014as with Oracle\u2019s declaring code\u2014a court \u201Cneed
        not\\nperform a complete abstraction-filtration-comparison\\nanalysis\u201D
        and may focus the protectability analysis on the\\nfiltration stage, with
        attendant reference to standard\\ncopyright principles. Mitel, 124 F.3d at
        1372-73.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                   25\\n\\n\\n\\n(finding
        that the district court erred in assessing princi-\\nples of merger and scenes
        a faire in the infringement\\nanalysis, rather than as a component of copyrightability),\\nwith
        Kregos, 937 F.2d at 705 (noting that the Second\\nCircuit has considered the
        merger doctrine \u201Cin determin-\\ning whether actionable infringement has
        occurred, rather\\nthan whether a copyright is valid\u201D); see also Lexmark,
        387\\nF.3d at 557 (Feikens, J., dissenting-in-part) (noting the\\ncircuit
        split and concluding that, where a court is as-\\nsessing merger of an expression
        with a method of opera-\\ntion, \u201CI would find the merger doctrine can
        operate only as\\na defense to infringement in that context, and as such has\\nno
        bearing on the question of copyrightability.\u201D). We need\\nnot assess
        the wisdom of these respective views because\\nthere is no doubt on which
        side of this circuit split the\\nNinth Circuit falls.\\n    In the Ninth Circuit,
        while questions regarding origi-\\nnality are considered questions of copyrightability,
        con-\\ncepts of merger and scenes a faire are affirmative\\ndefenses to claims
        of infringement. Ets-Hokin, 225 F.3d\\nat 1082; Satava v. Lowry, 323 F.3d
        805, 810 n.3 (9th Cir.\\n2003) (\u201CThe Ninth Circuit treats scenes a faire
        as a de-\\nfense to infringement rather than as a barrier to copy-\\nrightability.\u201D).
        The Ninth Circuit has acknowledged that\\n\u201Cthere is some disagreement
        among courts as to whether\\nthese two doctrines figure into the issue of
        copyrightabil-\\nity or are more properly defenses to infringement.\u201D
        Ets-\\nHokin, 225 F.3d at 1082 (citations omitted). It, nonethe-\\nless, has
        made clear that, in that circuit, these concepts\\nare to be treated as defenses
        to infringement. Id. (citing\\nKregos, 937 F.2d at 705 (holding that the merger
        doctrine\\nrelates to infringement, not copyrightability); Reed-Union\\nCorp.
        v. Turtle Wax, Inc., 77 F.3d 909, 914 (7th Cir. 1996)\\n(explaining why the
        doctrine of scenes a faire is separate\\nfrom the validity of a copyright)).\\n
        \   With these principles in mind, we turn to the trial\\ncourt\u2019s analysis
        and judgment and to Oracle\u2019s objections\\n\\f26                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nthereto. While the trial court mentioned
        the abstraction-\\nfiltration-comparison test when describing the develop-\\nment
        of relevant law, it did not purport to actually apply\\nthat test. Instead,
        it moved directly to application of\\nfamiliar principles of copyright law
        when assessing the\\ncopyrightability of the declaring code and interpreted\\nSection
        102(b) to preclude copyrightability for any func-\\ntional element \u201Cessential
        for interoperability\u201D \u201Cregardless\\nof its form.\u201D Copyrightability
        Decision, 872 F. Supp. 2d at\\n997.\\n    Oracle asserts that all of the trial
        court\u2019s conclusions\\nregarding copyrightability are erroneous. Oracle
        argues\\nthat its Java API packages are entitled to protection\\nunder the
        Copyright Act because they are expressive and\\ncould have been written and
        organized in any number of\\nways to achieve the same functions. Specifically,
        Oracle\\nargues that the district court erred when it: (1) concluded\\nthat
        each line of declaring code is uncopyrightable be-\\ncause the idea and expression
        have merged; (2) found the\\ndeclaring code uncopyrightable because it employs
        short\\nphrases; (3) found all aspects of the SSO devoid of protec-\\ntion
        as a \u201Cmethod of operation\u201D under 17 U.S.C. \xA7 102(b);\\nand (4)
        invoked Google\u2019s \u201Cinteroperability\u201D concerns in the\\ncopyrightability
        analysis. For the reasons explained\\nbelow, we agree with Oracle on each
        point.\\n                 1. Declaring Source Code\\n     First, Oracle argues
        that the district court erred in\\nconcluding that each line of declaring
        source code is\\ncompletely unprotected under the merger and short\\nphrases
        doctrines. Google responds that Oracle waived\\nits right to assert copyrightability
        based on the 7,000 lines\\nof declaring code by failing \u201Cto object to
        instructions and a\\nverdict form that effectively eliminated that theory
        from\\nthe case.\u201D Appellee Br. 67. Even if not waived, moreover,\\nGoogle
        argues that, because there is only one way to write\\n\\fORACLE AMERICA, INC.
        \  v. GOOGLE INC.                     27\\n\\n\\n\\nthe names and declarations,
        the merger doctrine bars\\ncopyright protection.\\n    We find that Oracle
        did not waive arguments based\\non Google\u2019s literal copying of the declaring
        code. Prior to\\ntrial, both parties informed the court that Oracle\u2019s
        copy-\\nright infringement claims included the declarations of the\\nAPI elements
        in the Android class library source code.\\nSee Oracle\u2019s Statement of
        Issues Regarding Copyright,\\nOracle Am., Inc. v. Google Inc., No. 3:10-cv-3561
        (N.D.\\nCal. Apr. 12, 2012), ECF No. 899-1, at 3 (Oracle accuses\\nthe \u201Cdeclarations
        of the API elements in the Android class\\nlibrary source code and object
        code that implements the\\n37 API packages\u201D of copyright infringement.);
        see also\\nGoogle\u2019s Proposed Statement of Issues Regarding Copy-\\nright,
        Oracle Am., Inc. v. Google Inc., No. 3:10-cv-3561\\n(N.D. Cal. Apr. 12, 2012),
        ECF No. 901, at 2 (Oracle\\naccuses the \u201Cdeclarations of the API elements
        in Android\\nclass library source code and object code that implements\\nthe
        37 API packages.\u201D).\\n    While Google is correct that the jury instructions
        and\\nverdict form focused on the structure and organization of\\nthe packages,
        we agree with Oracle that there was no\\nneed for the jury to address copying
        of the declaring code\\nbecause Google conceded that it copied it verbatim.\\nIndeed,
        the district court specifically instructed the jury\\nthat \u201CGoogle agrees
        that it uses the same names and\\ndeclarations\u201D in Android. Final Charge
        to the Jury at 10.\\n    That the district court addressed the declaring code
        in\\nits post-jury verdict copyrightability decision further\\nconfirms that
        the verbatim copying of declaring code\\nremained in the case. The court explained
        that the \u201Ciden-\\ntical lines\u201D that Google copied into Android \u201Care
        those\\nlines that specify the names, parameters and functionali-\\nty of
        the methods and classes, lines called \u2018declarations\u2019 or\\n\u2018headers.\u2019\u201D
        Copyrightability Decision, 872 F. Supp. 2d at\\n979. The court specifically
        found that the declaring code\\n\\f28                      ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nwas not entitled to copyright protection
        under the merger\\nand short phrases doctrines. We address each in turn.\\n
        \                       a. Merger\\n    The merger doctrine functions as an
        exception to the\\nidea/expression dichotomy. It provides that, when there\\nare
        a limited number of ways to express an idea, the idea\\nis said to \u201Cmerge\u201D
        with its expression, and the expression\\nbecomes unprotected. Altai, 982
        F.2d at 707-08. As\\nnoted, the Ninth Circuit treats this concept as an affirma-\\ntive
        defense to infringement. Ets-Hokin, 225 F.3d at\\n1082. Accordingly, it appears
        that the district court\u2019s\\nmerger analysis is irrelevant to the question
        of whether\\nOracle\u2019s API packages are copyrightable in the first\\ninstance.
        Regardless of when the analysis occurs, we\\nconclude that merger does not
        apply on the record before\\nus.\\n    Under the merger doctrine, a court
        will not protect a\\ncopyrighted work from infringement if the idea contained\\ntherein
        can be expressed in only one way. Satava v.\\nLowry, 323 F.3d 805, 812 n.5
        (9th Cir. 2003). For com-\\nputer programs, \u201Cthis means that when specific
        [parts of\\nthe code], even though previously copyrighted, are the\\nonly
        and essential means of accomplishing a given task,\\ntheir later use by another
        will not amount to infringe-\\nment.\u201D Altai, 982 F.2d at 708 (citation
        omitted). We have\\nrecognized, however, applying Ninth Circuit law, that
        the\\n\u201Cunique arrangement of computer program expression . . .\\ndoes
        not merge with the process so long as alternate\\nexpressions are available.\u201D
        Atari, 975 F.2d at 840.\\n    In Atari, for example, Nintendo designed a program\u2014\\nthe
        10NES\u2014to prevent its video game system from ac-\\ncepting unauthorized
        game cartridges. 975 F.2d at 836.\\nNintendo \u201Cchose arbitrary programming
        instructions and\\narranged them in a unique sequence to create a purely\\narbitrary
        data stream\u201D which \u201Cserves as the key to unlock\\nthe NES.\u201D
        Id. at 840. Because Nintendo produced expert\\n\\fORACLE AMERICA, INC.   v.
        GOOGLE INC.                     29\\n\\n\\n\\ntestimony \u201Cshowing a multitude
        of different ways to\\ngenerate a data stream which unlocks the NES console,\u201D\\nwe
        concluded that Nintendo\u2019s specific choice of code did\\nnot merge with
        the process. Id.\\n     Here, the district court found that, \u201Cno matter
        how\\ncreative or imaginative a Java method specification may\\nbe, the entire
        world is entitled to use the same method\\nspecification (inputs, outputs,
        parameters) so long as the\\nline-by-line implementations are different.\u201D
        Copyrighta-\\nbility Decision, 872 F. Supp. 2d at 998. In its analysis, the\\ncourt
        identified the method declaration as the idea and\\nfound that the implementation
        is the expression. Id.\\n(\u201CThe method specification is the idea. The
        method im-\\nplementation is the expression. No one may monopolize\\nthe idea.\u201D)
        (emphases in original). The court explained\\nthat, under the rules of Java,
        a programmer must use the\\nidentical \u201Cdeclaration or method header lines\u201D
        to \u201Cdeclare\\na method specifying the same functionality.\u201D Id. at
        976.\\nBecause the district court found that there was only one\\nway to write
        the declaring code for each of the Java pack-\\nages, it concluded that \u201Cthe
        merger doctrine bars anyone\\nfrom claiming exclusive copyright ownership\u201D
        of it. Id. at\\n998. Accordingly, the court held there could be \u201Cno copy-\\nright
        violation in using the identical declarations.\u201D Id.\\n    Google agrees
        with the district court that the imple-\\nmenting code is the expression entitled
        to protection\u2014not\\nthe declaring code. Indeed, at oral argument, counsel
        for\\nGoogle explained that, \u201Cit is not our position that none of\\nJava
        is copyrightable. Obviously, Google spent two and a\\nhalf years . . . to
        write from scratch all of the implement-\\ning code.\u201D Oral Argument at
        33:16. 5 Because it is undis-\\n\\n\\n    5  It is undisputed that Microsoft
        and Apple devel-\\noped mobile operating systems from scratch, using their\\nown
        array of software packages. When asked whether\\nGoogle could also copy all
        of Microsoft or Apple\u2019s declaring\\n\\f30                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nputed that Google wrote its own
        implementing code, the\\ncopyrightability of the precise language of that
        code is not\\nat issue on appeal. Instead, our focus is on the declaring\\ncode
        and structure of the API packages.\\n     On appeal, Oracle argues that the
        district court:\\n(1) misapplied the merger doctrine; and (2) failed to focus\\nits
        analysis on the options available to the original au-\\nthor. We agree with
        Oracle on both points. First, we\\nagree that merger cannot bar copyright
        protection for any\\nlines of declaring source code unless Sun/Oracle had
        only\\none way, or a limited number of ways, to write them. See\\nSatava,
        323 F.3d at 812 n.5 (\u201CUnder the merger doctrine,\\ncourts will not protect
        a copyrighted work from infringe-\\nment if the idea underlying the copyrighted
        work can be\\nexpressed in only one way, lest there be a monopoly on\\nthe
        underlying idea.\u201D). The evidence showed that Oracle\\nhad \u201Cunlimited
        options as to the selection and arrange-\\nment of the 7000 lines Google copied.\u201D
        Appellant Br. 50.\\nUsing the district court\u2019s \u201Cjava.lang.Math.max\u201D
        example,\\nOracle explains that the developers could have called it\\nany
        number of things, including \u201CMath.maximum\u201D or\\n\u201CArith.larger.\u201D
        This was not a situation where Oracle was\\nselecting among preordained names
        and phrases to create\\nits packages. 6 As the district court recognized,
        moreover,\\n\\n\\n\\ncode\u2014codes that obviously differ from those at issue\\nhere\u2014counsel
        for Google responded: \u201CYes, but only the\\nstructure, sequence, and organization.
        Only the com-\\nmand structure\u2014what you need to access the functions.\\nYou\u2019d
        have to rewrite all the millions of lines of code in\\nApple or in Microsoft
        which is what Google did in An-\\ndroid.\u201D Oral Argument at 36:00.\\n
        \   6   In their brief as amici curiae in support of rever-\\nsal, Scott McNealy
        and Brian Sutphin\u2014both former\\nexecutives at Sun who were involved in
        the development\\nof the Java platform\u2014provide a detailed example of
        the\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    31\\n\\n\\n\\n\u201Cthe
        Android method and class names could have been\\ndifferent from the names
        of their counterparts in Java\\nand still have worked.\u201D Copyrightability
        Decision, 872 F.\\nSupp. 2d at 976. Because \u201Calternative expressions
        [we]re\\navailable,\u201D there is no merger. See Atari, 975 F.2d at 840.\\n
        \   We further find that the district court erred in focus-\\ning its merger
        analysis on the options available to Google\\nat the time of copying. It is
        well-established that copy-\\nrightability and the scope of protectable activity
        are to be\\nevaluated at the time of creation, not at the time of in-\\nfringement.
        See Apple Computer, Inc. v. Formula Int\u2019l,\\nInc., 725 F.2d 521, 524
        (9th Cir. 1984) (quoting National\\nCommission on New Technological Uses of
        Copyrighted\\nWorks, Final Report at 21 (1979) (\u201CCONTU Report\u201D)\\n(recognizing
        that the Copyright Act was designed \u201Cto\\nprotect all works of authorship
        from the moment of their\\nfixation in any tangible medium of expression\u201D)).
        The\\nfocus is, therefore, on the options that were available to\\nSun/Oracle
        at the time it created the API packages. Of\\n\\n\\n\\ncreative choices involved
        in designing a Java package.\\nLooking at the \u201Cjava.text\u201D package,
        they explain that it\\n\u201Ccontains 25 classes, 2 interfaces, and hundreds
        of meth-\\nods to handle text, dates, numbers, and messages in a\\nmanner
        independent of natural human languages . . . .\u201D\\nBr. of McNealy and
        Sutphin 14-15. Java\u2019s creators had to\\ndetermine whether to include
        a java.text package in the\\nfirst place, how long the package would be, what
        elements\\nto include, how to organize that package, and how it\\nwould relate
        to other packages. Id. at 16. This descrip-\\ntion of Sun\u2019s creative
        process is consistent with the evi-\\ndence presented at trial. See Appellant
        Br. 12-13 (citing\\ntestimony that it took years to write some of the Java\\npackages
        and that Sun/Oracle developers had to \u201Cwrestle\\nwith what functions
        to include in the package, which to\\nput in other packages, and which to
        omit entirely\u201D).\\n\\f32                       ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\ncourse, once Sun/Oracle created \u201Cjava.lang.Math.max,\u201D\\nprogrammers
        who want to use that particular package\\nhave to call it by that name. But,
        as the court acknowl-\\nedged, nothing prevented Google from writing its own\\ndeclaring
        code, along with its own implementing code, to\\nachieve the same result.
        In such circumstances, the\\nchosen expression simply does not merge with
        the idea\\nbeing expressed. 7\\n    It seems possible that the merger doctrine,
        when\\nproperly analyzed, would exclude the three packages\\nidentified by
        the district court as core packages from the\\nscope of actionable infringing
        conduct. This would be so if\\nthe Java authors, at the time these packages
        were creat-\\ned, had only a limited number of ways to express the\\nmethods
        and classes therein if they wanted to write in the\\nJava language. In that
        instance, the idea may well be\\nmerged with the expression in these three
        packages. 8\\n\\n\\n\\n     7  The district court did not find merger with
        respect\\nto the structure, sequence, and organization of Oracle\u2019s\\nJava
        API packages. Nor could it, given the court\u2019s recog-\\nnition that there
        were myriad ways in which the API\\npackages could have been organized. Indeed,
        the court\\nfound that the SSO is original and that \u201Cnothing in the\\nrules
        of the Java language . . . required that Google\\nreplicate the same groupings.\u201D
        Copyrightability Decision,\\n872 F. Supp. 2d at 999. As discussed below, however,
        the\\ncourt nonetheless found that the SSO is an uncopyrighta-\\nble \u201Cmethod
        of operation.\u201D\\n     8  At oral argument, counsel for Oracle was asked\\nwhether
        we should view the three core packages \u201Cdiffer-\\nently vis-\xE0-vis
        the concept of a method of operation than\\nthe other packages.\u201D See
        Oral Argument at 7:43. He\\nresponded: \u201CI think not your Honor. I would
        view them\\ndifferently with respect to fair use . . . . It\u2019s not that
        they\\nare more basic. It\u2019s that there are just several methods,\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      33\\n\\n\\n\\nGoogle did
        not present its merger argument in this way\\nbelow and does not do so here,
        however. Indeed, Google\\ndoes not try to differentiate among the packages
        for\\npurposes of its copyrightability analysis and does not\\nappeal the
        infringement verdict as to the packages. For\\nthese reasons, we reject the
        trial court\u2019s merger analysis.\\n                       b. Short Phrases\\n
        \    The district court also found that Oracle\u2019s declaring\\ncode consists
        of uncopyrightable short phrases. Specifical-\\nly, the court concluded that,
        \u201Cwhile the Android method\\nand class names could have been different
        from the\\nnames of their counterparts in Java and still have\\nworked, copyright
        protection never extends to names or\\nshort phrases as a matter of law.\u201D
        Copyrightability Deci-\\nsion, 872 F. Supp. 2d at 976.\\n    The district
        court is correct that \u201C[w]ords and short\\nphrases such as names, titles,
        and slogans\u201D are not sub-\\nject to copyright protection. 37 C.F.R. \xA7
        202.1(a). The\\ncourt failed to recognize, however, that the relevant\\nquestion
        for copyrightability purposes is not whether the\\nwork at issue contains
        short phrases\u2014as literary works\\noften do\u2014but, rather, whether
        those phrases are creative.\\nSee Soc\u2019y of Holy Transfiguration Monastery,
        Inc. v.\\n\\n\\n\\nthat is, routines, within just those three packages that
        are\\nnecessary to \u2018speak the Java language.\u2019 Nothing in the\\nother
        thirty-four packages is necessary in order to speak\\nin Java, so to speak.\u201D
        Id. Counsel conceded, however,\\nthat this issue \u201Cmight go to merger.
        It might go to the\\nquestion whether someone\u2014since we conceded that
        it\u2019s\\nokay to use the language\u2014if it\u2019s alright to use the
        lan-\\nguage that there are certain things that the original\\ndevelopers
        had to say in order to use that language,\\narguably, although I still think
        it\u2019s really a fair use analy-\\nsis.\u201D Id.\\n\\f34                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nGregory, 689 F.3d 29, 52 (1st Cir.
        2012) (noting that \u201Cnot\\nall short phrases will automatically be deemed
        uncopy-\\nrightable\u201D); see also 1 Melville B. Nimmer & David Nim-\\nmer,
        Nimmer on Copyright \xA7 2.01[B] (2013) (\u201C[E]ven a\\nshort phrase may
        command copyright protection if it\\nexhibits sufficient creativity.\u201D).
        And, by dissecting the\\nindividual lines of declaring code at issue into
        short\\nphrases, the district court further failed to recognize that\\nan
        original combination of elements can be copyrightable.\\nSee Softel, Inc.
        v. Dragon Med. & Scientific Commc\u2019ns,\\n118 F.3d 955, 964 (2d Cir. 1997)
        (noting that, in Feist,\\n\u201Cthe Court made quite clear that a compilation
        of non-\\nprotectible elements can enjoy copyright protection even\\nthough
        its constituent elements do not\u201D).\\n     By analogy, the opening of
        Charles Dickens\u2019 A Tale of\\nTwo Cities is nothing but a string of short
        phrases. Yet no\\none could contend that this portion of Dickens\u2019 work
        is\\nunworthy of copyright protection because it can be broken\\ninto those
        shorter constituent components. The question\\nis not whether a short phrase
        or series of short phrases\\ncan be extracted from the work, but whether the
        manner\\nin which they are used or strung together exhibits creativ-\\nity.\\n
        \   Although the district court apparently focused on in-\\ndividual lines
        of code, Oracle is not seeking copyright\\nprotection for a specific short
        phrase or word. Instead,\\nthe portion of declaring code at issue is 7,000
        lines, and\\nGoogle\u2019s own \u201CJava guru\u201D conceded that there can
        be\\n\u201Ccreativity and artistry even in a single method declara-\\ntion.\u201D
        Joint Appendix (\u201CJ.A.\u201D) 20,970. Because Oracle\\n\u201Cexercised
        creativity in the selection and arrangement\u201D of\\nthe method declarations
        when it created the API packages\\nand wrote the relevant declaring code,
        they contain pro-\\ntectable expression that is entitled to copyright protec-\\ntion.
        See Atari, 975 F.2d at 840; see also 17 U.S.C. \xA7\xA7 101,\\n103 (recognizing
        copyright protection for \u201Ccompilations\u201D\\nwhich are defined as work
        that is \u201Cselected, coordinated,\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                    35\\n\\n\\n\\nor arranged in such a way that the resulting
        work as a\\nwhole constitutes an original work of authorship\u201D). Ac-\\ncordingly,
        we conclude that the district court erred in\\napplying the short phrases
        doctrine to find the declaring\\ncode not copyrightable.\\n                       c.
        Scenes a Faire\\n     The scenes a faire doctrine, which is related to the\\nmerger
        doctrine, operates to bar certain otherwise crea-\\ntive expression from copyright
        protection. Apple Comput-\\ner, Inc. v. Microsoft Corp., 35 F.3d 1435, 1444
        (9th Cir.\\n1994). It provides that \u201Cexpressive elements of a work of\\nauthorship
        are not entitled to protection against in-\\nfringement if they are standard,
        stock, or common to a\\ntopic, or if they necessarily follow from a common
        theme\\nor setting.\u201D Mitel, 124 F.3d at 1374. Under this doctrine,\\n\u201Cwhen
        certain commonplace expressions are indispensable\\nand naturally associated
        with the treatment of a given\\nidea, those expressions are treated like ideas
        and there-\\nfore [are] not protected by copyright.\u201D Swirsky v. Carey,\\n376
        F.3d 841, 850 (9th Cir. 2004). In the computer con-\\ntext, \u201Cthe scene
        a faire doctrine denies protection to pro-\\ngram elements that are dictated
        by external factors such\\nas \u2018the mechanical specifications of the computer
        on which\\na particular program is intended to run\u2019 or \u2018widely accept-\\ned
        programming practices within the computer industry.\u2019\u201D\\nSoftel,
        118 F.3d at 963 (citation omitted).\\n    The trial court rejected Google\u2019s
        reliance on the scenes\\na faire doctrine. It did so in a footnote, finding
        that\\nGoogle had failed to present evidence to support the claim\\nthat either
        the grouping of methods within the classes or\\nthe code chosen for them \u201Cwould
        be so expected and\\ncustomary as to be permissible under the scenes a faire\\ndoctrine.\u201D
        Copyrightability Decision, 872 F. Supp. 2d at\\n999 n.9. Specifically, the
        trial court found that \u201Cit is\\nimpossible to say on this record that
        all of the classes and\\ntheir contents are typical of such classes and, on
        this\\n\\f36                       ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nrecord,
        this order rejects Google\u2019s global argument based\\non scenes a faire.\u201D
        Id.\\n     On appeal, Google refers to scenes a faire concepts\\nbriefly,
        as do some amici, apparently contending that,\\nbecause programmers have become
        accustomed to and\\ncomfortable using the groupings in the Java API packag-\\nes,
        those groupings are so commonplace as to be indispen-\\nsable to the expression
        of an acceptable programming\\nplatform. As such, the argument goes, they
        are so associ-\\nated with the \u201Cidea\u201D of what the packages are accomplish-\\ning
        that they should be treated as ideas rather than\\nexpression. See Br. of
        Amici Curiae Rackspace US, Inc.,\\net al. at 19-22.\\n    Google cannot rely
        on the scenes a faire doctrine as an\\nalternative ground upon which we might
        affirm the\\ncopyrightability judgment of the district court. This is so\\nfor
        several reasons. First, as noted, like merger, in the\\nNinth Circuit, the
        scenes a faire doctrine is a component\\nof the infringement analysis. \u201C[S]imilarity
        of expression,\\nwhether literal or non-literal, which necessarily results\\nfrom
        the fact that the common idea is only capable of\\nexpression in more or less
        stereotyped form, will preclude\\na finding of actionable similarity.\u201D
        4 Nimmer on Copy-\\nright \xA7 13.03[B][3]. Thus, the expression is not excluded\\nfrom
        copyright protection; it is just that certain copying is\\nforgiven as a necessary
        incident of any expression of the\\nunderlying idea. See Satava, 323 F.3d
        at 810 n.3 (\u201CThe\\nNinth Circuit treats scenes a faire as a defense to
        in-\\nfringement rather than as a barrier to copyrightability.\u201D).\\n
        \   Second, Google has not objected to the trial court\u2019s\\nconclusion
        that Google failed to make a sufficient factual\\nrecord to support its contention
        that the groupings and\\ncode chosen for the 37 Java API packages were driven
        by\\nexternal factors or premised on features that were either\\ncommonplace
        or essential to the idea being expressed.\\nGoogle provides no record citations
        indicating that such a\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                     37\\n\\n\\n\\nshowing
        was made and does not contend that the trial\\ncourt erred when it expressly
        found it was not. Indeed,\\nGoogle does not even make this argument with respect
        to\\nthe core packages.\\n     Finally, Google\u2019s reliance on the doctrine
        below and\\nthe amici reference to it here are premised on a funda-\\nmental
        misunderstanding of the doctrine. Like merger,\\nthe focus of the scenes a
        faire doctrine is on the circum-\\nstances presented to the creator, not the
        copier. See Mitel,\\n124 F.3d at 1375 (finding error to the extent the trial\\ncourt
        discussed \u201Cwhether external factors such as market\\nforces and efficiency
        considerations justified Iqtel\u2019s copy-\\ning of the command codes\u201D).
        The court\u2019s analytical focus\\nmust be upon the external factors that
        dictated Sun\u2019s\\nselection of classes, methods, and code\u2014not upon
        what\\nGoogle encountered at the time it chose to copy those\\ngroupings and
        that code. See id. \u201C[T]he scenes a faire\\ndoctrine identifies and excludes
        from protection against\\ninfringement expression whose creation \u2018flowed
        naturally\\nfrom considerations external to the author\u2019s creativity.\u2019\u201D\\nId.
        (quoting Nimmer \xA7 13.03[F][3], at 13-131 (1997)). It is\\nthis showing
        the trial court found Google failed to make,\\nand Google cites to nothing
        in the record which indicates\\notherwise.\\n     For these reasons, the trial
        court was correct to con-\\nclude that the scenes a faire doctrine does not
        affect the\\ncopyrightability of either the declaring code in, or the SSO\\nof,
        the Java API packages at issue.\\n      2. The Structure, Sequence, and Organization\\n
        \                 of the API Packages\\n    The district court found that
        the SSO of the Java API\\npackages is creative and original, but nevertheless
        held\\nthat it is a \u201Csystem or method of operation . . . and, there-\\nfore,
        cannot be copyrighted\u201D under 17 U.S.C. \xA7 102(b).\\nCopyrightability
        Decision, 872 F. Supp. 2d at 976-77. In\\nreaching this conclusion, the district
        court seems to have\\n\\f38                      ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\nrelied upon language contained in a First Circuit decision:\\nLotus
        Development Corp. v. Borland International, Inc.,\\n49 F.3d 807 (1st Cir.
        1995), aff\u2019d without opinion by\\nequally divided court, 516 U.S. 233
        (1996). 9\\n    In Lotus, it was undisputed that the defendant copied\\nthe
        menu command hierarchy and interface from Lotus 1-\\n2-3, a computer spreadsheet
        program \u201Cthat enables users\\nto perform accounting functions electronically
        on a com-\\nputer.\u201D 49 F.3d at 809. The menu command hierarchy\\nreferred
        to a series of commands\u2014such as \u201CCopy,\u201D \u201CPrint,\u201D\\nand
        \u201CQuit\u201D\u2014which were arranged into more than 50\\nmenus and submenus.
        Id. Although the defendant did\\nnot copy any Lotus source code, it copied
        the menu com-\\nmand hierarchy into its rival program. The question\\nbefore
        the court was \u201Cwhether a computer menu command\\nhierarchy is copyrightable
        subject matter.\u201D Id.\\n    Although it accepted the district court\u2019s
        finding that\\nLotus developers made some expressive choices in select-\\ning
        and arranging the command terms, the First Circuit\\nfound that the command
        hierarchy was not copyrightable\\nbecause, among other things, it was a \u201Cmethod
        of opera-\\ntion\u201D under Section 102(b). In reaching this conclusion,\\nthe
        court defined a \u201Cmethod of operation\u201D as \u201Cthe means\\nby which
        a person operates something, whether it be a\\ncar, a food processor, or a
        computer.\u201D Id. at 815. 10 Be-\\ncause the Lotus menu command hierarchy
        provided \u201Cthe\\nmeans by which users control and operate Lotus 1-2-3,\u201D
        it\\n\\n\\n     9   The Supreme Court granted certiorari in Lotus,\\nbut,
        shortly after oral argument, the Court announced\\nthat it was equally divided
        and that Justice Stevens took\\nno part in the consideration or decision of
        the case. The\\nCourt therefore left the First Circuit\u2019s decision undis-\\nturbed.
        See Lotus, 516 U.S. at 233-34.\\n     10  The Lotus majority cited no authority
        for this def-\\ninition of \u201Cmethod of operation.\u201D\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                     39\\n\\n\\n\\nwas deemed unprotectable.
        Id. For example, if users\\nwanted to copy material, they would use the \u201CCopy\u201D\\ncommand
        and the command terms would tell the comput-\\ner what to do. According to
        the Lotus court, the \u201Cfact that\\nLotus developers could have designed
        the Lotus menu\\ncommand hierarchy differently is immaterial to the\\nquestion
        of whether it is a \u2018method of operation.\u2019\u201D Id. at\\n816. (noting
        that \u201Cour initial inquiry is not whether the\\nLotus menu command hierarchy
        incorporates any expres-\\nsion\u201D). The court further indicated that,
        \u201C[i]f specific\\nwords are essential to operating something, then they
        are\\npart of a \u2018method of operation\u2019 and, as such, are unpro-\\ntectable.\u201D
        Id.\\n    On appeal, Oracle argues that the district court\u2019s reli-\\nance
        on Lotus is misplaced because it is distinguishable\\non its facts and is
        inconsistent with Ninth Circuit law.\\nWe agree. First, while the defendant
        in Lotus did not\\ncopy any of the underlying code, Google concedes that it\\ncopied
        portions of Oracle\u2019s declaring source code verbatim.\\nSecond, the Lotus
        court found that the commands at issue\\nthere (copy, print, etc.) were not
        creative, but it is undis-\\nputed here that the declaring code and the structure
        and\\norganization of the API packages are both creative and\\noriginal. Finally,
        while the court in Lotus found the\\ncommands at issue were \u201Cessential
        to operating\u201D the\\nsystem, it is undisputed that\u2014other than perhaps
        as to\\nthe three core packages\u2014Google did not need to copy the\\nstructure,
        sequence, and organization of the Java API\\npackages to write programs in
        the Java language.\\n    More importantly, however, the Ninth Circuit has
        not\\nadopted the court\u2019s \u201Cmethod of operation\u201D reasoning in\\nLotus,
        and we conclude that it is inconsistent with bind-\\ning precedent. 11 Specifically,
        we find that Lotus is incon-\\n\\n\\n    11 As Oracle points out, the Ninth
        Circuit has cited\\nLotus only one time, on a procedural issue. See Danjaq\\n\\f40
        \                      ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nsistent
        with Ninth Circuit case law recognizing that the\\nstructure, sequence, and
        organization of a computer\\nprogram is eligible for copyright protection
        where it\\nqualifies as an expression of an idea, rather than the idea\\nitself.
        See Johnson Controls, 886 F.2d at 1175-76. And,\\nwhile the court in Lotus
        held \u201Cthat expression that is part\\nof a \u2018method of operation\u2019
        cannot be copyrighted,\u201D 49 F.3d\\nat 818, this court\u2014applying Ninth
        Circuit law\u2014reached\\nthe exact opposite conclusion, finding that copyright\\nprotects
        \u201Cthe expression of [a] process or method,\u201D Atari,\\n975 F.2d at
        839.\\n     We find, moreover, that the hard and fast rule set\\ndown in Lotus
        and employed by the district court here\u2014\\ni.e., that elements which
        perform a function can never be\\ncopyrightable\u2014is at odds with the Ninth
        Circuit\u2019s en-\\ndorsement of the abstraction-filtration-comparison analy-\\nsis
        discussed earlier. As the Tenth Circuit concluded in\\nexpressly rejecting
        the Lotus \u201Cmethod of operation\u201D analy-\\nsis, in favor of the Second
        Circuit\u2019s abstraction-filtration-\\ncomparison test, \u201Calthough an
        element of a work may be\\ncharacterized as a method of operation, that element
        may\\nnevertheless contain expression that is eligible for copy-\\nright protection.\u201D
        Mitel, 124 F.3d at 1372. Specifically,\\nthe court found that Section 102(b)
        \u201Cdoes not extinguish\\nthe protection accorded a particular expression
        of an idea\\nmerely because that expression is embodied in a method\\nof operation
        at a higher level of abstraction.\u201D Id.\\n   Other courts agree that components
        of a program that\\ncan be characterized as a \u201Cmethod of operation\u201D
        may\\n\\n\\nLLC v. Sony Corp., 263 F.3d 942, 954 (9th Cir. 2001)\\n(citing
        Lotus for the proposition that delay \u201Chas been held\\npermissible, among
        other reasons, when it is necessitated\\nby the exhaustion of remedies through
        the administrative\\nprocess . . . when it is used to evaluate and prepare
        a\\ncomplicated claim\u201D).\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                   41\\n\\n\\n\\nnevertheless
        be copyrightable. For example, the Third\\nCircuit rejected a defendant\u2019s
        argument that operating\\nsystem programs are \u201Cper se\u201D uncopyrightable
        because an\\noperating system is a \u201Cmethod of operation\u201D for a comput-\\ner.
        Apple Computer, Inc. v. Franklin Computer Corp., 714\\nF.2d 1240, 1250-52
        (3d Cir. 1983). The court distin-\\nguished between the \u201Cmethod which
        instructs the com-\\nputer to perform its operating functions\u201D and \u201Cthe\\ninstructions
        themselves,\u201D and found that the instructions\\nwere copyrightable. Id.
        at 1250-51. In its analysis, the\\ncourt noted: \u201C[t]hat the words of
        a program are used\\nultimately in the implementation of a process should
        in no\\nway affect their copyrightability.\u201D Id. at 1252 (quoting\\nCONTU
        Report at 21). The court focused \u201Con whether the\\nidea is capable of
        various modes of expression\u201D and indi-\\ncated that, \u201C[i]f other
        programs can be written or created\\nwhich perform the same function as [i]n
        Apple\u2019s operating\\nsystem program, then that program is an expression
        of\\nthe idea and hence copyrightable.\u201D Id. at 1253. Notably,\\nno other
        circuit has adopted the First Circuit\u2019s \u201Cmethod of\\noperation\u201D
        analysis.\\n    Courts have likewise found that classifying a work as\\na
        \u201Csystem\u201D does not preclude copyright for the particular\\nexpression
        of that system. See Toro Co. v. R & R Prods.\\nCo., 787 F.2d 1208, 1212 (8th
        Cir. 1986) (rejecting the\\ndistrict court\u2019s decision that \u201Cappellant\u2019s
        parts numbering\\nsystem is not copyrightable because it is a \u2018system\u2019\u201D
        and\\nindicating that Section 102(b) does not preclude protec-\\ntion for
        the \u201Cparticular expression\u201D of that system); see\\nalso Am. Dental
        Ass\u2019n v. Delta Dental Plans Ass\u2019n, 126\\nF.3d 977, 980 (7th Cir.
        1997) (\u201CA dictionary cannot be\\ncalled a \u2018system\u2019 just because
        new novels are written\\nusing words, all of which appear in the dictionary.
        Nor is\\nword-processing software a \u2018system\u2019 just because it has
        a\\ncommand structure for producing paragraphs.\u201D).\\n   Here, the district
        court recognized that the SSO \u201Cre-\\nsembles a taxonomy,\u201D but found
        that \u201Cit is nevertheless a\\n\\f42                      ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\ncommand structure, a system or method of
        operation\u2014a\\nlong hierarchy of over six thousand commands to carry\\nout
        pre-assigned functions.\u201D Copyrightability Decision,\\n872 F. Supp. 2d
        at 999-1000. 12 In other words, the court\\nconcluded that, although the SSO
        is expressive, it is not\\ncopyrightable because it is also functional. The
        problem\\nwith the district court\u2019s approach is that computer pro-\\ngrams
        are by definition functional\u2014they are all designed\\nto accomplish some
        task. Indeed, the statutory definition\\nof \u201Ccomputer program\u201D acknowledges
        that they function\\n\u201Cto bring about a certain result.\u201D See 17 U.S.C.
        \xA7 101\\n(defining a \u201Ccomputer program\u201D as \u201Ca set of statements
        or\\ninstructions to be used directly or indirectly in a computer\\nin order
        to bring about a certain result\u201D). If we were to\\naccept the district
        court\u2019s suggestion that a computer\\nprogram is uncopyrightable simply
        because it \u201Ccarr[ies]\\nout pre-assigned functions,\u201D no computer
        program is\\nprotectable. That result contradicts Congress\u2019s express\\nintent
        to provide copyright protection to computer pro-\\ngrams, as well as binding
        Ninth Circuit case law finding\\ncomputer programs copyrightable, despite
        their utilitari-\\nan or functional purpose. Though the trial court did add\\nthe
        caveat that it \u201Cdoes not hold that the structure, se-\\nquence and organization
        of all computer programs may be\\nstolen,\u201D Copyrightability Decision,
        872 F. Supp. 2d at\\n1002, it is hard to see how its method of operation analy-\\nsis
        could lead to any other conclusion.\\n   While it does not appear that the
        Ninth Circuit has\\naddressed the precise issue, we conclude that a set of\\ncommands
        to instruct a computer to carry out desired\\n\\n\\n\\n     12 This analogy
        by the district court is meaningful\\nbecause taxonomies, in varying forms,
        have generally\\nbeen deemed copyrightable. See, e.g., Practice Mgmt. Info.\\nCorp.
        v. Am. Med. Ass\u2019n, 121 F.3d 516, 517-20 (9th Cir.\\n1997); Am. Dental,
        126 F.3d at 978-81.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                  43\\n\\n\\n\\noperations
        may contain expression that is eligible for\\ncopyright protection. See Mitel,
        124 F.3d at 1372. We\\nagree with Oracle that, under Ninth Circuit law, an\\noriginal
        work\u2014even one that serves a function\u2014is enti-\\ntled to copyright
        protection as long as the author had\\nmultiple ways to express the underlying
        idea. Section\\n102(b) does not, as Google seems to suggest, automatically\\ndeny
        copyright protection to elements of a computer\\nprogram that are functional.
        Instead, as noted, Sec-\\ntion 102(b) codifies the idea/expression dichotomy
        and the\\nlegislative history confirms that, among other things,\\nSection
        102(b) was \u201Cintended to make clear that the\\nexpression adopted by the
        programmer is the copyrighta-\\nble element in a computer program.\u201D H.R.
        Rep. No. 1476,\\n94th Cong., 2d Sess. 54, reprinted in 1976 U.S.C.C.A.N.\\n5659,
        5670. Therefore, even if an element directs a com-\\nputer to perform operations,
        the court must nevertheless\\ndetermine whether it contains any separable
        expression\\nentitled to protection.\\n     On appeal, Oracle does not\u2014and
        concedes that it can-\\nnot\u2014claim copyright in the idea of organizing
        functions of\\na computer program or in the \u201Cpackage-class-method\u201D\\norganizational
        structure in the abstract. Instead, Oracle\\nclaims copyright protection only
        in its particular way of\\nnaming and organizing each of the 37 Java API packag-\\nes.
        13 Oracle recognizes, for example, that it \u201Ccannot\\ncopyright the idea
        of programs that open an internet\\n\\n\\n\\n   13   At oral argument, counsel
        for Oracle explained\\nthat it \u201Cwould never claim that anyone who uses
        a pack-\\nage-class-method manner of classifying violates our\\ncopyright.
        We don\u2019t own every conceivable way of organ-\\nizing, we own only our
        specific expression\u2014our specific\\nway of naming each of these 362 methods,
        putting them\\ninto 36 classes, and 20 subclasses.\u201D Oral Argument at\\n16:44.\\n\\f44
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nconnection,\u201D
        but \u201Cit can copyright the precise strings of\\ncode used to do so, at
        least so long as \u2018other language is\\navailable\u2019 to achieve the
        same function.\u201D Appellant Reply\\nBr. 13-14 (citation omitted). Thus,
        Oracle concedes that\\nGoogle and others could employ the Java language\u2014much\\nlike
        anyone could employ the English language to write a\\nparagraph without violating
        the copyrights of other\\nEnglish language writers. And, that Google may employ\\nthe
        \u201Cpackage-class-method\u201D structure much like authors\\ncan employ
        the same rules of grammar chosen by other\\nauthors without fear of infringement.
        What Oracle con-\\ntends is that, beyond that point, Google, like any author,\\nis
        not permitted to employ the precise phrasing or precise\\nstructure chosen
        by Oracle to flesh out the substance of\\nits packages\u2014the details and
        arrangement of the prose.\\n    As the district court acknowledged, Google
        could have\\nstructured Android differently and could have chosen\\ndifferent
        ways to express and implement the functionality\\nthat it copied. 14 Specifically,
        the court found that \u201Cthe\\n\\n\\n\\n     14 Amici McNealy and Sutphin
        explain that \u201Ca quick\\nexamination of other programming environments
        shows\\nthat creators of other development platforms provide the\\nsame functions
        with wholly different creative choices.\u201D\\nBr. of McNealy and Sutphin
        17. For example, in Java, a\\ndeveloper setting the time zone would call the
        \u201CsetTime-\\nZone\u201D method within the \u201CDateFormat\u201D class
        of the ja-\\nva.text package. Id. Apple\u2019s iOS platform, on the other\\nhand,
        \u201Cdevotes an entire class to set the time zone in an\\napplication\u2014the
        \u2018NSTimeZone\u2019 class\u201D which is in the\\n\u201CFoundation framework.\u201D
        Id. at 17-18 (noting that a\\n\u201Cframework is Apple\u2019s terminology
        for a structure concep-\\ntually similar to Java\u2019s \u2018package\u2019\u201D).
        Microsoft provides\\nsimilar functionality with \u201Can entirely different
        structure,\\nnaming scheme, and selection.\u201D Id. at 18 (\u201CIn its Windows\\nPhone
        development platform, Microsoft stores its time\\n\\fORACLE AMERICA, INC.
        \  v. GOOGLE INC.                   45\\n\\n\\n\\nvery same functionality
        could have been offered in An-\\ndroid without duplicating the exact command
        structure\\nused in Java.\u201D Copyrightability Decision, 872 F. Supp. 2d\\nat
        976. The court further explained that Google could\\nhave offered the same
        functions in Android by \u201Cre-\\narranging the various methods under different
        groupings\\namong the various classes and packages.\u201D Id. The evi-\\ndence
        showed, moreover, that Google designed many of its\\nown API packages from
        scratch, and, thus, could have\\ndesigned its own corresponding 37 API packages
        if it\\nwanted to do so.\\n    Given the court\u2019s findings that the SSO
        is original and\\ncreative, and that the declaring code could have been\\nwritten
        and organized in any number of ways and still\\nhave achieved the same functions,
        we conclude that\\nSection 102(b) does not bar the packages from copyright\\nprotection
        just because they also perform functions.\\n         3. Google\u2019s Interoperability
        Arguments\\n            are Irrelevant to Copyrightability\\n    Oracle also
        argues that the district court erred in in-\\nvoking interoperability in its
        copyrightability analysis.\\nSpecifically, Oracle argues that Google\u2019s
        interoperability\\narguments are only relevant, if at all, to fair use\u2014not
        to\\nthe question of whether the API packages are copyrighta-\\nble. We agree.\\n
        \   In characterizing the SSO of the Java API packages\\nas a \u201Cmethod
        of operation,\u201D the district court explained\\nthat \u201C[d]uplication
        of the command structure is necessary\\nfor interoperability.\u201D Copyrightability
        Decision, 872 F.\\nSupp. 2d at 977. The court found that, \u201C[i]n order
        for at\\n\\n\\nzone programs in the \u2018TimeZoneInfo\u2019 class in its
        \u2018Systems\u2019\\nnamespace (Microsoft\u2019s version of a \u2018package\u2019
        or \u2018frame-\\nwork\u2019).\u201D). Again, this is consistent with the
        evidence\\npresented at trial.\\n\\f46                      ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nleast some of [the pre-Android Java] code
        to run on An-\\ndroid, Google was required to provide the same ja-\\nva.package.Class.method()
        command system using the\\nsame names with the same \u2018taxonomy\u2019 and
        with the same\\nfunctional specifications.\u201D Id. at 1000 (emphasis omitted).\\nAnd,
        the court concluded that \u201CGoogle replicated what\\nwas necessary to achieve
        a degree of interoperability\u2014but\\nno more, taking care, as said before,
        to provide its own\\nimplementations.\u201D Id. In reaching this conclusion,
        the\\ncourt relied primarily on two Ninth Circuit decisions:\\nSega Enterprises
        v. Accolade, Inc., 977 F.2d 1510 (9th Cir.\\n1992), and Sony Computer Entertainment,
        Inc. v. Con-\\nnectix, Corp., 203 F.3d 596 (9th Cir. 2000).\\n    Both Sega
        and Sony are fair use cases in which copy-\\nrightability was addressed only
        tangentially. In Sega, for\\nexample, Sega manufactured a video game console
        and\\ngame cartridges that contained hidden functional pro-\\ngram elements
        necessary to achieve compatibility with\\nthe console. Defendant Accolade:
        (1) reverse-engineered\\nSega\u2019s video game programs to discover the requirements\\nfor
        compatibility; and (2) created its own games for the\\nSega console. Sega,
        977 F.2d at 1514-15. As part of the\\nreverse-engineering process, Accolade
        made intermediate\\ncopies of object code from Sega\u2019s console. Id. Although\\nthe
        court recognized that the intermediate copying of\\ncomputer code may infringe
        Sega\u2019s copyright, it concluded\\nthat \u201Cdisassembly of copyrighted
        object code is, as a\\nmatter of law, a fair use of the copyrighted work if
        such\\ndisassembly provides the only means of access to those\\nelements of
        the code that are not protected by copyright\\nand the copier has a legitimate
        reason for seeking such\\naccess.\u201D Id. at 1518. The court agreed with
        Accolade that\\nits copying was necessary to examine the unprotected\\nfunctional
        aspects of the program. Id. at 1520. And,\\nbecause Accolade had a legitimate
        interest in making its\\ncartridges compatible with Sega\u2019s console, the
        court found\\nthat Accolade\u2019s intermediate copying was fair use.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                   47\\n\\n\\n\\n    Likewise,
        in Sony, the Ninth Circuit found that the\\ndefendant\u2019s reverse engineering
        and intermediate copying\\nof Sony\u2019s copyrighted software program \u201Cwas
        a fair use for\\nthe purpose of gaining access to the unprotected elements\\nof
        Sony\u2019s software.\u201D Sony, 203 F.3d at 602. The court\\nexplained that
        Sony\u2019s software program contained unpro-\\ntected functional elements
        and that the defendant could\\nonly access those elements through reverse
        engineering.\\nId. at 603. The defendant used that information to create\\na
        software program that let consumers play games de-\\nsigned for Sony\u2019s
        PlayStation console on their computers.\\nNotably, the defendant\u2019s software
        program did not con-\\ntain any of Sony\u2019s copyrighted material. Id. at
        598.\\n    The district court characterized Sony and Sega as\\n\u201Cclose
        analogies\u201D to this case. Copyrightability Decision,\\n872 F. Supp. 2d
        at 1000. According to the court, both\\ndecisions \u201Cheld that interface
        procedures that were neces-\\nsary to duplicate in order to achieve interoperability
        were\\nfunctional aspects not copyrightable under Section\\n102(b).\u201D
        Id. The district court\u2019s reliance on Sega and\\nSony in the copyrightability
        context is misplaced, howev-\\ner.\\n    As noted, both cases were focused
        on fair use, not cop-\\nyrightability. In Sega, for example, the only question
        was\\nwhether Accolade\u2019s intermediate copying was fair use.\\nThe court
        never addressed the question of whether Sega\u2019s\\nsoftware code, which
        had functional elements, also con-\\ntained separable creative expression
        entitled to protec-\\ntion. Likewise, although the court in Sony determined\\nthat
        Sony\u2019s computer program had functional elements, it\\nnever addressed
        whether it also had expressive elements.\\nSega and Sony are also factually
        distinguishable because\\nthe defendants in those cases made intermediate
        copies to\\nunderstand the functional aspects of the copyrighted\\nworks and
        then created new products. See Sony, 203 F.3d\\nat 606-07; Sega, 977 F.2d
        at 1522-23. This is not a case\\nwhere Google reverse-engineered Oracle\u2019s
        Java packages\\n\\f48                      ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\nto gain access to unprotected functional elements con-\\ntained
        therein. As the former Register of Copyrights of\\nthe United States pointed
        out in his brief amicus curiae,\\n\u201C[h]ad Google reverse engineered the
        programming pack-\\nages to figure out the ideas and functionality of the
        origi-\\nnal, and then created its own structure and its own literal\\ncode,
        Oracle would have no remedy under copyright\\nwhatsoever.\u201D Br. for Amicus
        Curiae Ralph Oman 29.\\nInstead, Google chose to copy both the declaring code
        and\\nthe overall SSO of the 37 Java API packages at issue.\\n     We disagree
        with Google\u2019s suggestion that Sony and\\nSega created an \u201Cinteroperability
        exception\u201D to copyright-\\nability. See Appellee Br. 39 (citing Sony
        and Sega for the\\nproposition that \u201Ccompatibility elements are not copy-\\nrightable
        under section 102(b)\u201D (emphasis omitted)).\\nAlthough both cases recognized
        that the software pro-\\ngrams at issue there contained unprotected functional\\nelements,
        a determination that some elements are unpro-\\ntected is not the same as
        saying that the entire work loses\\ncopyright protection. To accept Google\u2019s
        reading would\\ncontradict Ninth Circuit case law recognizing that both\\nthe
        literal and non-literal components of a software\\nprogram are eligible for
        copyright protection. See John-\\nson Controls, 886 F.2d at 1175. And it would
        ignore the\\nfact that the Ninth Circuit endorsed the abstraction-\\nfiltration-comparison
        inquiry in Sega itself.\\n    As previously discussed, a court must examine
        the\\nsoftware program to determine whether it contains crea-\\ntive expression
        that can be separated from the underlying\\nfunction. See Sega, 977 F.2d at
        1524-25. In doing so, the\\ncourt filters out the elements of the program
        that are\\n\u201Cideas\u201D as well as elements that are \u201Cdictated by
        consider-\\nations of efficiency, so as to be necessarily incidental to\\nthat
        idea; required by factors external to the program\\nitself.\u201D Altai, 982
        F.2d at 707.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                  49\\n\\n\\n\\n
        \    To determine \u201Cwhether certain aspects of an allegedly\\ninfringed
        software are not protected by copyright law, the\\nfocus is on external factors
        that influenced the choice of\\nthe creator of the infringed product.\u201D
        Dun & Bradstreet\\nSoftware Servs., Inc. v. Grace Consulting, Inc., 307 F.3d\\n197,
        215 (3d Cir. 2002) (citing Altai, 982 F.2d at 714;\\nMitel, 124 F.3d at 1375).
        The Second Circuit, for example,\\nhas noted that programmers are often constrained
        in\\ntheir design choices by \u201Cextrinsic considerations\u201D includ-\\ning
        \u201Cthe mechanical specifications of the computer on\\nwhich a particular
        program is intended to run\u201D and \u201Ccom-\\npatibility requirements
        of other programs with which a\\nprogram is designed to operate in conjunction.\u201D
        Altai, 982\\nF.2d at 709-10 (citing 3 Melville B. Nimmer & David\\nNimmer,
        Nimmer on Copyright \xA7 13.01 at 13-66-71\\n(1991)). The Ninth Circuit has
        likewise recognized that:\\n(1) computer programs \u201Ccontain many logical,
        structural,\\nand visual display elements that are dictated by . . .\\nexternal
        factors such as compatibility requirements and\\nindustry demands\u201D; and
        (2) \u201C[i]n some circumstances,\\neven the exact set of commands used by
        the programmer\\nis deemed functional rather than creative for purposes of\\ncopyright.\u201D
        Sega, 977 F.2d at 1524 (internal citation\\nomitted).\\n    Because copyrightability
        is focused on the choices\\navailable to the plaintiff at the time the computer
        pro-\\ngram was created, the relevant compatibility inquiry asks\\nwhether
        the plaintiff\u2019s choices were dictated by a need to\\nensure that its
        program worked with existing third-party\\nprograms. Dun & Bradstreet, 307
        F.3d at 215; see also\\nAtari, 975 F.2d at 840 (\u201CExternal factors did
        not dictate\\nthe design of the 10NES program.\u201D). Whether a defend-\\nant
        later seeks to make its program interoperable with\\nthe plaintiff\u2019s
        program has no bearing on whether the\\nsoftware the plaintiff created had
        any design limitations\\ndictated by external factors. See Dun & Bradstreet,
        307\\nF.3d at 215 (finding an expert\u2019s testimony on interopera-\\n\\f50
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nbility
        \u201Cwholly misplaced\u201D because he \u201Clooked at externali-\\nties
        from the eyes of the plagiarist, not the eyes of the\\nprogram\u2019s creator\u201D).
        Stated differently, the focus is on the\\ncompatibility needs and programming
        choices of the party\\nclaiming copyright protection\u2014not the choices
        the de-\\nfendant made to achieve compatibility with the plaintiff\u2019s\\nprogram.
        Consistent with this approach, courts have\\nrecognized that, once the plaintiff
        creates a copyrightable\\nwork, a defendant\u2019s desire \u201Cto achieve
        total compatibil-\\nity . . . is a commercial and competitive objective which\\ndoes
        not enter into the . . . issue of whether particular\\nideas and expressions
        have merged.\u201D Apple Computer,\\n714 F.2d at 1253.\\n     Given this precedent,
        we conclude that the district\\ncourt erred in focusing its interoperability
        analysis on\\nGoogle\u2019s desires for its Android software. See Copyrighta-\\nbility
        Decision, 872 F. Supp. 2d at 1000 (\u201CGoogle replicat-\\ned what was necessary
        to achieve a degree of\\ninteroperability\u201D with Java.). Whether Google\u2019s
        software\\nis \u201Cinteroperable\u201D in some sense with any aspect of the\\nJava
        platform (although as Google concedes, certainly not\\nwith the JVM) has no
        bearing on the threshold question of\\nwhether Oracle\u2019s software is copyrightable.
        It is the\\ninteroperability and other needs of Oracle\u2014not those of\\nGoogle\u2014that
        apply in the copyrightability context, and\\nthere is no evidence that when
        Oracle created the Java\\nAPI packages at issue it did so to meet compatibility\\nrequirements
        of other pre-existing programs.\\n     Google maintains on appeal that its
        use of the \u201CJava\\nclass and method names and declarations was \u2018the
        only\\nand essential means\u2019 of achieving a degree of interopera-\\nbility
        with existing programs written in the [Java lan-\\nguage].\u201D Appellee
        Br. 49. Indeed, given the record\\nevidence that Google designed Android so
        that it would\\nnot be compatible with the Java platform, or the JVM\\nspecifically,
        we find Google\u2019s interoperability argument\\nconfusing. While Google
        repeatedly cites to the district\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.
        \                   51\\n\\n\\n\\ncourt\u2019s finding that Google had to
        copy the packages so\\nthat an app written in Java could run on Android, it
        cites\\nto no evidence in the record that any such app exists and\\npoints
        to no Java apps that either pre-dated or post-dated\\nAndroid that could run
        on the Android platform. 15 The\\ncompatibility Google sought to foster was
        not with Ora-\\ncle\u2019s Java platform or with the JVM central to that plat-\\nform.
        Instead, Google wanted to capitalize on the fact\\nthat software developers
        were already trained and experi-\\nenced in using the Java API packages at
        issue. The\\ndistrict court agreed, finding that, as to the 37 Java API\\npackages,
        \u201CGoogle believed Java application programmers\\nwould want to find the
        same 37 sets of functionalities in\\nthe new Android system callable by the
        same names as\\nused in Java.\u201D Copyrightability Decision, 872 F. Supp.
        2d\\nat 978. Google\u2019s interest was in accelerating its develop-\\nment
        process by \u201Cleverag[ing] Java for its existing base of\\ndevelopers.\u201D
        J.A. 2033, 2092. Although this competitive\\nobjective might be relevant to
        the fair use inquiry, we\\nconclude that it is irrelevant to the copyrightability
        of\\nOracle\u2019s declaring code and organization of the API pack-\\nages.\\n
        \   Finally, to the extent Google suggests that it was enti-\\ntled to copy
        the Java API packages because they had\\n\\n\\n\\n   15   During oral argument,
        Google\u2019s counsel stated\\nthat \u201Ca program written in the Java language
        can run on\\nAndroid if it\u2019s only using packages within the 37. So if\\nI\u2019m
        a developer and I have written a program, I\u2019ve written\\nit in Java,
        I can stick an Android header on it and it will\\nrun in Android because it
        is using the identical names of\\nthe classes, methods, and packages.\u201D
        Oral Argument at\\n31:31. Counsel did not identify any programs that use\\nonly
        the 37 API packages at issue, however, and did not\\nattest that any such
        program would be useful. Nor did\\nGoogle cite to any record evidence to support
        this claim.\\n\\f52                      ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\nbecome the effective industry standard, we are unper-\\nsuaded.
        Google cites no authority for its suggestion that\\ncopyrighted works lose
        protection when they become\\npopular, and we have found none. 16 In fact,
        the Ninth\\nCircuit has rejected the argument that a work that later\\nbecomes
        the industry standard is uncopyrightable. See\\nPractice Mgmt. Info. Corp.
        v. Am. Med. Ass\u2019n, 121 F.3d\\n516, 520 n.8 (9th Cir. 1997) (noting that
        the district court\\nfound plaintiff\u2019s medical coding system entitled
        to copy-\\nright protection, and that, although the system had\\nbecome the
        industry standard, plaintiff\u2019s copyright did not\\nprevent competitors
        \u201Cfrom developing comparative or\\nbetter coding systems and lobbying
        the federal govern-\\nment and private actors to adopt them. It simply pre-\\nvents
        wholesale copying of an existing system.\u201D). Google\\nwas free to develop
        its own API packages and to \u201Clobby\u201D\\nprogrammers to adopt them.
        Instead, it chose to copy\\n\\n\\n     16 Google argues that, in the same
        way a formerly\\ndistinctive trademark can become generic over time, a\\nprogram
        element can lose copyright protection when it\\nbecomes an industry standard.
        But \u201Cit is to be expected\\nthat phrases and other fragments of expression
        in a\\nhighly successful copyrighted work will become part of the\\nlanguage.
        That does not mean they lose all protection in\\nthe manner of a trade name
        that has become generic.\u201D\\nWarner Bros., Inc. v. Am. Broadcasting Cos.,
        720 F.2d\\n231, 242 (2d Cir. 1983) (\u201CNo matter how well known a\\ncopyrighted
        phrase becomes, its author is entitled to\\nguard against its appropriation
        to promote the sale of\\ncommercial products.\u201D). Notably, even when a
        patented\\nmethod or system becomes an acknowledged industry\\nstandard with
        acquiescence of the patent owner, any\\npermissible use generally requires
        payment of a reasona-\\nble royalty, which Google refused to do here. See
        general-\\nly In re Innovatio IP Ventures, LLC, No. 11-C-9308, 2013\\nU.S.
        Dist. LEXIS 144061 (N.D. Ill. Sept. 27, 2013).\\n\\fORACLE AMERICA, INC.   v.
        GOOGLE INC.                    53\\n\\n\\n\\nOracle\u2019s declaring code
        and the SSO to capitalize on the\\npreexisting community of programmers who
        were accus-\\ntomed to using the Java API packages. That desire has\\nnothing
        to do with copyrightability. For these reasons, we\\nfind that Google\u2019s
        industry standard argument has no\\nbearing on the copyrightability of Oracle\u2019s
        work.\\n                         B. Fair Use\\n    As noted, the jury hung
        on Google\u2019s fair use defense,\\nand the district court declined to order
        a new trial given\\nits conclusion that the code and structure Google copied\\nwere
        not entitled to copyright protection. On appeal,\\nOracle argues that: (1)
        a remand to decide fair use \u201Cis\\npointless\u201D; and (2) this court
        should find, as a matter of\\nlaw, that \u201CGoogle\u2019s commercial use
        of Oracle\u2019s work in a\\nmarket where Oracle already competed was not
        fair use.\u201D\\nAppellant Br. 68.\\n    Fair use is an affirmative defense
        to copyright in-\\nfringement and is codified in Section 107 of the Copyright\\nAct.
        Golan, 132 S. Ct. at 890 (\u201C[T]he fair use defense, is\\ncodified at 17
        U.S.C. \xA7 107.\u201D). Section 107 permits use of\\ncopyrighted work if
        it is \u201Cfor purposes such as criticism,\\ncomment, news reporting, teaching
        (including multiple\\ncopies for classroom use), scholarship, or research.\u201D
        17\\nU.S.C. \xA7 107. The fair use doctrine has been referred to\\nas \u201C\u2018the
        most troublesome in the whole law of copyright.\u2019\u201D\\nMonge v. Maya
        Magazines, Inc., 688 F.3d 1164, 1170 (9th\\nCir. 2012) (quoting Dellar v.
        Samuel Goldwyn, Inc., 104\\nF.2d 661, 662 (2d Cir. 1939) (per curiam)). It
        both per-\\nmits and requires \u201Ccourts to avoid rigid application of the\\ncopyright
        statute when, on occasion, it would stifle the\\nvery creativity which that
        law is designed to foster.\u201D\\nCampbell v. Acuff-Rose Music, Inc., 510
        U.S. 569, 577\\n(1994) (quoting Stewart v. Abend, 495 U.S. 207, 236\\n(1990)).\\n
        \  \u201CSection 107 requires a case-by-case determination\\nwhether a particular
        use is fair, and the statute notes four\\n\\f54                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nnonexclusive factors to be considered.\u201D
        Harper & Row\\nPublishers, Inc. v. Nation Enters., 471 U.S. 539, 549\\n(1985).
        Those factors are: (1) \u201Cthe purpose and character\\nof the use, including
        whether such use is of a commercial\\nnature or is for nonprofit educational
        purposes;\u201D (2) \u201Cthe\\nnature of the copyrighted work;\u201D (3)
        \u201Cthe amount and\\nsubstantiality of the portion used in relation to the
        copy-\\nrighted work as a whole;\u201D and (4) \u201Cthe effect of the use\\nupon
        the potential market for or value of the copyrighted\\nwork.\u201D 17 U.S.C.
        \xA7 107. The Supreme Court has ex-\\nplained that all of the statutory factors
        \u201Care to be ex-\\nplored, and the results weighed together, in light of
        the\\npurpose[] of copyright,\u201D which is \u201C[t]o promote the Pro-\\ngress
        of Science and useful Arts.\u201D Campbell, 510 U.S. at\\n578, 575 (internal
        citations omitted).\\n    \u201CFair use is a mixed question of law and fact.\u201D
        Harper\\n& Row, 471 U.S. at 560. Thus, while subsidiary and\\ncontroverted
        findings of fact must be reviewed for clear\\nerror under Rule 52 of the Federal
        Rules of Civil Proce-\\ndure, the Ninth Circuit reviews the ultimate application\\nof
        those facts de novo. See Seltzer v. Green Day, Inc., 725\\nF.3d 1170, 1175
        (9th Cir. 2013) (citing SOFA Entm\u2019t, Inc.\\nv. Dodger Prods., Inc., 709
        F.3d 1273, 1277 (9th Cir.\\n2013)). Where there are no material facts at issue
        and\\n\u201Cthe parties dispute only the ultimate conclusions to be\\ndrawn
        from those facts, we may draw those conclusions\\nwithout usurping the function
        of the jury.\u201D Id. (citing\\nFisher v. Dees, 794 F.2d 432, 436 (9th Cir.
        1986)). Indeed,\\nthe Supreme Court has specifically recognized that,\\n\u201C[w]here
        the district court has found facts sufficient to\\nevaluate each of the statutory
        factors, an appellate court\\n\u2018need not remand for further factfinding
        . . . [but] may\\nconclude as a matter of law that [the challenged use]\\n[does]
        not qualify as a fair use of the copyrighted work.\u2019\u201D\\nHarper &
        Row, 471 U.S. at 560 (citation omitted).\\n   Of course, the corollary to
        this point is true as well\u2014\\nwhere there are material facts in dispute
        and those facts\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                      55\\n\\n\\n\\nhave
        not yet been resolved by the trier of fact, appellate\\ncourts may not make
        findings of fact in the first instance.\\nSee Shawmut Bank, N.A. v. Kress
        Assocs., 33 F.3d 1477,\\n1504 (9th Cir. 1994) (\u201C[W]e must avoid finding
        facts in the\\nfirst instance.\u201D); see also Golden Bridge Tech., Inc.
        v.\\nNokia, Inc., 527 F.3d 1318, 1323 (Fed. Cir. 2008) (\u201CAppel-\\nlate
        courts review district court judgments; we do not find\\nfacts.\u201D). Here,
        it is undisputed that neither the jury nor\\nthe district court made findings
        of fact to which we can\\nrefer in assessing the question of whether Google\u2019s
        use of\\nthe API packages at issue was a \u201Cfair use\u201D within the\\nmeaning
        of Section 107. Oracle urges resolution of the\\nfair use question by arguing
        that the trial court should\\nhave decided the question as a matter of law
        based on the\\nundisputed facts developed at trial, and that we can do so\\nas
        well. Google, on the other hand, argues that many\\ncritical facts regarding
        fair use are in dispute. It asserts\\nthat the fact that the jury could not
        reach a resolution on\\nthe fair use defense indicates that at least some
        presuma-\\nbly reasonable jurors found its use to be fair. And, Google\\nasserts
        that, even if it is true that the district court erred\\nin discussing concepts
        of \u201Cinteroperability\u201D when consider-\\ning copyrightability, those
        concepts are still relevant to its\\nfair use defense. We turn first to a
        more detailed exami-\\nnation of fair use.\\n    The first factor in the fair
        use inquiry involves \u201Cthe\\npurpose and character of the use, including
        whether such\\nuse is of a commercial nature or is for nonprofit educa-\\ntional
        purposes.\u201D 17 U.S.C. \xA7 107(1). This factor involves\\ntwo sub-issues:
        (1) \u201Cwhether and to what extent the new\\nwork is transformative,\u201D
        Campbell, 510 U.S. at 579 (cita-\\ntion and internal quotation marks omitted);
        and\\n(2) whether the use serves a commercial purpose.\\n     A use is \u201Ctransformative\u201D
        if it \u201Cadds something new,\\nwith a further purpose or different character,
        altering the\\nfirst with new expression, meaning or message.\u201D Id. The\\ncritical
        question is \u201Cwhether the new work merely super-\\n\\f56                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nsede[s] the objects of the original
        creation . . . or instead\\nadds something new.\u201D Id. (citations and internal
        quota-\\ntion marks omitted). This inquiry \u201Cmay be guided by the\\nexamples
        given in the preamble to \xA7 107, looking to\\nwhether the use is for criticism,
        or comment, or news\\nreporting, and the like.\u201D Id. at 578-79. \u201CThe
        Supreme\\nCourt has recognized that parodic works, like other works\\nthat
        comment and criticize, are by their nature often\\nsufficiently transformative
        to fit clearly under the fair use\\nexception.\u201D Mattel Inc. v. Walking
        Mountain Prods., 353\\nF.3d 792, 800 (9th Cir. 2003) (citing Campbell, 510
        U.S. at\\n579).\\n     Courts have described new works as \u201Ctransformative\u201D\\nwhen
        \u201Cthe works use copy-righted material for purposes\\ndistinct from the
        purpose of the original material.\u201D Elvis\\nPresley Enters., Inc. v. Passport
        Video, 349 F.3d 622, 629\\n(9th Cir. 2003) (\u201CHere, Passport\u2019s use
        of many of the\\ntelevision clips is transformative because they are cited
        as\\nhistorical reference points in the life of a remarkable\\nentertainer.\u201D),
        overruled on other grounds by Flexible\\nLifeline Sys., Inc. v. Precision
        Lift, Inc., 654 F.3d 989, 995\\n(9th Cir. 2011) (per curiam); see also Bouchat
        v. Baltimore\\nRavens Ltd. P\u2019ship, 619 F.3d 301, 309-10 (4th Cir. 2010)\\n(quoting
        A.V. ex rel. Vanderhyge v. iParadigms, LLC, 562\\nF.3d 630, 638 (4th Cir.
        2009) (\u201C[A] transformative use is\\none that \u2018employ[s] the quoted
        matter in a different man-\\nner or for a different purpose from the original.\u2019\u201D)).
        \u201CA use\\nis considered transformative only where a defendant\\nchanges
        a plaintiff\u2019s copyrighted work or uses the plain-\\ntiff\u2019s copyrighted
        work in a different context such that the\\nplaintiff\u2019s work is transformed
        into a new creation.\u201D\\nPerfect 10, Inc. v. Amazon.com, Inc., 508 F.3d
        1146, 1165\\n(9th Cir. 2007) (quoting Wall Data Inc. v. L.A. County\\nSheriff\u2019s
        Dep\u2019t, 447 F.3d 769, 778 (9th Cir. 2006), and\\nfinding that Google\u2019s
        use of thumbnail images in its\\nsearch engine was \u201Chighly transformative\u201D).\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                    57\\n\\n\\n\\n    A work
        is not transformative where the user \u201Cmakes\\nno alteration to the expressive
        content or message of the\\noriginal work.\u201D Seltzer, 725 F.3d at 1177;
        see also Wall\\nData, 447 F.3d at 778 (\u201CThe Sheriff\u2019s Department
        created\\nexact copies of RUMBA\u2019s software. It then put those\\ncopies
        to the identical purpose as the original software.\\nSuch a use cannot be
        considered transformative.\u201D); Monge,\\n688 F.3d at 1176 (finding that
        a magazine\u2019s publication of\\nphotographs of a secret celebrity wedding
        \u201Csprinkled with\\nwritten commentary\u201D was \u201Cat best minimally
        transforma-\\ntive\u201D where the magazine \u201Cdid not transform the photos\\ninto
        a new work . . . or incorporate the photos as part of a\\nbroader work\u201D);
        Elvis Presley Enters., 349 F.3d at 629\\n(finding that use of copyrighted
        clips of Elvis\u2019s television\\nappearances was not transformative where
        \u201Csome of the\\nclips [we]re played without much interruption, if any
        . . .\\n[and] instead serve[d] the same intrinsic entertainment\\nvalue that
        is protected by Plaintiffs\u2019 copyrights.\u201D). Where\\nthe use \u201Cis
        for the same intrinsic purpose as [the copyright\\nholder\u2019s] . . . such
        use seriously weakens a claimed fair\\nuse.\u201D Worldwide Church of God
        v. Phila. Church of God,\\nInc., 227 F.3d 1110, 1117 (9th Cir. 2000) (quoting
        Weiss-\\nmann v. Freeman, 868 F.2d 1313, 1324 (2d Cir. 1989)).\\n     Analysis
        of the first factor also requires inquiry into\\nthe commercial nature of
        the use. Use of the copyrighted\\nwork that is commercial \u201Ctends to weigh
        against a finding\\nof fair use.\u201D Harper & Row, 471 U.S. at 562 (\u201CThe
        crux of\\nthe profit/nonprofit distinction is not whether the sole\\nmotive
        of the use is monetary gain but whether the user\\nstands to profit from exploitation
        of the copyrighted\\nmaterial without paying the customary price.\u201D).
        \u201C[T]he\\nmore transformative the new work, the less will be the\\nsignificance
        of other factors, like commercialism, that may\\nweigh against a finding of
        fair use.\u201D Campbell, 510 U.S.\\nat 579.\\n   The second factor\u2014the
        nature of the copyrighted\\nwork\u2014\u201Ccalls for recognition that some
        works are closer to\\n\\f58                      ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\nthe core of intended copyright protection than others,
        with\\nthe consequence that fair use is more difficult to establish\\nwhen
        the former works are copied.\u201D Id. at 586. This\\nfactor \u201Cturns on
        whether the work is informational or\\ncreative.\u201D Worldwide Church of
        God, 227 F.3d at 1118;\\nsee also Harper & Row, 471 U.S. at 563 (\u201CThe
        law general-\\nly recognizes a greater need to disseminate factual works\\nthan
        works of fiction or fantasy.\u201D). Creative expression\\n\u201Cfalls within
        the core of the copyright\u2019s protective purpos-\\nes.\u201D Campbell,
        510 U.S. at 586. Because computer pro-\\ngrams have both functional and expressive
        components,\\nhowever, where the functional components are themselves\\nunprotected
        (because, e.g., they are dictated by considera-\\ntions of efficiency or other
        external factors), those ele-\\nments should be afforded \u201Ca lower degree
        of protection\\nthan more traditional literary works.\u201D Sega, 977 F.2d
        at\\n1526. Thus, where the nature of the work is such that\\npurely functional
        elements exist in the work and it is\\nnecessary to copy the expressive elements
        in order to\\nperform those functions, consideration of this second\\nfactor
        arguably supports a finding that the use is fair.\\n    The third factor asks
        the court to examine \u201Cthe\\namount and substantiality of the portion
        used in relation\\nto the copyrighted work as a whole.\u201D 17 U.S.C. \xA7
        107(3).\\nAnalysis of this factor is viewed in the context of the\\ncopyrighted
        work, not the infringing work. Indeed, the\\nstatutory language makes clear
        that \u201Ca taking may not be\\nexcused merely because it is insubstantial
        with respect to\\nthe infringing work.\u201D Harper & Row, 471 U.S. at 565.\\n\u201CAs
        Judge Learned Hand cogently remarked, \u2018no plagia-\\nrist can excuse the
        wrong by showing how much of his\\nwork he did not pirate.\u2019\u201D Id.
        (quoting Sheldon v. Metro-\\nGoldwyn Pictures Corp., 81 F.2d 49, 56 (2d Cir.
        1936)). In\\ncontrast, \u201Cthe fact that a substantial portion of the in-\\nfringing
        work was copied verbatim is evidence of the\\nqualitative value of the copied
        material, both to the origi-\\nnator and to the plagiarist who seeks to profit
        from mar-\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                      59\\n\\n\\n\\nketing
        someone else\u2019s copyrighted expression.\u201D Id. The\\nNinth Circuit
        has recognized that, while \u201Cwholesale\\ncopying does not preclude fair
        use per se, copying an\\nentire work militates against a finding of fair use.\u201D\\nWorldwide
        Church of God, 227 F.3d at 1118 (internal\\ncitation and quotation omitted).
        \u201CIf the secondary user\\nonly copies as much as is necessary for his
        or her intended\\nuse, then this factor will not weigh against him or her.\u201D\\nKelly
        v. Arriba Soft Corp., 336 F.3d 811, 820-21 (9th Cir.\\n2003). Under this factor,
        \u201Cattention turns to the persua-\\nsiveness of a parodist\u2019s justification
        for the particular\\ncopying done, and the enquiry will harken back to the\\nfirst
        of the statutory factors . . . [because] the extent of\\npermissible copying
        varies with the purpose and character\\nof the use.\u201D Campbell, 510 U.S.
        at 586-87.\\n     The fourth and final factor focuses on \u201Cthe effect
        of the\\nuse upon the potential market for or value of the copy-\\nrighted
        work.\u201D Harper & Row, 471 U.S. at 566. This\\nfactor reflects the idea
        that fair use \u201Cis limited to copying\\nby others which does not materially
        impair the marketa-\\nbility of the work which is copied.\u201D Id. at 566-67.
        The\\nSupreme Court has said that this factor is \u201Cundoubtedly\\nthe single
        most important element of fair use.\u201D Id. at 566.\\nIt requires that courts
        \u201Cconsider not only the extent of\\nmarket harm caused by the particular
        actions of the\\nalleged infringer, but also whether unrestricted and\\nwidespread
        conduct of the sort engaged in by the defend-\\nant . . . would result in
        a substantially adverse impact on\\nthe potential market for the original.\u201D
        Campbell, 510 U.S.\\nat 590 (citation and quotation marks omitted). \u201CMarket\\nharm
        is a matter of degree, and the importance of this\\nfactor will vary, not
        only with the amount of harm, but\\nalso with the relative strength of the
        showing on the other\\nfactors.\u201D Id. at 590 n.21.\\n     Oracle asserts
        that all of these factors support its po-\\nsition that Google\u2019s use
        was not \u201Cfair use\u201D\u2014Google know-\\ningly and illicitly copied
        a creative work to further its own\\n\\f60                      ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\ncommercial purposes, did so verbatim, and
        did so to the\\ndetriment of Oracle\u2019s market position. These undisputa-\\nble
        facts, according to Oracle, should end the fair use\\ninquiry. Oracle\u2019s
        position is not without force. On many\\nof these points, Google does not
        debate Oracle\u2019s character-\\nization of its conduct, nor could it on
        the record evidence.\\n     Google contends, however, that, although it admitted-\\nly
        copied portions of the API packages and did so for what\\nwere purely commercial
        purposes, a reasonable juror still\\ncould find that: (1) Google\u2019s use
        was transformative;\\n(2) the Java API packages are entitled only to weak\\nprotection;
        (3) Google\u2019s use was necessary to work within\\na language that had become
        an industry standard; and\\n(4) the market impact on Oracle was not substantial.\\n
        \    On balance, we find that due respect for the limit of\\nour appellate
        function requires that we remand the fair\\nuse question for a new trial.
        First, although it is undis-\\nputed that Google\u2019s use of the API packages
        is commer-\\ncial, the parties disagree on whether its use is\\n\u201Ctransformative.\u201D
        Google argues that it is, because it\\nwrote its own implementing code, created
        its own virtual\\nmachine, and incorporated the packages into a\\nsmartphone
        platform. For its part, Oracle maintains that\\nGoogle\u2019s use is not transformative
        because: (1) \u201C[t]he same\\ncode in Android . . . enables programmers
        to invoke the\\nsame pre-programmed functions in exactly the same\\nway;\u201D
        and (2) Google\u2019s use of the declaring code and\\npackages does not serve
        a different function from Java.\\nAppellant Reply Br. 47. While Google overstates
        what\\nactivities can be deemed transformative under a correct\\napplication
        of the law, we cannot say that there are no\\nmaterial facts in dispute on
        the question of whether\\nGoogle\u2019s use is \u201Ctransformative,\u201D
        even under a correct\\nreading of the law. As such, we are unable to resolve
        this\\nissue on appeal.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    61\\n\\n\\n\\n
        \    Next, while we have concluded that it was error for\\nthe trial court
        to focus unduly on the functional aspects of\\nthe packages, and on Google\u2019s
        competitive desire to\\nachieve commercial \u201Cinteroperability\u201D when
        deciding\\nwhether Oracle\u2019s API packages are entitled to copyright\\nprotection,
        we expressly noted that these factors may be\\nrelevant to a fair use analysis.
        While the trial court erred\\nin concluding that these factors were sufficient
        to over-\\ncome Oracle\u2019s threshold claim of copyrightability, reason-\\nable
        jurors might find that they are relevant to Google\u2019s\\nfair use defense
        under the second and third factors of the\\ninquiry. See Sega, 977 F.2d at
        1524-25 (discussing the\\nSecond Circuit\u2019s approach to \u201Cbreak[ing]
        down a computer\\nprogram into its component subroutines and sub-\\nsubroutines
        and then identif[ying] the idea or core func-\\ntional element of each\u201D
        in the context of the second fair\\nuse factor: the nature of the copyrighted
        work). We find\\nthis particularly true with respect to those core packages\\nwhich
        it seems may be necessary for anyone to copy if\\nthey are to write programs
        in the Java language. And, it\\nmay be that others of the packages were similarly
        essen-\\ntial components of any Java language-based program. So\\nfar, that
        type of filtration analysis has not occurred.\\n    Finally, as to market
        impact, the district court found\\nthat \u201CSun and Oracle never successfully
        developed its own\\nsmartphone platform using Java technology.\u201D Copyright-\\nability
        Decision, 872 F. Supp. 2d at 978. But Oracle\\nargues that, when Google copied
        the API packages, Oracle\\nwas licensing in the mobile and smartphone markets,
        and\\nthat Android\u2019s release substantially harmed those com-\\nmercial
        opportunities as well as the potential market for a\\nJava smartphone device.
        Because there are material\\nfacts in dispute on this factor as well, remand
        is neces-\\nsary.\\n   Ultimately, we conclude that this is not a case in\\nwhich
        the record contains sufficient factual findings upon\\nwhich we could base
        a de novo assessment of Google\u2019s\\n\\f62                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\naffirmative defense of fair use.
        Accordingly, we remand\\nthis question to the district court for further proceedings.\\nOn
        remand, the district court should revisit and revise its\\njury instructions
        on fair use consistent with this opinion\\nso as to provide the jury with
        a clear and appropriate\\npicture of the fair use defense. 17\\n               II.
        GOOGLE\u2019S CROSS-APPEAL\\n    Google cross-appeals from the portion of
        the district\\ncourt\u2019s final judgment entered in favor of Oracle on its\\nclaim
        for copyright infringement as to the nine lines of\\n\\n\\n     17  Google
        argues that, if we allow it to retry its fair\\nuse defense on remand, it
        is entitled to a retrial on in-\\nfringement as well. We disagree. The question
        of wheth-\\ner Google\u2019s copying constituted infringement of a\\ncopyrighted
        work is \u201Cdistinct and separable\u201D from the\\nquestion of whether
        Google can establish a fair use de-\\nfense to its copying. See Gasoline Prods.
        Co. v. Champlin\\nRefining Co., 283 U.S. 494, 500 (1931) (\u201CWhere the
        prac-\\ntice permits a partial new trial, it may not properly be\\nresorted
        to unless it clearly appears that the issue to be\\nretried is so distinct
        and separable from the others that a\\ntrial of it alone may be had without
        injustice.\u201D). Indeed,\\nwe have emphasized more than once in this opinion
        the\\nextent to which the questions are separable, and the\\nconfusion and
        error caused when they are blurred. The\\nissues are not \u201Cinterwoven\u201D
        and it would not create \u201Ccon-\\nfusion and uncertainty\u201D to reinstate
        the infringement\\nverdict and submit fair use to a different jury. Id. We\\nnote,
        moreover, that, because Google only mentions this\\npoint in passing, with
        no development of an argument in\\nsupport of it, under our case law, it has
        not been properly\\nraised. See SmithKline Beecham Corp. v. Apotex Corp.,\\n439
        F.3d 1312, 1320 (Fed. Cir. 2006) (when a party pro-\\nvides no developed argument
        on a point, we treat that\\nargument as waived) (collecting cases).\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                     63\\n\\n\\n\\nrangeCheck
        code and the eight decompiled files. Final\\nJudgment, Oracle Am., Inc. v.
        Google Inc., No. 3:10-cv-\\n3561 (N.D. Cal. June 20, 2012), ECF No. 1211.
        Specifical-\\nly, Google appeals from the district court\u2019s decisions:\\n(1)
        granting Oracle\u2019s motion for JMOL of infringement as\\nto the eight decompiled
        Java files that Google copied into\\nAndroid; and (2) denying Google\u2019s
        motion for JMOL with\\nrespect to rangeCheck.\\n    When reviewing a district
        court\u2019s grant or denial of a\\nmotion for JMOL, we apply the procedural
        law of the\\nrelevant regional circuit, here the Ninth Circuit. Trading\\nTechs.
        Int\u2019l, Inc. v. eSpeed, Inc., 595 F.3d 1340, 1357 (Fed.\\nCir. 2010).
        The Ninth Circuit reviews a district court\u2019s\\nJMOL decision de novo,
        applying the same standard as\\nthe district court. Mangum v. Action Collection
        Serv.,\\nInc., 575 F.3d 935, 938 (9th Cir. 2009). To grant judg-\\nment as
        a matter of law, the court must find that \u201Cthe\\nevidence presented at
        trial permits only one reasonable\\nconclusion\u201D and that \u201Cno reasonable
        juror could find in the\\nnon-moving party\u2019s favor.\u201D Id. at 938-39
        (citation and\\ninternal quotation marks omitted).\\n    Oracle explains that
        the eight decompiled files at is-\\nsue \u201Ccontain security functions governing
        access to net-\\nwork files\u201D while rangeCheck \u201Cfacilitates an important\\nsorting
        function, frequently called upon during the opera-\\ntion of Java and Android.\u201D
        Oracle Response to Cross-\\nAppeal 60-61. At trial, Google conceded that it
        copied the\\neight decompiled Java code files and the nine lines of code\\nreferred
        to as rangeCheck into Android. Its only defense\\nwas that the copying was
        de minimis. Accordingly, the\\ndistrict court instructed the jury that, \u201C[w]ith
        respect to\\nthe infringement issues concerning the rangeCheck and\\nother
        similar files, Google agrees that the accused lines of\\ncode and comments
        came from the copyrighted materials\\nbut contends that the amounts involved
        were so negligible\\nas to be de minimis and thus should be excluded.\u201D
        Final\\nCharge to the Jury (Phase One), Oracle Am., Inc. v.\\n\\f64                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nGoogle, Inc., No. 3:10-cv-3561 (N.D.
        Cal. Apr. 30, 2012),\\nECF No. 1018, at 14.\\n     Although the jury found
        that Google infringed Ora-\\ncle\u2019s copyright in the nine lines of code
        comprising\\nrangeCheck, it returned a noninfringement verdict as to\\neight
        decompiled security files. But because the trial\\ntestimony was that Google\u2019s
        use of the decompiled files\\nwas significant\u2014and there was no testimony
        to the con-\\ntrary\u2014the district court concluded that \u201C[n]o reasonable\\njury
        could find that this copying was de minimis.\u201D Order\\nGranting JMOL on
        Decompiled Files, 2012 U.S. Dist.\\nLEXIS 66417, at *6. As such, the court
        granted Oracle\u2019s\\nmotion for JMOL of infringement as to the decompiled\\nsecurity
        files.\\n     On appeal, Google maintains that its copying of\\nrangeCheck
        and the decompiled security files was de\\nminimis and thus did not infringe
        any of Oracle\u2019s copy-\\nrights. According to Google, the district court
        should\\nhave denied Oracle\u2019s motion for JMOL \u201Cbecause substan-\\ntial
        evidence supported the jury\u2019s verdict that Google\u2019s use\\nof eight
        decompiled test files was de minimis.\u201D Cross-\\nAppellant Br. 76. Google
        further argues that the court\\nshould have granted its motion for JMOL as
        to\\nrangeCheck because the \u201Ctrial evidence revealed that the\\nnine
        lines of rangeCheck code were both quantitatively\\nand qualitatively insignificant
        in relation to the [Java]\\nplatform.\u201D Id. at 78.\\n    In response,
        Oracle argues that the Ninth Circuit does\\nnot recognize a de minimis defense
        to copyright infringe-\\nment and that, even if it does, we should affirm
        the judg-\\nments of infringement on grounds that Google\u2019s copying\\nwas
        significant. Because we agree with Oracle on its\\nsecond point, we need not
        address the first, except to note\\nthat there is some conflicting Ninth Circuit
        precedent on\\nthe question of whether there is a free-standing de mini-\\nmis
        defense to copyright infringement or whether the\\n\\fORACLE AMERICA, INC.
        \  v. GOOGLE INC.                    65\\n\\n\\n\\nsubstantiality of the alleged
        copying is best addressed as\\npart of a fair use defense. Compare Norse v.
        Henry Holt &\\nCo., 991 F.2d 563, 566 (9th Cir. 1993) (indicating that\\n\u201Ceven
        a small taking may sometimes be actionable\u201D and\\nthe \u201Cquestion
        of whether a copying is substantial enough\\nto be actionable may be best
        resolved through the fair use\\ndoctrine\u201D), with Newton v. Diamond, 388
        F.3d 1189, 1192-\\n93 (9th Cir. 2003) (\u201CFor an unauthorized use of a
        copy-\\nrighted work to be actionable, the use must be significant\\nenough
        to constitute infringement. This means that even\\nwhere the fact of copying
        is conceded, no legal conse-\\nquences will follow from that fact unless the
        copying is\\nsubstantial.\u201D) (internal citation omitted)). 18\\n    Even
        assuming that the Ninth Circuit recognizes a\\nstand-alone de minimis defense
        to copyright infringement,\\nhowever, we conclude that: (1) the jury reasonably
        found\\nthat Google\u2019s copying of the rangeCheck files was more\\nthan
        de minimis; and (2) the district court correctly\\nconcluded that the defense
        failed as a matter of law with\\nrespect to the decompiled security files.\\n
        \   First, the unrebutted testimony at trial revealed that\\nrangeCheck and
        the decompiled security files were signif-\\nicant to both Oracle and Google.
        Oracle\u2019s expert, Dr. John\\nMitchell, testified that Android devices
        call the\\n\\n\\n   18   At least one recent district court decision has rec-\\nognized
        uncertainty in Ninth Circuit law on this point.\\nSee Brocade Commc\u2019ns
        Sys. v. A10 Networks, Inc., No. 10-\\ncv-3428, 2013 U.S. Dist. LEXIS 8113,
        at *33 (N.D. Cal.\\nJan. 10, 2013) (\u201CThe Ninth Circuit has been unclear
        about\\nwhether the de minimis use doctrine serves as an affirma-\\ntive defense
        under the Copyright Act\u2019s fair use exceptions\\nor whether the doctrine
        merely highlights plaintiffs\u2019\\nobligation to show that \u2018the use
        must be significant\\nenough to constitute infringement.\u2019\u201D) (citing
        Newton, 388\\nF.2d at 1193; Norse, 991 F.2d at 566).\\n\\f66                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nrangeCheck function 2,600 times
        just in powering on the\\ndevice. Although Google argues that the eight decompiled\\nfiles
        were insignificant because they were used only to\\ntest the Android platform,
        Dr. Mitchell testified that\\n\u201Cusing the copied files even as test files
        would have been\\nsignificant use\u201D and the district court specifically
        found\\nthat \u201C[t]here was no testimony to the contrary.\u201D Order\\nGranting
        JMOL on Decompiled Files, 2012 U.S. Dist.\\nLEXIS 66417, at *6. Given this
        testimony, a reasonable\\njury could not have found Google\u2019s copying
        de minimis.\\n    Google emphasizes that the nine lines of rangeCheck\\ncode
        \u201Crepresented an infinitesimal percentage of the 2.8\\nmillion lines of
        code in the 166 Java packages\u2014let alone\\nthe millions of lines of code
        in the entire [Java] platform.\u201D\\nGoogle Cross-Appeal Br. 78-79. To the
        extent Google is\\narguing that a certain minimum number of lines of code\\nmust
        be copied before a court can find infringement, that\\nargument is without
        merit. See Baxter v. MCA, Inc., 812\\nF.2d 421, 425 (9th Cir. 1987) (\u201C[N]o
        bright line rule exists\\nas to what quantum of similarity is permitted.\u201D).
        And,\\ngiven the trial testimony that both rangeCheck and the\\ndecompiled
        security files are qualitatively significant and\\nGoogle copied them in their
        entirety, Google cannot show\\nthat the district court erred in denying its
        motion for\\nJMOL.\\n    We have considered Google\u2019s remaining arguments\\nand
        find them unpersuasive. Accordingly, we affirm both\\nof the JMOL decisions
        at issue in Google\u2019s cross-appeal.\\n         III. GOOGLE\u2019S POLICY-BASED
        ARGUMENTS\\n    Many of Google\u2019s arguments, and those of some amici,\\nappear
        premised on the belief that copyright is not the\\ncorrect legal ground upon
        which to protect intellectual\\nproperty rights to software programs; they
        opine that\\npatent protection for such programs, with its insistence on\\nnon-obviousness,
        and shorter terms of protection, might\\nbe more applicable, and sufficient.
        Indeed, the district\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    67\\n\\n\\n\\ncourt\u2019s
        method of operation analysis seemed to say as\\nmuch. Copyrightability Decision,
        872 F. Supp. 2d at 984\\n(stating that this case raises the question of \u201Cwhether
        the\\ncopyright holder is more appropriately asserting an\\nexclusive right
        to a functional system, process, or method\\nof operation that belongs in
        the realm of patents, not\\ncopyrights\u201D). Google argues that \u201C[a]fter
        Sega, developers\\ncould no longer hope to protect [software] interfaces by\\ncopyright
        . . . Sega signaled that the only reliable means\\nfor protecting the functional
        requirements for achieving\\ninteroperability was by patenting them.\u201D
        Appellee Br. 40\\n(quoting Pamela Samuelson, Are Patents on Interfaces\\nImpeding
        Interoperability? 93 Minn. L. Rev. 1943, 1959\\n(2009)). And, Google relies
        heavily on articles written by\\nProfessor Pamela Samuelson, who has argued
        that \u201Cit\\nwould be best for a commission of computer program\\nexperts
        to draft a new form of intellectual property law for\\nmachine-readable programs.\u201D
        \          Pamela Samuelson,\\nCONTU Revisited: The Case Against Copyright
        Protection\\nfor Computer Programs in Machine-Readable Form, 1984\\nDuke L.J.
        663, 764 (1984). Professor Samuelson has more\\nrecently argued that \u201CAltai
        and Sega contributed to the\\neventual shift away from claims of copyright
        in program\\ninterfaces and toward reliance on patent protection.\\nPatent
        protection also became more plausible and attrac-\\ntive as the courts became
        more receptive to software\\npatents.\u201D Samuelson, 93 Minn. L. Rev. at
        1959.\\n    Although Google, and the authority on which it relies,\\nseem
        to suggest that software is or should be entitled to\\nprotection only under
        patent law\u2014not copyright law\u2014\\nseveral commentators have recently
        argued the exact\\nopposite.       See     Technology   Quarterly, Stalking\\nTrolls,
        ECONOMIST, Mar. 8, 2014, http://www.economist.\\ncom/news/technology-quarterly/21598321-intellectual-\\nproperty-after-being-blamed-stymying-innovation-\\namerica-vague
        (\u201C[M]any innovators have argued that the\\nelectronics and software industries
        would flourish if\\n\\f68                       ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\ncompanies trying to bring new technology (software\\ninnovations
        included) to market did not have to worry\\nabout being sued for infringing
        thousands of absurd\\npatents at every turn. A perfectly adequate means of\\nprotecting
        and rewarding software developers for their\\ningenuity has existed for over
        300 years. It is called\\ncopyright.\u201D); Timothy B. Lee, Will the Supreme
        Court save\\nus from software patents?, WASH. POST, Feb. 26, 2014, 1:13\\nPM,
        http://www.washingtonpost.com/blogs/the-switch/wp/\\n2014/02/26/will-the-supreme-court-save-us-from-software-\\npatents/
        (\u201CIf you write a book or a song, you can get copy-\\nright protection
        for it. If you invent a new pill or a better\\nmousetrap, you can get a patent
        on it. But for the last\\ntwo decades, software has had the distinction of
        being\\npotentially eligible for both copyright and patent protec-\\ntion.
        Critics say that\u2019s a mistake. They argue that the\\ncomplex and expensive
        patent system is a terrible fit for\\nthe fast-moving software industry. And
        they argue that\\npatent protection is unnecessary because software innova-\\ntors
        already have copyright protection available.\u201D).\\n     Importantly for
        our purposes, the Supreme Court has\\nmade clear that \u201C[n]either the
        Copyright Statute nor any\\nother says that because a thing is patentable
        it may not\\nbe copyrighted.\u201D Mazer v. Stein, 347 U.S. 201, 217 (1954).\\nIndeed,
        the thrust of the CONTU Report is that copyright\\nis \u201Cthe most suitable
        mode of legal protection for computer\\nsoftware.\u201D Peter S. Menell, An
        Analysis of the Scope of\\nCopyright Protection for Application Programs,
        41 Stan.\\nL. Rev. 1045, 1072 (1989); see also CONTU Report at 1\\n(recommending
        that copyright law be amended \u201Cto make\\nit explicit that computer programs,
        to the extent that they\\nembody an author\u2019s original creation, are proper
        subject\\nmatter of copyright\u201D). Until either the Supreme Court or\\nCongress
        tells us otherwise, we are bound to respect the\\nNinth Circuit\u2019s decision
        to afford software programs\\nprotection under the copyright laws. We thus
        decline any\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    69\\n\\n\\n\\ninvitation
        to declare that protection of software programs\\nshould be the domain of
        patent law, and only patent law.\\n                         CONCLUSION\\n
        \    For the foregoing reasons, we conclude that the de-\\nclaring code and
        the structure, sequence, and organiza-\\ntion of the 37 Java API packages
        at issue are entitled to\\ncopyright protection. We therefore reverse the
        district\\ncourt\u2019s copyrightability determination with instructions to\\nreinstate
        the jury\u2019s infringement verdict. Because the\\njury hung on fair use,
        we remand Google\u2019s fair use defense\\nfor further proceedings consistent
        with this decision.\\n    With respect to Google\u2019s cross-appeal, we affirm
        the\\ndistrict court\u2019s decisions: (1) granting Oracle\u2019s motion for\\nJMOL
        as to the eight decompiled Java files that Google\\ncopied into Android; and
        (2) denying Google\u2019s motion for\\nJMOL with respect to the rangeCheck
        function. Accord-\\ningly, we affirm-in-part, reverse-in-part, and remand
        for\\nfurther proceedings.\\n    AFFIRMED-IN-PART, REVERSED-IN-PART,\\n              AND
        REMANDED\\n\\f\",\"html\":\"\",\"html_lawbox\":\"\",\"html_columbia\":\"\",\"html_anon_2020\":\"\",\"xml_harvard\":\"<?xml
        version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<opinion type=\\\"majority\\\">\\n<author
        id=\\\"b1371-13\\\">\\n  O\u2019MALLEY, Circuit Judge.\\n </author>\\n<p id=\\\"b1371-14\\\">\\n
        \ This copyright dispute involves 37 packages of computer source code. The
        parties have often referred to these groups of computer programs, individually
        or collectively, as \u201Capplication programming interfaces,\u201D or API
        packages, but it is their content, not their name, that matters. The predecessor
        of Oracle America, Inc. (\u201COracle\u201D) wrote these and other API packages
        in the Java programming language, and Oracle licenses them on various terms
        for others to use. Many software developers use the Java language, as well
        as Oracle\u2019s API packages, to write applications (commonly referred to
        as \u201Capps\u201D) for desktop and laptop computers, tablets, smartphones,
        and other devices.\\n </p>\\n<p id=\\\"b1371-16\\\">\\n  Oracle filed suit
        against Google Inc. (\u201CGoogle\u201D) in the United States District Court
        for the Northern District of California, alleging that Google\u2019s Android
        mobile operating system infringed Oracle\u2019s patents and copyrights. The
        jury found no patent infringement, and the patent claims are not at issue
        in this appeal. As to the copyright claims, the parties agreed that the jury
        would decide infringement, fair use, and whether any copying was de minimis,
        while the district judge would decide eopyrightability and Google\u2019s equitable
        defenses. The jury found that Google infringed Oracle\u2019s copyrights in
        the 37 Java packages and a specific computer routine called \u201CrangeCheck,\u201D
        but returned a noninfringement verdict as to eight decompiled security files.
        The jury deadlocked on Google\u2019s fair use defense.\\n </p>\\n<p id=\\\"b1371-17\\\">\\n
        \ After the jury verdict, the district court denied Oracle\u2019s motion for
        judgment as a matter of law (\u201CJMOL\u201D) regarding fair use as well
        as Google\u2019s motion for JMOL with respect to the rangeCheck files. Order
        on Motions for Judgment as a Matter of Law,\\n  <em>\\n   Oracle Am., Inc.
        v. Google Inc.,\\n  </em>\\n  No. 3:10-cv-3561 (N.D.Cal. May 10, 2012), ECF
        No. 1119. Oracle also moved for JMOL of infringement with respect to the eight
        decompiled security files. In granting that motion, the court found that:
        (1) Google admitted to copying the eight files; and (2) no reasonable jury
        could find that the copying was de minimis.\\n  <em>\\n   Oracle Am., Inc.
        v. Google Inc.,\\n  </em>\\n  No. C 10-3561, 2012 U.S.\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1348\\\"> \\n   *1348\\n   </span>\\n
        \ Dist. LEXIS 66417 (N.D.Cal. May 11, 2012)\\n  <em>\\n   (\u201COrder Granting
        JMOL on Decompiled Files\\n  </em>\\n  \u201D).\\n </p>\\n<p id=\\\"b1372-4\\\">\\n
        \ Shortly thereafter, the district court issued its decision on copyrightability,
        finding that the replicated elements of the 37 API packages \u2014 including
        the declaring code and the structure, sequence, and organization \u2014 -were
        not subject to copyright protection.\\n  <em>\\n   Oracle Am., Inc. v. Google
        Inc.,\\n  </em>\\n  872 F.Supp.2d 974 (N.D.Cal.2012)\\n  <em>\\n   (\u201CCopyrightability
        Decision\\n  </em>\\n  \u201D). Accordingly, the district court entered final
        judgment in favor of Google on Oracle\u2019s copyright infringement claims,
        except with respect to the rangeCheck code and the eight decompiled files.
        Final Judgment,\\n  <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n  </em>\\n
        \ No. 3:10-cv3561, 2012 WL 9028839 (N.D.Cal. June 20, 2012), EOF No. 1211.
        Oracle appeals from the portion of the final judgment entered against it,
        and Google cross-appeals from the portion of that same judgment entered in
        favor of Oracle as to the rangeCheck code and eight decompiled files.\\n </p>\\n<p
        id=\\\"b1372-6\\\">\\n  Because we conclude that the declaring code and the
        structure, sequence, and organization of the API packages are entitled to
        copyright protection, we reverse the district court\u2019s copyrightability
        determination with instructions to reinstate the jury\u2019s infringement
        finding as to the 37 Java packages. Because the jury deadlocked on fair use,
        we remand for further consideration of Google\u2019s fair use defense in light
        of this decision. With respect to Google\u2019s cross-appeal, we affirm the
        district court\u2019s decisions: (1) granting Oracle\u2019s motion for JMOL
        as to the eight decompiled Java files that Google copied into Android; and
        (2) denying Google\u2019s motion for JMOL with respect to the rangeCheck function.
        Accordingly, we affirm-in-part, reverse-in-part, and remand for further proceedings.\\n
        </p>\\n<p id=\\\"b1372-7\\\">\\n  Background\\n </p>\\n<p id=\\\"AFnT\\\">\\n
        \ A. The Technology\\n </p>\\n<p id=\\\"b1372-8\\\">\\n  Sun Microsystems,
        Inc. (\u201CSun\u201D) developed the Java \u201Cplatform\u201D for computer
        programming and released it in 1996.\\n  <a class=\\\"footnote\\\" href=\\\"#fn1\\\"
        id=\\\"fn1_ref\\\">\\n   1\\n  </a>\\n  The aim was to relieve programmers
        from the burden of writing different versions of their computer programs for
        different operating systems or devices. \u201CThe Java platform, through the
        use of a virtual machine, enable[d] software developers to write programs
        that [wejre able to run on different types of computer hardware without having
        to rewrite them for each different type.\u201D\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 977. With Java, a software programmer
        could \u201Cwrite once, run anywhere.\u201D\\n </p>\\n<p id=\\\"b1372-9\\\">\\n
        \ The Java virtual machine (\u201CJVM\u201D) plays a central role in the overall
        Java platform. The Java programming language itself\u2014 which includes words,
        symbols, and other units, together with syntax rules for using them to create
        instructions \u2014 is the language in which a Java programmer writes source
        code, the version of a program that is \u201Cin a human-readable language.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  For the instructions to be executed, they must
        be converted (or compiled) into binary machine code (object code) consisting
        of 0s and Is understandable by the particular computing device. In the Java
        system, \u201Csource code is first converted into \u2018bytecode,\u2019 an
        intermediate form, before it is then converted into binary machine code by
        the Java virtual machine\u201D that has been designed for that device.\\n
        \ <em>\\n   Id.\\n  </em>\\n  The Java platform includes the \u201CJava development
        kit (JDK), javac compiler, tools and utilities, runtime programs, class libraries
        (API packages), and the Java virtual machine.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 977 n. 2.\\n </p>\\n<p id=\\\"b1372-10\\\">\\n  Sun wrote a number of
        ready-to-use Java programs to perform common eom\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1349\\\"> \\n   *1349\\n   </span>\\n
        \ puter functions and organized those programs into groups it called \u201Cpackages.\u201D
        These packages, which are the application programming interfaces at issue
        in this appeal, allow programmers to use the prewritten code to build certain
        functions into their own programs, rather than write their own code to perform
        those functions from scratch. They are shortcuts. Sun called the code for
        a specific operation (function) a \u201Cmethod.\u201D It defined \u201Cclasses\u201D
        so that each class consists of specified methods plus variables and other
        elements on which the methods operate. To organize the classes for users,
        then, it grouped classes (along with certain related \u201Cinterfaces\u201D)
        into \u201Cpackages.\u201D\\n  <em>\\n   See id.\\n  </em>\\n  at 982 (describing
        organization: \u201C[e]ach package [i]s broken into classes and those in turn
        [are] broken into methods\u201D). The parties have not disputed the district
        court\u2019s analogy: Oracle\u2019s collection of API packages is like a library,
        each package is like a bookshelf in the library, each class is like a book
        on the shelf, and each method is like a how-to chapter in a book.\\n  <em>\\n
        \  Id.\\n  </em>\\n  at 977.\\n </p>\\n<p id=\\\"b1373-5\\\">\\n  The original
        Java Standard Edition Platform (\u201CJava SE\u201D) included \u201Ceight
        packages of pre-written programs.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at
        982. The district court found, and Oracle concedes to some extent, that three
        of those packages \u2014 java.lang,java.io, and java.util\u2014 were \u201Ccore\u201D
        packages, meaning that programmers using the Java language had to use them
        \u201Cin order to make any worthwhile use of the language.\u201D\\n  <em>\\n
        \  Id.\\n  </em>\\n  By 2008, the Java platform had more than 6,000 methods
        making up more than 600 classes grouped into 166 API packages. There are 37
        Java API packages at issue in this appeal, three of which are the core packages
        identified by the district court.\\n  <a class=\\\"footnote\\\" href=\\\"#fn2\\\"
        id=\\\"fn2_ref\\\">\\n   2\\n  </a>\\n  These packages contain thousands of
        individual elements, including classes, subclasses, methods, and interfaces.\\n
        </p>\\n<p id=\\\"b1373-9\\\">\\n  Every package consists of two types of source
        code \u2014 what the parties call (1) declaring code; and (2) implementing
        code. Declaring code is the expression that identifies the prewritten function
        and is sometimes referred to as the \u201Cdeclaration\u201D or \u201Cheader.\u201D
        As the district court explained, the \u201Cmain point is that this header
        line of code introduces the method body and specifies very precisely the inputs,
        name and other functionality.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 979-80.
        The expressions used by the programmer from the declaring code command the
        computer to execute the associated implementing code, which gives the computer
        the step-by-step instructions for carrying out the declared function.\\n </p>\\n<p
        id=\\\"b1373-10\\\">\\n  To use the district court\u2019s example, one of
        the Java API packages at issue is \u201Cjava, lang.\u201D Within that package
        is a class called \u201Cmath,\u201D and within \u201Cmath\u201D there are
        several methods, including one that is designed to find the larger of two
        numbers: \u201Cmax.\u201D The declaration for the \u201Cmax\u201D method,
        as defined for integers, is: \u201Cpublic static int maxfint x, int y),\u201D
        where the word \u201Cpublic\u201D means that the method is generally accessible,
        \u201Cstatic\u201D means that no specific instance of the class is needed
        to call the method, the first \u201Cint\u201D indicates that the method returns
        an integer, and \u201Cint x\u201D and \u201Cint y\u201D are the two numbers
        (inputs) being compared.\\n  <em>\\n   Copyrightability\\n  </em>\\n<span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1350\\\">
        \\n   *1350\\n   </span>\\n<em>\\n   Decision,\\n  </em>\\n  872 F.Supp.2d
        at 980-82. A programmer calls the \u201Cmax\u201D method by typing the name
        of the method stated in the declaring code and providing unique inputs for
        the variables \u201Cx\u201D and \u201Cy.\u201D The expressions used command
        the computer to execute the implementing code that carries out the operation
        of returning the larger number.\\n </p>\\n<p id=\\\"b1374-4\\\">\\n  Although
        Oracle owns the copyright on Java SE and the API packages, it offers three
        different licenses to those who want to make use of them. The first is the
        General Public License, which is free of charge and provides that the licensee
        can use the packages \u2014 both the declaring and implementing code \u2014
        but must \u201Ccontribute back\u201D its innovations to the public. This arrangement
        is referred to as an \u201Copen source\u201D license. The second option is
        the Specification License, which provides that the licensee can use the declaring
        code and organization of Oracle\u2019s API packages but must write its own
        implementing code. The third option is the Commercial License, which is for
        businesses that \u201Cwant to use and customize the full Java code in their
        commercial products and keep their code secret.\u201D Appellant Br. 14. Oracle
        offers the Commercial License in exchange for royalties. To maintain Java\u2019s
        \u201Cwrite once, run anywhere\u201D motto, the Specification and Commercial
        Licenses require that the licensees\u2019 programs pass certain tests to ensure
        compatibility with the Java platform.\\n </p>\\n<p id=\\\"b1374-5\\\">\\n
        \ The testimony at trial also revealed that Sun was licensing a derivative
        version of the Java platform for use on mobile devices: the Java Micro Edition
        (\u201CJava ME\u201D). Oracle licensed Java ME for use on feature phones and
        smartphones. Sun/Oracle has never successfully developed its own smartphone
        platform using Java.\\n </p>\\n<p id=\\\"b1374-6\\\">\\n  B. Google\u2019s
        Accused Product: Android\\n </p>\\n<p id=\\\"b1374-7\\\">\\n  The accused
        product is Android, a software platform that was designed for mobile devices
        and competes with Java in that market. Google acquired Android, Inc. in 2005
        as part of a plan to develop a smartphone platform. Later that same year,
        Google and Sun began discussing the possibility of Google \u201Ctaking a license
        to use and to adapt the entire Java platform for mobile devices.\u201D\\n
        \ <em>\\n   Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 978.
        They also discussed a \u201Cpossible co-development partnership deal with
        Sun under which Java technology would become an open-source part of the Android
        platform, adapted for mobile devices.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ The parties negotiated for months but were unable to reach an agreement.
        The point of contention between the parties was Google\u2019s refusal to make
        the implementation of its programs compatible with the Java virtual machine
        or interoperable with other Java programs. Because Sun/Oracle found that position
        to be anathema to the \u201Cwrite once, run anywhere\u201D philosophy, it
        did not grant Google a license to use the Java API packages.\\n </p>\\n<p
        id=\\\"b1374-8\\\">\\n  When the parties\u2019 negotiations reached an impasse,
        Google decided to use the Java programming language to design its own virtual
        machine \u2014 the Dalvik virtual machine (\u201CDalvik VM\u201D) \u2014 and
        \u201Cto write its own implementations for the functions in the Java API that
        were key to mobile devices.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  Google developed
        the Android platform, which grew to include 168 API packages \u2014 37 of
        which correspond to the Java API packages at issue in this appeal.\\n </p>\\n<p
        id=\\\"b1374-9\\\">\\n  With respect to the 37 packages at issue, \u201CGoogle
        believed Java application programmers would want to find the same 37 sets
        of functionalities in the new Android system callable by the same names as
        used in Java.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  To achieve this result,
        Google copied the declaring source code from the\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1351\\\"> \\n   *1351\\n   </span>\\n
        \ 37 Java API packages verbatim, inserting that code into parts of its Android
        software. In doing so, Google copied the elaborately organized taxonomy of
        all the names of methods, classes, interfaces, and packages \u2014 the \u201Coverall
        system of organized names \u2014 covering 37 packages, with over six hundred
        classes, with over six thousand methods.\u201D\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 999. The parties and district court
        referred to this taxonomy of expressions as the \u201Cstructure, sequence,
        and organization\u201D or \u201CSSO\u201D of the 37 packages. It is undisputed,
        however, that Google wrote its own implementing code, except with respect
        to: (1) the rangeCheck function, which consisted of nine lines of code; and
        (2) eight decompiled security files.\\n </p>\\n<p id=\\\"b1375-5\\\">\\n  As
        to rangeCheck, the court found that the Sun engineer who wrote it later worked
        for Google and contributed two files he created containing the rangeCheck
        function \u2014 \u201CTimsort.java\u201D and \u201CComparableTimsort\u201D
        \u2014 to the Android platform. In doing so, the nine-line rangeCheck function
        was copied directly into Android. As to the eight decompiled files, the district
        court found that they were copied and used as test files but \u201Cnever found
        their way into Android or any handset.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 983.\\n </p>\\n<p id=\\\"b1375-6\\\">\\n  Google released the Android
        platform in 2007, and the first Android phones went on sale the following
        year. Although it is undisputed that certain Android software contains copies
        of the 37 API packages\u2019 declaring code at issue, neither the district
        court nor the parties specify in which programs those copies appear. Oracle
        indicated at oral argument, however, that all Android phones contain copies
        of the accused portions of the Android software. Oral Argument at 1:35,\\n
        \ <em>\\n   available at\\n  </em>\\n  http:// www.cafc.uscourts.gov/oral-argumenN
        recordings/2013-1021/all. Android smart-phones \u201Crapidly grew in popularity
        and now comprise a large share of the United States market.\u201D\\n  <em>\\n
        \  Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 978. Google provides
        the Android platform free of charge to smartphone manufacturers and receives
        revenue when customers use particular functions on the Android phone. Although
        Android uses the Java programming language, it is undisputed that Android
        is not generally Java compatible. As Oracle explains, \u201CGoogle ultimately
        designed Android to be\\n  <em>\\n   incompatible\\n  </em>\\n  with the Java
        platform, so that apps written for one will not work on the other.\u201D Appellant
        Br. 29.\\n </p>\\n<p id=\\\"b1375-8\\\">\\n  C. Trial and PosNTrial Rulings\\n
        </p>\\n<p id=\\\"b1375-9\\\">\\n  Beginning on April 16, 2012, the district
        court and the jury \u2014 on parallel tracks-viewed documents and heard testimony
        from twenty \u2014 four witnesses on copyright-ability, infringement, fair
        use, and Google\u2019s other defenses. Because the parties agreed the district
        court would decide copyrightability, the court instructed the jury to assume
        that the structure, sequence, and organization of the 37 API packages was
        copyrightable. And, the court informed the jury that Google conceded that
        it copied the declaring code used in the 37 packages verbatim. The court also
        instructed the jury that Google conceded copying the rangeCheck function and
        the eight decompiled security files, but that Google maintained that its use
        of those lines of code was de minimis.\\n  <em>\\n   See\\n  </em>\\n  Final
        Charge to the Jury (Phase One),\\n  <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n
        \ </em>\\n  3:10-cv-3561 (N.D.Cal. Apr. 30, 2012), ECF No. 1018 at 14 (\u201CWith
        respect to the infringement issues concerning the rangeCheck and other similar
        files, Google agrees that the accused lines of code and comments came from
        the copyrighted material but contends that the amounts involved were so negligible
        as to be de minimis and thus should be excused.\u201D).\\n </p>\\n<p id=\\\"b1375-10\\\">\\n
        \ On May 7, 2012, the jury returned a verdict finding that Google infringed
        Ora\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1352\\\">
        \\n   *1352\\n   </span>\\n  cle\u2019s copyright in the 37 Java API packages
        and in the nine lines of rangeCheck code, but returned a noninfringement verdict
        as to eight decompiled security files. The jury hung on Google\u2019s fair
        use defense.\\n </p>\\n<p id=\\\"b1376-4\\\">\\n  The parties filed a number
        of post-trial motions, most of which were ultimately denied. In relevant part,
        the district court denied Oracle\u2019s motion for JMOL regarding fair use
        and Google\u2019s motion for JMOL as to the rangeCheck files. Order on Motions
        for Judgment as a Matter of Law,\\n  <em>\\n   Oracle Am., Inc. v. Google
        Inc.,\\n  </em>\\n  No. 3:10-cv-3561 (N.D.Cal. May 10, 2012), ECF No. 1119.
        The district court granted Oracle\u2019s motion for JMOL of infringement as
        to the eight decompiled files, however. In its order, the court explained
        that: (1) Google copied the files in their entirety; (2) the trial testimony
        revealed that the use of those files was \u201Csignificant\u201D; and (3)
        no reasonable jury could find the copying de minimis.\\n  <em>\\n   Order
        Granting JMOL on Decompiled Files,\\n  </em>\\n  2012 U.S. Dist. LEXIS 66417,
        at *6.\\n </p>\\n<p id=\\\"b1376-5\\\">\\n  On May 31, 2012, the district
        court issued the primary decision at issue in this appeal, finding that the
        replicated elements of the Java API packages \u2014 including the declarations
        and their structure, sequence, and organization' \u2014 -were not copyrightable.
        As to the declaring code, the court concluded that \u201Cthere is only one
        way to write\u201D it, and thus the \u201Cmerger doctrine bars anyone from
        claiming exclusive copyright ownership of that expression.\u201D\\n  <em>\\n
        \  Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 998. The court
        further found that the declaring code was not protectable because \u201Cnames
        and short phrases cannot be copyrighted.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ As such, the court determined that \u201Cthere can be no copyright violation
        in using the identical declarations.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p
        id=\\\"b1376-6\\\">\\n  As to the overall structure, sequence, and organization
        of the Java API packages, the court recognized that \u201Cnothing in the rules
        of the Java language ... required that Google replicate the same groupings
        even if Google was free to replicate the same functionality.\u201D\\n  <em>\\n
        \  Id.\\n  </em>\\n  at 999. Therefore, the court determined that \u201COracle\u2019s
        best argument ... is that while no single name is copyrightable, Java\u2019s
        overall system of organized names \u2014 covering 37 packages, with over six
        hundred classes, with over six thousand methods \u2014 is a \u2018taxonomy\u2019
        and, therefore, copyrightable.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p
        id=\\\"b1376-8\\\">\\n  Although it acknowledged that the overall structure
        of Oracle\u2019s API packages is creative, original, and \u201Cresembles a
        taxonomy,\u201D the district court found that it \u201Cis nevertheless a command
        structure, a system or method of operation \u2014 a long hierarchy of over
        six thousand commands to carry out pre-assigned functions\u201D \u2014 that
        is not entitled to copyright protection under Section 102(b) of the Copyright
        Act.\\n  <em>\\n   Id.\\n  </em>\\n  at 999-1000. In reaching this conclusion,
        the court emphasized that, \u201C[o]f the 166 Java packages, 129 were not
        violated in any way.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 1001. And, of
        the 37 Java API packages at issue, \u201C97 percent of the Android lines were
        new from Google and the remaining three percent were freely replicable under
        the merger and names doctrines.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  On these
        grounds, the court dismissed Oracle\u2019s copyright claims, concluding that
        \u201Cthe particular elements replicated by Google were free for all to use
        under the Copyright Act.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1376-9\\\">\\n
        \ On June 20, 2012, the district court entered final judgment in favor of
        Google and against Oracle on its claim for copyright infringement, except
        with respect to the rangeCheck function and the eight decompiled files. As
        to rangeCheck and the decompiled files, the court entered judgment for Oracle
        and against Google in the amount of zero dollars, per the parties\u2019 stipulation.
        Final Judgment,\\n  <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n  </em>\\n
        \ No. 3:10-cv3561\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1353\\\"> \\n   *1353\\n   </span>\\n  (N.D.Cal. June 20, 2012),
        ECF No. 1211. Oracle timely appealed from the portion of the district court\u2019s
        final judgment entered against it and Google timely cross-appealed with respect
        to rangeCheck and the eight decompiled files. Because this action included
        patent claims, we have jurisdiction pursuant to 28 U.S.C. \xA7 1295(a)(1).\\n
        </p>\\n<p id=\\\"b1377-5\\\">\\n  Discussion\\n </p>\\n<p id=\\\"b1377-6\\\">\\n
        \ I. Oracle\u2019s Appeal\\n </p>\\n<p id=\\\"b1377-7\\\">\\n  It is undisputed
        that the Java programming language is open and free for anyone to use. Except
        to the limited extent noted below regarding three of the API packages, it
        is also undisputed that Google could have written its own API packages using
        the Java language. Google chose not to do that. Instead, it is undisputed
        that Google copied 7,000 lines of declaring code and generally replicated
        the overall structure, sequence, and organization of Oracle\u2019s 37 Java
        API packages. The central question before us is whether these elements of
        the Java platform are entitled to copyright protection. The district court
        concluded that they are not, and Oracle challenges that determination on appeal.
        Oracle also argues that the district court should have dismissed Google\u2019s
        fair use defense as a matter of law.\\n </p>\\n<p id=\\\"b1377-10\\\">\\n
        \ According to Google, however, the district court correctly determined that:
        (1) there was only one way to write the Java method declarations and remain
        \u201Cinteroperable\u201D with Java; and (2) the organization and structure
        of the 37 Java API packages is a \u201Ccommand structure\u201D excluded from
        copyright protection under Section 102(b). Google also argues that, if we
        reverse the district court\u2019s copyrightability determination, we should
        direct the district court to retry its fair use defense.\\n </p>\\n<p id=\\\"b1377-11\\\">\\n
        \ \u201CWhen the questions on appeal involve law and precedent on subjects
        not exclusively assigned to the Federal Circuit, the court applies the law
        which would be applied by the regional circuit.\u201D\\n  <em>\\n   Atari
        Games Corp. v. Nintendo of Am., Inc.,\\n  </em>\\n  897 F.2d 1572, 1575 (Fed.Cir.1990).
        Copyright issues are not exclusively assigned to the Federal Circuit.\\n  <em>\\n
        \  See\\n  </em>\\n  28 U.S.C. \xA7 1295. The parties agree that Ninth Circuit
        law applies and that, in the Ninth Circuit, whether particular expression
        is protected by copyright law is \u201Csubject to de novo review.\u201D\\n
        \ <em>\\n   Ets-Hokin v. Skyy Spirits, Inc.,\\n  </em>\\n  225 F.3d 1068,
        1073 (9th Cir.2000).\\n  <a class=\\\"footnote\\\" href=\\\"#fn3\\\" id=\\\"fn3_ref\\\">\\n
        \  3\\n  </a>\\n</p>\\n<p id=\\\"b1378-3\\\">\\n<span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1354\\\"> \\n   *1354\\n   </span>\\n
        \ We are mindful that the application of copyright law in the computer context
        is often a difficult task.\\n  <em>\\n   See Lotus Dev. Corp. v. Borland Int\u2019l,
        Inc.,\\n  </em>\\n  49 F.3d 807, 820 (1st Cir.1995) (Boudin, J., concurring)
        (\u201CApplying copyright law to computer programs is like assembling a jigsaw
        puzzle whose pieces do not quite fit\u201D). On this record, however, we find
        that the district court failed to distinguish between the threshold question
        of what is copyrightable \u2014 which presents a low bar \u2014 and the scope
        of conduct that constitutes infringing activity. The court also erred by importing
        fair use principles, including interoperability concerns, into its copyrightability
        analysis.\\n </p>\\n<p id=\\\"b1378-4\\\">\\n  For the reasons that follow,
        we conclude that the declaring code and the structure, sequence, and organization
        of the 37 Java API packages are entitled to copyright protection. Because
        there is an insufficient record as to the relevant fair use factors, we remand
        for further proceedings on Google\u2019s fair use defense.\\n </p>\\n<p id=\\\"b1378-5\\\">\\n
        \ A. Copyrightability\\n </p>\\n<p id=\\\"b1378-6\\\">\\n  The Copyright Act
        provides protection to \u201Coriginal works of authorship fixed in any tangible
        medium of expression,\u201D including \u201Cliterary works.\u201D 17 U.S.C.
        \xA7 102(a). It is undisputed that computer programs \u2014 defined in the
        Copyright Act as \u201Ca set of statements or instructions to be used directly
        or indirectly in a computer in order to bring about a certain result,\u201D
        17 U.S.C. \xA7 101 \u2014 can be subject to copyright protection as \u201Cliterary
        works.\u201D\\n  <em>\\n   See Atari Games Corp. v. Nintendo of Am., Inc.,\\n
        \ </em>\\n  975 F.2d 832, 838 (Fed.Cir.1992) (\u201CAs literary works, copyright
        protection extends to computer programs.\u201D). Indeed, the legislative history
        explains that \u201Cliterary works\u201D includes \u201Ccomputer programs
        to the extent that they incorporate authorship in the programmer\u2019s expression
        of original ideas, as distinguished from the ideas themselves.\u201D H.R.Rep.
        No. 1476, 94th Cong., 2d Sess. 54,\\n  <em>\\n   reprinted in\\n  </em>\\n
        \ 1976 U.S.C.C.A.N. 5659, 5667.\\n </p>\\n<p id=\\\"b1378-10\\\">\\n  By statute,
        a work must be \u201Coriginal\u201D to qualify for copyright protection. 17
        U.S.C. \xA7 102(a). This \u201Coriginality requirement is not particularly
        stringent,\u201D however.\\n  <em>\\n   Feist Publ\u2019ns, Inc. v. Rural
        Tel. Serv. Co.,\\n  </em>\\n  499 U.S. 340, 358, 111 S.Ct. 1282, 113 L.Ed.2d
        358 (1991). \u201COriginal, as the term is used in copyright, means only that
        the work was independently created by the author (as opposed to copied from
        other works), and that it possesses at least some minimal degree of creativity.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  at 345, 111 S.Ct. 1282.\\n </p>\\n<p id=\\\"b1378-11\\\">\\n
        \ Copyright protection extends only to the expression of an idea \u2014 not
        to the underlying idea itself.\\n  <em>\\n   Mazer v. Stein,\\n  </em>\\n
        \ 347 U.S. 201, 217, 74 S.Ct. 460, 98 L.Ed. 630 (1954) (\u201CUnlike a patent,
        a copyright gives no exclusive right to the art disclosed; protection is given
        only to the expression of the idea \u2014 not the idea itself.\u201D). This
        distinction \u2014 commonly referred to as the \u201Cidea/expression dichotomy\u201D
        \u2014 is codified in Section 102(b) of the Copyright Act, which provides:\\n
        </p>\\n<blockquote id=\\\"b1378-12\\\">\\n  In no case does copyright protection
        for an original work of authorship extend to any idea, procedure, process,
        system, method of operation, concept, principle, or discovery, regardless
        of the form in which it is described, explained, illustrated, or embodied
        in such work.\\n </blockquote>\\n<p id=\\\"b1378-13\\\">\\n  17 U.S.C. \xA7
        102(b);\\n  <em>\\n   see Golan v. Holder,\\n  </em>\\n  \u2014 U.S. -, 132
        S.Ct. 873, 890, 181 L.Ed.2d 835 (2012) (\u201CThe idea/expression\\n  <span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1355\\\">
        \\n   *1355\\n   </span>\\n  dichotomy is codified at 17 U.S.C. \xA7 102(b).\u201D).\\n
        </p>\\n<p id=\\\"b1379-5\\\">\\n  The idea/expression dichotomy traces back
        to the Supreme Court\u2019s decision in\\n  <em>\\n   Baker v. Selden,\\n
        \ </em>\\n  101 U.S. 99, 101, 11 Otto 99, 25 L.Ed. 841 (1879). In\\n  <em>\\n
        \  Baker,\\n  </em>\\n  the plaintiff Selden wrote and obtained copyrights
        on a series of books setting out a new system of bookkeeping.\\n  <em>\\n
        \  Id.\\n  </em>\\n  at 100. The books included an introductory essay explaining
        the system and blank forms with ruled lines and headings designed for use
        with that system.\\n  <em>\\n   Id.\\n  </em>\\n  Baker published account
        books employing a system with similar forms, and Selden filed suit alleging
        copyright infringement. According to Selden, the \u201Cruled lines and headings,
        given to illustrate the system, are a part of the book\u201D and \u201Cno
        one can make or use similar ruled lines and headings, or ruled lines and headings
        made and arranged on substantially the same system, without violating the
        copyright.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 101.\\n </p>\\n<p id=\\\"b1379-6\\\">\\n
        \ The Supreme Court framed the issue on appeal in\\n  <em>\\n   Baker\\n  </em>\\n
        \ as \u201Cwhether the exclusive property in a system of book-keeping can
        be claimed, under the law of copyright, by means of a book in which that system
        is explained.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  In reversing the circuit
        court\u2019s decision, the Court concluded that the \u201Ccopyright of a book
        on book-keeping cannot secure the exclusive right to make, sell, and use account-books
        prepared upon the plan set forth in such book.\u201D\\n  <em>\\n   Id.\\n
        \ </em>\\n  at 104. Likewise, the \u201Ccopyright of a work on mathematical
        science cannot give to the author an exclusive right to the methods of operation
        which he propounds.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 103. The Court
        found that, although the copyright protects the way Selden \u201Cexplained
        and described a peculiar system of book-keeping,\u201D it does not prevent
        others from using the system described therein.\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 104.- The Court further indicated that, if it is necessary to use the
        forms Selden included in his books to make use of the accounting system, that
        use would not amount to copyright infringement.\\n  <em>\\n   See id.\\n  </em>\\n
        \ (noting that the public has the right to use the account-books and that,
        \u201Cin using the art, the ruled lines and headings of accounts must necessarily
        be used as incident to it\u201D).\\n </p>\\n<p id=\\\"b1379-8\\\">\\n  Courts
        routinely cite\\n  <em>\\n   Baker\\n  </em>\\n  as the source of several
        principles incorporated into Section 102(b) that relate to this appeal, including
        that: (1) copyright protection extends only to expression, not to ideas, systems,
        or processes; and (2) \u201Cthose elements of a computer program that are
        necessarily incidental to its function are ... unprotectable.\u201D\\n  <em>\\n
        \  See Computer Assocs. Int\u2019l v. Altai, Inc.,\\n  </em>\\n  982 F.2d
        693, 704-05 (2d Cir.1992)\\n  <em>\\n   {\u201CAltai\\n  </em>\\n  \u201D)
        (discussing\\n  <em>\\n   Baker,\\n  </em>\\n  101 U.S. at 103-04).\\n </p>\\n<p
        id=\\\"b1379-9\\\">\\n  It is well established that copyright protection can
        extend to both literal and non-literal elements of a computer program.\\n
        \ <em>\\n   See Altai\\n  </em>\\n  982 F.2d at 702. The literal elements
        of a computer program are the source code and object code.\\n  <em>\\n   See
        Johnson Controls, Inc. v. Phoenix Control Sys., Inc.,\\n  </em>\\n  886 F.2d
        1173, 1175 (9th Cir.1989). Courts have defined source code as \u201Cthe spelled-out
        program commands that humans can read.\u201D\\n  <em>\\n   Lexmark Int\u2019l,
        Inc. v. Static Control Components, Inc.,\\n  </em>\\n  387 F.3d 522, 533 (6th
        Cir.2004). Object code refers to \u201Cthe binary language comprised of zeros
        and ones through which the computer directly receives its instructions.\u201D\\n
        \ <em>\\n   Altai 982\\n  </em>\\n  F.2d at 698. Both source and object code
        \u201Care consistently held protected by a copyright on the program.\u201D\\n
        \ <em>\\n   Johnson Controls,\\n  </em>\\n  886 F.2d at 1175;\\n  <em>\\n
        \  see also Altai,\\n  </em>\\n  982 F.2d at 702 (\u201CIt is now well settled
        that the literal elements of computer programs, i.e., their source and object
        codes, are the subject of copyright protection.\u201D). Google nowhere disputes
        that premise.\\n  <em>\\n   See, e.g.,\\n  </em>\\n  Oral Argument at 57:38.\\n
        </p>\\n<p id=\\\"b1379-10\\\">\\n  The non-literal components of a computer
        program include, among other things, the program\u2019s sequence, structure,\\n
        \ <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1356\\\">
        \\n   *1356\\n   </span>\\n  and organization, as well as the program\u2019s
        user interface.\\n  <em>\\n   Johnson Controls,\\n  </em>\\n  886 F.2d at
        1175. As discussed below, whether the non-literal elements of a program \u201Care
        protected depends on whether, on the particular facts of each case, the component
        in question qualifies as an expression of an idea, or an idea itself.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1380-4\\\">\\n  In this case,
        Oracle claims copyright protection with respect to both: (1) literal elements
        of its API packages \u2014 the 7,000 lines of declaring source code; and (2)
        non-literal elements \u2014 the structure, sequence, and organization of each
        of the 37 Java API packages.\\n </p>\\n<p id=\\\"b1380-5\\\">\\n  The distinction
        between literal and non-literal aspects of a computer program is separate
        from the distinction between literal and non-literal copying.\\n  <em>\\n
        \  See Altai,\\n  </em>\\n  982 F.2d at 701-02. \u201CLiteral\u201D copying
        is verbatim copying of original expression. \u201CNon-literal\u201D copying
        is \u201Cparaphrased or loosely paraphrased rather than word for word.\u201D\\n
        \ <em>\\n   Lotus Dev. Corp. v. Borland Int\u2019l,\\n  </em>\\n  49 F.3d
        807, 814 (1st Cir.1995). Here, Google concedes that it copied the declaring
        code verbatim. Oracle explains that the lines of declaring code \u201Cembody
        the structure of each [API] package, just as the chapter titles and topic
        sentences represent the structure of a novel.\u201D Appellant Br. 45. As Oracle
        explains, when Google copied the declaring code in these packages \u201Cit
        also copied the \u2018sequence and organization\u2019 of the packages (i.e.,
        the three-dimensional structure with all the chutes and ladders)\u201D employed
        by Sun/Oracle in the packages. Appellant Br. 27. Oracle also argues that the
        nonliteral elements of the API packages \u2014 the structure, sequence, and
        organization that led naturally to the implementing code Google created \u2014
        are entitled to protection. Oracle does not assert \u201Cliteral\u201D copying
        of the entire SSO, but, rather, that Google literally copied the declaring
        code and then paraphrased the remainder of the SSO by writing its own implementing
        code. It therefore asserts non-literal copying with respect to the entirety
        of the SSO.\\n </p>\\n<p id=\\\"b1380-7\\\">\\n  At this stage, it is undisputed
        that the declaring code and the structure and organization of the Java API
        packages are original. The testimony at trial revealed that designing the
        Java API packages was a creative process and that the Sun/Oracle developers
        had a vast range of options for the structure and organization. In its copyrightability
        decision, the district court specifically found that the API packages are
        both creative and original, and Google concedes on appeal that the originality
        requirements are met.\\n  <em>\\n   See Copyrightability Decision,\\n  </em>\\n
        \ 872 F.Supp.2d at 976 (\u201CThe overall name tree, of course, has creative
        elements----\u201D);\\n  <em>\\n   Id.\\n  </em>\\n  at 999 (\u201CYes, it
        is creative. Yes, it is original.\u201D); Appellee Br. 5 (\u201CGoogle does
        not dispute\u201D the district court\u2019s finding that \u201Cthe Java API
        clears the low originality threshold.\u201D). The court found, however, that
        neither the declaring code nor the SSO was entitled to copyright protection
        under the Copyright Act.\\n </p>\\n<p id=\\\"b1380-9\\\">\\n  Although the
        parties agree that Oracle\u2019s API packages meet the originality requirement
        under Section 102(a), they disagree as to the proper interpretation and application
        of Section 102(b). For its part, Google suggests that there is a two-step
        copyrightability analysis, wherein Section 102(a) grants copyright protection
        to original works, while Section 102(b) takes it away if the work has a functional
        component. To the contrary, however, Congress emphasized that Section 102(b)
        \u201Cin no way enlarges or contracts the scope of copyright protection\u201D
        and that its \u201Cpurpose is to restate ... that the basic dichotomy between
        expression and idea remains unchanged.\u201D\\n  <em>\\n   Feist,\\n  </em>\\n
        \ 499 U.S. at 356, 111 S.Ct. 1282 (quoting H.R.Rep. No. 1476, 94th Cong.,
        2d Sess. 54,\\n  <em>\\n   reprinted in\\n  </em>\\n  1976 U.S.C.C.A.N. 5659,
        5670). \u201CSection 102(b)\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1357\\\"> \\n   *1357\\n   </span>\\n  does not extinguish the protection
        accorded a particular expression of an idea merely because that expression
        is embodied in a method of operation.\u201D\\n  <em>\\n   Mitel, Inc. v. Iqtel,
        Inc.,\\n  </em>\\n  124 F.3d 1366, 1372 (10th Cir.1997). Section 102(a) and
        102(b) are to be considered collectively so that certain expressions are subject
        to greater scrutiny.\\n  <em>\\n   Id.\\n  </em>\\n  In assessing copyrightability,
        the district court is required to ferret out apparent expressive aspects of
        a work and then separate protectable expression from \u201Cunprotectable ideas,
        facts, processes, and methods of operation.\u201D\\n  <em>\\n   See Atari,\\n
        \ </em>\\n  975 F.2d at 839.\\n </p>\\n<p id=\\\"b1381-5\\\">\\n  Of course,
        as with many things, in defining this task, the devil is in the details. Circuit
        courts have struggled with, and disagree over, the tests to be employed when
        attempting to draw the fine between what is protectable expression and what
        is not.\\n  <em>\\n   Compare Whelan\\n  </em>\\n  Assocs.,\\n  <em>\\n   Inc.
        v. Jaslow Dental Lab., Inc.,\\n  </em>\\n  797 F.2d 1222, 1236 (3d Cir.1986)
        (everything not necessary to the purpose or function of a work is expression),\\n
        \ <em>\\n   with Lotus,\\n  </em>\\n  49 F.3d at 815 (methods of operation
        are means by which a user operates something and any words used to effectuate
        that operation are unprotected expression). When assessing whether the non-literal
        elements of a computer program constitute protectable expression, the Ninth
        Circuit has endorsed an \u201Cabstraction-filtration-comparison\u201D test
        formulated by the Second Circuit and expressly adopted by several other circuits.\\n
        \ <em>\\n   Sega Enters. Ltd. v. Accolade, Inc.,\\n  </em>\\n  977 F.2d 1510,
        1525 (9th Cir.1992) (\u201CIn our view, in light of the essentially utilitarian
        nature of computer programs, the Second Circuit\u2019s approach is an appropriate
        one.\u201D). This test rejects the notion that anything that performs a function
        is necessarily uncopyrightable.\\n  <em>\\n   See Mitel,\\n  </em>\\n  124
        F.3d at 1372 (rejecting the\\n  <em>\\n   Lotus\\n  </em>\\n  court\u2019s
        formulation, and concluding that, \u201Calthough an element of a work may
        be characterized as a method of operation, that element may nevertheless contain
        expression that is eligible for copyright protection.\u201D). And it also
        rejects as flawed the\\n  <em>\\n   Whelan\\n  </em>\\n  assumption that,
        once any separable idea can be identified in a computer program everything
        else must be protectable expression, on grounds that more than one idea may
        be embodied in any particular program.\\n  <em>\\n   Altai,\\n  </em>\\n  982
        F.2d at 705-06.\\n </p>\\n<p id=\\\"b1381-8\\\">\\n  Thus, this test eschews
        bright line approaches and requires a more nuanced assessment of the particular
        program at issue in order to determine what expression is protectable and
        infringed. As the Second Circuit explains, this test has three steps. In the
        abstraction step, the court \u201Cfirst break[s] down the allegedly infringed
        program into its constituent structural parts.\u201D\\n  <em>\\n   Id.\\n
        \ </em>\\n  at 706. In the filtration step, the court \u201Csift[s] out all
        nonprotectable material,\u201D including ideas and \u201Cexpression that is
        necessarily incidental to those ideas.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ In the final step, the court compares the remaining creative expression
        with the allegedly infringing program.\\n  <a class=\\\"footnote\\\" href=\\\"#fn4\\\"
        id=\\\"fn4_ref\\\">\\n   4\\n  </a>\\n</p>\\n<p id=\\\"b1381-9\\\">\\n  In
        the second step, the court is first to assess whether the expression is original
        to the programmer or author.\\n  <em>\\n   Atari,\\n  </em>\\n  975 F.2d at
        839. The court must then determine whether the particular inclusion of any
        level of abstraction is dictated by considerations of efficiency, required
        by factors already external to the program\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1358\\\"> \\n   *1358\\n   </span>\\n
        \ itself, or taken from the public domain \u2014 all of which would render
        the expression unprotectable.\\n  <em>\\n   Id.\\n  </em>\\n  These conclusions
        are to be informed by traditional copyright principles of originality, merger,
        and scenes a faire.\\n  <em>\\n   See Mitel,\\n  </em>\\n  124 F.3d at 1372
        (\u201CAlthough this core of expression is eligible for copyright protection,
        it is subject to the rigors of filtration analysis which excludes from protection
        expression that is in the public domain, otherwise unoriginal, or subject
        to the doctrines of merger and scenes a faire.\u201D).\\n </p>\\n<p id=\\\"b1382-4\\\">\\n
        \ In all circuits, it is clear that the first step is part of the copyrightability
        analysis and that the third is an infringement question. It is at the second
        step of this analysis where the circuits are in less accord. Some treat all
        aspects of this second step as part of the copyrightability analysis, while
        others divide questions of originality from the other inquiries, treating
        the former as a question of copyrightability and the latter as part of the
        infringement inquiry.\\n  <em>\\n   Compare Lexmark,\\n  </em>\\n  387 F.3d
        at 537-38 (finding that the district court erred in assessing principles of
        merger and scenes a faire in the infringement analysis, rather than as a component
        of copyrightability),\\n  <em>\\n   with Kregos,\\n  </em>\\n  937 F.2d at
        705 (noting that the Second Circuit has considered the merger doctrine \u201Cin
        determining whether actionable infringement has occurred, rather than whether
        a copyright is valid\u201D);\\n  <em>\\n   see also Lexmark,\\n  </em>\\n
        \ 387 F.3d at 557 (Feikens, J., dissenting-in-part) (noting the circuit split
        and concluding that, where a court is assessing merger of an expression with
        a method of operation, \u201CI would find the merger doctrine can operate
        only as a defense to infringement in that context, and as such has no bearing
        on the question of copyrightability.\u201D). We need not assess the wisdom
        of these respective views because there is no doubt on which side of this
        circuit split the Ninth Circuit falls.\\n </p>\\n<p id=\\\"b1382-5\\\">\\n
        \ In the Ninth Circuit, while questions regarding originality are considered
        questions of copyrightability, concepts of merger and scenes a faire are affirmative
        defenses to claims of infringement.\\n  <em>\\n   Ets-Hokin,\\n  </em>\\n
        \ 225 F.3d at 1082;\\n  <em>\\n   Satava v. Lowry,\\n  </em>\\n  323 F.3d
        805, 810 n. 3 (9th Cir.2003) (\u201CThe Ninth Circuit treats scenes a faire
        as a defense to infringement rather than as a barrier to copyrightability.\u201D).
        The Ninth Circuit has acknowledged that \u201Cthere is some disagreement among
        courts as to whether these two doctrines figure into the issue of copyrightability
        or are more properly defenses to infringement.\u201D\\n  <em>\\n   Ets-Hokin,\\n
        \ </em>\\n  225 F.3d at 1082 (citations omitted). It, nonetheless, has made
        clear that, in that circuit, these concepts are to be treated as defenses
        to infringement.\\n  <em>\\n   Id.\\n  </em>\\n  (citing\\n  <em>\\n   Kregos,\\n
        \ </em>\\n  937 F.2d at 705 (holding that the merger doctrine relates to infringement,
        not copyrightability);\\n  <em>\\n   Reed-Union Corp. v. Turtle Wax, Inc.,\\n
        \ </em>\\n  77 F.3d 909, 914 (7th Cir.1996) (explaining why the doctrine of
        scenes a faire is separate from the validity of a copyright)).\\n </p>\\n<p
        id=\\\"b1382-6\\\">\\n  With these principles in mind, we turn to the trial
        court\u2019s analysis and judgment and to Oracle\u2019s objections thereto.
        While the trial court mentioned the abstraction-filtration-comparison test
        when describing the development of relevant law, it did not purport to actually
        apply that test. Instead, it moved directly to application of familiar principles
        of copyright law when assessing the copyrightability of the declaring code
        and interpreted Section 102(b) to preclude copyrightability for any functional
        element \u201Cessential for interoperability\u201D \u201Cregardless of its
        form.\u201D\\n  <em>\\n   Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d
        at 997.\\n </p>\\n<p id=\\\"b1382-7\\\">\\n  Oracle asserts that all of the
        trial court\u2019s conclusions regarding copyrightability are erroneous. Oracle
        argues that its Java API packages are entitled to protection under the Copyright
        Act because they are\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1359\\\"> \\n   *1359\\n   </span>\\n  expressive and could have
        been written and organized in any number of ways to achieve the same functions.
        Specifically, Oracle argues that the district court erred when it: (1) concluded
        that each line of declaring code is uncopyrightable because the idea and expression
        have merged; (2) found the declaring code uncopyrightable because it employs
        short phrases; (3) found all aspects of the SSO devoid of protection as a
        \u201Cmethod of operation\u201D under 17 U.S.C. \xA7 102(b); and (4) invoked
        Google\u2019s \u201Cinteroperability\u201D concerns in the copyrightability
        analysis. For the reasons explained below, we agree with Oracle on each point.\\n
        </p>\\n<p id=\\\"b1383-5\\\">\\n  1. Declaring Source Code\\n </p>\\n<p id=\\\"b1383-6\\\">\\n
        \ First, Oracle argues that the district court erred in concluding that each
        line of declaring source code is completely unprotected under the merger and
        short phrases doctrines. Google responds that Oracle waived its right to assert
        copyrightability based on the 7,000 lines of declaring code by failing \u201Cto
        object to instructions and a verdict form that effectively eliminated that
        theory from the case.\u201D Appellee Br. 67. Even if not waived, moreover,
        Google argues that, because there is only one way to write the names and declarations,
        the merger doctrine bars copyright protection.\\n </p>\\n<p id=\\\"b1383-7\\\">\\n
        \ We find that Oracle did not waive arguments based on Google\u2019s literal
        copying of the declaring code. Prior to trial, both parties informed the court
        that Oracle\u2019s copyright infringement claims included the declarations
        of the API elements in the Android class library source code.\\n  <em>\\n
        \  See\\n  </em>\\n  Oracle\u2019s Statement of Issues Regarding Copyright,\\n
        \ <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n  </em>\\n  No. 3:10-cv-3561
        (N.D.Cal. Apr. 12, 2012), ECF No. 899-1, at 3 (Oracle accuses the \u201Cdeclarations
        of the API elements in the Android class library source code and object code
        that implements the 37 API packages\u201D of copyright infringement.);\\n
        \ <em>\\n   see also\\n  </em>\\n  Google\u2019s Proposed Statement of Issues
        Regarding Copyright,\\n  <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n  </em>\\n
        \ No. 3:10-cv-3561 (N.D.Cal. Apr. 12, 2012), ECF No. 901, at 2 (Oracle accuses
        the \u201Cdeclarations of the API elements in Android class library source
        code and object code that implements the 37 API packages.\u201D).\\n </p>\\n<p
        id=\\\"b1383-9\\\">\\n  While Google is correct that the jury instructions
        and verdict form focused on the structure and organization of the packages,
        we agree with Oracle that there was no need for the jury to address copying
        of the declaring code because Google conceded that it copied it verbatim.
        Indeed, the district court specifically instructed the jury that \u201CGoogle
        agrees that it uses the same names and declarations\u201D in Android.\\n  <em>\\n
        \  Final Charge to the Jury\\n  </em>\\n  at 10.\\n </p>\\n<p id=\\\"b1383-10\\\">\\n
        \ That the district court addressed the declaring code in its post-jury verdict
        copyrightability decision further confirms that the verbatim copying of declaring
        code remained in the case. The court explained that the \u201Cidentical lines\u201D
        that Google copied into Android \u201Care those lines that specify the names,
        parameters and functionality of the methods and classes, lines called \u2018declarations\u2019
        or \u2018headers.\u2019 \u201D\\n  <em>\\n   Copyrightability Decision,\\n
        \ </em>\\n  872 F.Supp.2d at 979. The court specifically found that the declaring
        code was not entitled to copyright protection under the merger and short phrases
        doctrines. We address each in turn.\\n </p>\\n<p id=\\\"b1383-11\\\">\\n  a.
        Merger\\n </p>\\n<p id=\\\"b1383-12\\\">\\n  The merger doctrine functions
        as an exception to the idea/expression dichotomy. It provides that, when there
        are a limited number of ways to express an idea, the idea is said to \u201Cmerge\u201D
        with its expression, and the expression becomes unprotected.\\n  <em>\\n   Altai\\n
        \ </em>\\n  982 F.2d at 707-08. As noted, the Ninth Circuit treats this concept
        as an affirmative defense to infringement.\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1360\\\"> \\n   *1360\\n   </span>\\n<em>\\n
        \  Ets-Hokin,\\n  </em>\\n  225 F.3d at 1082. Accordingly, it appears that
        the district court\u2019s merger analysis is irrelevant to the question of
        whether Oracle\u2019s API packages are copyrightable in the first instance.
        Regardless of when the analysis occurs, we conclude that merger does not apply
        on the record before us.\\n </p>\\n<p id=\\\"b1384-4\\\">\\n  Under the merger
        doctrine, a court will not protect a copyrighted work from infringement if
        the idea contained therein can be expressed in only one way.\\n  <em>\\n   Satava
        v. Lowry,\\n  </em>\\n  323 F.3d 805, 812 n. 5 (9th Cir.2003). For computer
        programs, \u201Cthis means that when specific [parts of the code], even though
        previously copyrighted, are the only and essential means of accomplishing
        a given task, their later use by another will not amount to infringement.\u201D\\n
        \ <em>\\n   Altai\\n  </em>\\n  982 F.2d at 708 (citation omitted). We have
        recognized, however, applying Ninth Circuit law, that the \u201Cunique arrangement
        of computer program expression ... does not merge with the process so long
        as alternate expressions are available.\u201D\\n  <em>\\n   Atari,\\n  </em>\\n
        \ 975 F.2d at 840.\\n </p>\\n<p id=\\\"b1384-5\\\">\\n  In\\n  <em>\\n   Atari\\n
        \ </em>\\n  for example, Nintendo designed a program \u2014 the IONES \u2014
        to prevent its video game system from accepting unauthorized game cartridges.
        975 F.2d at 836. Nintendo \u201Cchose arbitrary programming instructions and
        arranged them in a unique sequence to create a purely arbitrary data stream\u201D
        which \u201Cserves as the key to unlock the NES.\u201D\\n  <em>\\n   Id.\\n
        \ </em>\\n  at 840. Because Nintendo produced expert testimony \u201Cshowing
        a multitude of different ways to generate a data stream which unlocks the
        NES console,\u201D we concluded that Nintendo\u2019s specific choice of code
        did not merge with the process.\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1384-8\\\">\\n
        \ Here, the district court found that, \u201Cno matter how creative or imaginative
        a Java method specification may be, the entire world is entitled to use the
        same method specification (inputs, outputs, parameters) so long as the line-by-line
        implementations are different.\u201D\\n  <em>\\n   Copyrightability Decision,\\n
        \ </em>\\n  872 F.Supp.2d at 998. In its analysis, the court identified the
        method declaration as the idea and found that the implementation is the expression.\\n
        \ <em>\\n   Id.\\n  </em>\\n  (\u201CThe method specification is the\\n  <em>\\n
        \  idea.\\n  </em>\\n  The method implementation is the\\n  <em>\\n   expression.\\n
        \ </em>\\n  No one may monopolize the\\n  <em>\\n   idea.\u201D)\\n  </em>\\n
        \ (emphases in original). The court explained that, under the rules of Java,
        a programmer must use the identical \u201Cdeclaration or method header lines\u201D
        to \u201Cdeclare a method specifying the\\n  <em>\\n   same\\n  </em>\\n  functionality.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  at 976. Because the district court found that
        there was only one way to write the declaring code for each of the Java packages,
        it concluded that \u201Cthe merger doctrine bars anyone from claiming exclusive
        copyright ownership\u201D of it.\\n  <em>\\n   Id.\\n  </em>\\n  at 998. Accordingly,
        the court held there could be \u201Cno copyright violation in using the identical
        declarations.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1384-9\\\">\\n
        \ Google agrees with the district court that the implementing code is the
        expression entitled to protection \u2014 not the declaring code. Indeed, at
        oral argument, counsel for Google explained that, \u201Cit is not our position
        that none of Java is copyrightable. Obviously, Google spent two and a half
        years ... to write from scratch all of the implementing code.\u201D Oral Argument
        at 33:16.\\n  <a class=\\\"footnote\\\" href=\\\"#fn5\\\" id=\\\"fn5_ref\\\">\\n
        \  5\\n  </a>\\n  Because it is undisputed that Google wrote its own implementing
        code, the\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1361\\\"> \\n   *1361\\n   </span>\\n  copyrightability of the precise
        language of that code is not at issue on appeal. Instead, our focus is on
        the declaring code and structure of the API packages.\\n </p>\\n<p id=\\\"b1385-5\\\">\\n
        \ On appeal, Oracle argues that the district court: (1) misapplied the merger
        doctrine; and (2) failed to focus its analysis on the options available to
        the original author. We agree with Oracle on both points. First, we agree
        that merger cannot bar copyright protection for any lines of declaring source
        code unless Sun/Oracle had only one way, or a limited number of ways, to write
        them.\\n  <em>\\n   See Satava,\\n  </em>\\n  323 F.3d at 812 n. 5 (\u201CUnder
        the merger doctrine, courts will not protect a copyrighted work from infringement
        if the idea underlying the copyrighted work can be expressed in only one way,
        lest there be a monopoly on the underlying idea.\u201D). The evidence showed
        that Oracle had \u201Cunlimited options as to the selection and arrangement
        of the 7000 lines Google copied.\u201D Appellant Br. 50. Using the district
        court\u2019s \u201Cjavadang. Math.max\u201D example, Oracle explains that
        the developers could have called it any number of things, including \u201CMath,
        maximum\u201D or \u201CArith.larger.\u201D This was not a situation where
        Oracle was selecting among preordained names and phrases to create its packages.\\n
        \ <a class=\\\"footnote\\\" href=\\\"#fn6\\\" id=\\\"fn6_ref\\\">\\n   6\\n
        \ </a>\\n  As the district court recognized, moreover, \u201Cthe Android method
        and class names could have been different from the names of their counterparts
        in Java and still have worked.\u201D\\n  <em>\\n   Copyrightability Decision,\\n
        \ </em>\\n  872 F.Supp.2d at 976. Because \u201Calternative expressions [we]re
        available,\u201D there is no merger.\\n  <em>\\n   See Atari,\\n  </em>\\n
        \ 975 F.2d at 840.\\n </p>\\n<p id=\\\"b1385-9\\\">\\n  We further find that
        the district court erred in focusing its merger analysis on the options available
        to Google at the time of copying. It is well-established that copyrightability
        and the scope of protectable activity are to be evaluated at the time of creation,
        not at the time of infringement.\\n  <em>\\n   See Apple Computer, Inc. v.
        Formula Int\u2019l, Inc.,\\n  </em>\\n  725 F.2d 521, 524 (9th Cir.1984) (quoting
        National Commission on New Technological Uses of Copyrighted Works, Final
        Report at 21 (1979) (\u201CCON-TU Report\u201D) (recognizing that the Copyright
        Act was designed \u201Cto protect all works of authorship from the moment
        of their fixation in any tangible medium of expression\u201D)). The focus
        is, therefore, on the options that were available to Sun/Oracle at the time
        it created the API packages. Of course, once Sun/Oracle created \u201Cjava.lang.Math.max,\u201D
        programmers who want to use that particular package have to call it by that
        name. But, as the court acknowledged, nothing prevented Google from writing
        its own declaring code, along with its own implementing code, to achieve the
        same result. In such circumstances, the chosen expression simply does not
        merge with the idea being expressed.\\n  <a class=\\\"footnote\\\" href=\\\"#fn7\\\"
        id=\\\"fn7_ref\\\">\\n   7\\n  </a>\\n</p>\\n<p id=\\\"b1386-3\\\">\\n<span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1362\\\">
        \\n   *1362\\n   </span>\\n  It seems possible that the merger doctrine, when
        properly analyzed, would exclude the three packages identified by the district
        court as core packages from the scope of actionable infringing conduct. This
        would be so if the Java authors, at the time these packages were created,
        had only a limited number of ways to express the methods and classes therein
        if they wanted to write in the Java language. In that instance, the idea may
        well be merged with the expression in these three packages.\\n  <a class=\\\"footnote\\\"
        href=\\\"#fn8\\\" id=\\\"fn8_ref\\\">\\n   8\\n  </a>\\n  Google did not present
        its merger argument in this way below and does not do so here, however. Indeed,
        Google does not try to differentiate among the packages for purposes of its
        copyrightability analysis and does not appeal the infringement verdict as
        to the packages. For these reasons, we reject the trial court\u2019s merger
        analysis.\\n </p>\\n<p id=\\\"b1386-4\\\">\\n  b. Short Phrases\\n </p>\\n<p
        id=\\\"b1386-5\\\">\\n  The district court also found that Oracle\u2019s declaring
        code consists of uncopyrightable short phrases. Specifically, the court concluded
        that, \u201Cwhile the Android method and class names could have been different
        from the names of their counterparts in Java and still have worked, copyright
        protection never extends to names or short phrases as a matter of law.\u201D\\n
        \ <em>\\n   Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 976.\\n
        </p>\\n<p id=\\\"b1386-9\\\">\\n  The district court is correct that \u201C[w]ords
        and short phrases such as names, titles, and slogans\u201D are not subject
        to copyright protection. 37 C.F.R. \xA7 202.1(a). The court failed to recognize,
        however, that the relevant question for copyright-ability purposes is not
        whether the work at issue contains short phrases \u2014 as literary works
        often do \u2014 but, rather, whether those phrases are creative.\\n  <em>\\n
        \  See Soc\u2019y of Holy Transfiguration Monastery, Inc. v. Gregory,\\n  </em>\\n
        \ 689 F.3d 29, 52 (1st Cir.2012) (noting that \u201Cnot all short phrases
        will automatically be deemed uncopyrightable\u201D); see also 1 Melville B.
        Nimmer &amp; David Nimmer, Nimmer on Copyright \xA7 2.01 [B] (2013) (\u201C[E]ven
        a short phrase may command copyright protection if it exhibits sufficient
        creativity.\u201D). And, by dissecting the individual lines of declaring code
        at issue into short phrases, the district court further failed to recognize
        that an original combination of elements can be copyrightable.\\n  <em>\\n
        \  See Softel, Inc. v. Dragon Med. &amp; Scientific Commc\u2019ns,\\n  </em>\\n
        \ 118 F.3d 955, 964 (2d Cir.1997) (noting that, in Feist, \u201Cthe Court
        made quite clear that a compilation of nonprotectible elements can enjoy copyright
        protection even though its constituent elements do not\u201D).\\n </p>\\n<p
        id=\\\"b1387-4\\\">\\n<span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1363\\\"> \\n   *1363\\n   </span>\\n  By analogy, the opening of
        Charles Dickens\u2019\\n  <em>\\n   A Tale of Two Cities\\n  </em>\\n  is
        nothing but a string of short phrases. Yet no one could contend that this
        portion of Dickens\u2019 work is unworthy of copyright protection because
        it can be broken into those shorter constituent components. The question is
        not whether a short phrase or series of short phrases can be extracted from
        the work, but whether the manner in which they are used or strung together
        exhibits creativity.\\n </p>\\n<p id=\\\"b1387-5\\\">\\n  Although the district
        court apparently focused on individual lines of code, Oracle is not seeking
        copyright protection for a specific short phrase or word. Instead, the portion
        of declaring code at issue is 7,000 lines, and Google\u2019s own \u201CJava
        guru\u201D conceded that there can be \u201Ccreativity and artistry even in
        a single method declaration.\u201D Joint Appendix (\u201CJ.A.\u201D) 20,970.
        Because Oracle \u201Cexercised creativity in the selection and arrangement\u201D
        of the method declarations when it created the API packages and wrote the
        relevant declaring code, they contain protectable expression that is entitled
        to copyright protection.\\n  <em>\\n   See Atari,\\n  </em>\\n  975 F.2d at
        840;\\n  <em>\\n   see also\\n  </em>\\n  17 U.S.C. \xA7\xA7 101, 103 (recognizing
        copyright protection for \u201Ccompilations\u201D which are defined as work
        that is \u201Cselected, coordinated, or arranged in such a way that the resulting
        work as a whole constitutes an original work of authorship\u201D). Accordingly,
        we conclude that the district court erred in applying the short phrases doctrine
        to find the declaring code not copyrightable.\\n </p>\\n<p id=\\\"b1387-6\\\">\\n
        \ c. Scenes a Faire\\n </p>\\n<p id=\\\"b1387-7\\\">\\n  The scenes a faire
        doctrine, which is related to the merger doctrine, operates to bar certain
        otherwise creative expression from copyright protection.\\n  <em>\\n   Apple\\n
        \ </em>\\n  Computer;\\n  <em>\\n   Inc. v. Microsoft Corp.,\\n  </em>\\n
        \ 35 F.3d 1435, 1444 (9th Cir.1994). It provides that \u201Cexpressive elements
        of a work of authorship are not entitled to protection against infringement
        if they are standard, stock, or common to a topic, or if they necessarily
        follow from a common theme or setting.\u201D\\n  <em>\\n   Mitel,\\n  </em>\\n
        \ 124 F.3d at 1374. Under this doctrine, \u201Cwhen certain commonplace expressions
        are indispensable and naturally associated -with the treatment of a given
        idea, those expressions are treated like ideas and therefore [are] not protected
        by copyright.\u201D\\n  <em>\\n   Swirsky v. Carey,\\n  </em>\\n  376 F.3d
        841, 850 (9th Cir.2004). In the computer context, \u201Cthe scene a faire
        doctrine denies protection to program elements that are dictated by external
        factors such as \u2018the mechanical specifications of the computer on which
        a particular program is intended to run\u2019 or \u2018widely accepted programming
        practices within the computer industry.\u2019 \u201D\\n  <em>\\n   Softel,\\n
        \ </em>\\n  118 F.3d at 963 (citation omitted).\\n </p>\\n<p id=\\\"b1387-9\\\">\\n
        \ The trial court rejected Google\u2019s reliance on the scenes a faire doctrine.
        It did so in a footnote, finding that Google had failed to present evidence
        to support the claim that either the grouping of methods within the classes
        or the code chosen for them \u201Cwould be so expected and customary as to
        be permissible under the scenes a faire doctrine.\u201D\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 999 n. 9. Specifically, the trial
        court found that \u201Cit is impossible to say on this record that\\n  <em>\\n
        \  all\\n  </em>\\n  of the classes and their contents are typical of such
        classes and, on this record, this order rejects Google\u2019s global argument
        based on\\n  <em>\\n   scenes a faire.\u201D Id.\\n  </em>\\n</p>\\n<p id=\\\"b1387-10\\\">\\n
        \ On appeal, Google refers to scenes a faire concepts briefly, as do some
        amici, apparently contending that, because programmers have become accustomed
        to and comfortable using the groupings in the Java API packages, those groupings
        are so commonplace as to be indispensable to the expression of an acceptable
        programming platform. As such, the argument goes, they are so associated with
        the \u201Cidea\u201D of what the packages are accomplishing that they should
        be treated as ideas rather than\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1364\\\"> \\n   *1364\\n   </span>\\n  expression.\\n  <em>\\n   See\\n
        \ </em>\\n  Br. of Amici Curiae Rackspace US, Inc., et al. at 19-22.\\n </p>\\n<p
        id=\\\"b1388-4\\\">\\n  Google cannot rely on the scenes a faire doctrine
        as an alternative ground upon which we might affirm the copyright-ability
        judgment of the district court. This is so for several reasons. First, as
        noted, like merger, in the Ninth Circuit, the scenes a faire doctrine is a
        component of the infringement analysis. \u201C[Similarity of expression, whether
        literal or non-literal, which necessarily results from the fact that the common
        idea is only capable of expression in more or less stereotyped form, will
        preclude a finding of actionable similarity.\u201D 4 Nimmer on Copyright \xA7
        13.08[B][3]. Thus, the expression is not excluded from copyright protection;
        it is just that certain copying is forgiven as a necessary incident of\\n
        \ <em>\\n   any\\n  </em>\\n  expression of the underlying idea.\\n  <em>\\n
        \  See Satava,\\n  </em>\\n  323 F.3d at 810 n. 3 (\u201CThe Ninth Circuit
        treats scenes a faire as a defense to infringement rather than as a barrier
        to copyrightability.\u201D).\\n </p>\\n<p id=\\\"b1388-5\\\">\\n  Second,
        Google has not objected to the trial court\u2019s conclusion that Google failed
        to make a sufficient factual record to support its contention that the groupings
        and code chosen for the 37 Java API packages were driven by external factors
        or premised on features that were either commonplace or essential to the idea
        being expressed. Google provides no record citations indicating that such
        a showing was made and does not contend that the trial court erred when it
        expressly found it was not. Indeed, Google does not even make this argument
        with respect to the core packages.\\n </p>\\n<p id=\\\"b1388-6\\\">\\n  Finally,
        Google\u2019s reliance on the doctrine below and the amici reference to it
        here are premised on a fundamental misunderstanding of the doctrine. Like
        merger, the focus of the scenes a faire doctrine is on the circumstances presented
        to the creator, not the copier.\\n  <em>\\n   See Mitel,\\n  </em>\\n  124
        F.3d at 1375 (finding error to the extent the trial court discussed \u201Cwhether
        external factors such as market forces and efficiency considerations justified
        Iqtel\u2019s copying of the command codes\u201D). The court\u2019s analytical
        focus must be upon the external factors that dictated Sun\u2019s selection
        of classes, methods, and code \u2014 not upon what Google encountered at the
        time it chose to copy those groupings and that code.\\n  <em>\\n   See id.\\n
        \ </em>\\n  \u201C[T]he scenes a faire doctrine identifies and excludes from
        protection against infringement expression whose creation \u2018flowed naturally
        from considerations external to the author\u2019s creativity.\u2019\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  (quoting Nimmer \xA7 13.03[F][3], at 13-131
        (1997)). It is this showing the trial court found Google failed to make, and
        Google cites to nothing in the record which indicates otherwise.\\n </p>\\n<p
        id=\\\"b1388-9\\\">\\n  For these reasons, the trial court was correct to
        conclude that the scenes a faire doctrine does not affect the copyrightability
        of either the declaring code in, or the SSO of, the Java API packages at issue.\\n
        </p>\\n<p id=\\\"b1388-10\\\">\\n  2. The Structure, Sequence, and Organization
        of the API Packages\\n </p>\\n<p id=\\\"b1388-11\\\">\\n  The district court
        found that the SSO of the Java API packages is creative and original, but
        nevertheless held that it is a \u201Csystem or method of operation ... and,
        therefore, cannot be copyrighted\u201D under 17 U.S.C. \xA7 102(b).\\n  <em>\\n
        \  Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 976-77. In reaching
        this conclusion, the district court seems to have relied upon language contained
        in a First Circuit decision:\\n  <em>\\n   Lotus Development Corp. v. Borland
        International, Inc.,\\n  </em>\\n  49 F.3d 807 (1st Cir.1995),\\n  <em>\\n
        \  aff'd without opinion by equally divided court,\\n  </em>\\n  516 U.S.
        233, 116 S.Ct. 804, 133 L.Ed.2d 610 (1996).\\n  <a class=\\\"footnote\\\"
        href=\\\"#fn9\\\" id=\\\"fn9_ref\\\">\\n   9\\n  </a>\\n</p>\\n<p id=\\\"b1389-4\\\">\\n<span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1365\\\">
        \\n   *1365\\n   </span>\\n  In\\n  <em>\\n   Lotus,\\n  </em>\\n  it was
        undisputed that the defendant copied the menu command hierarchy and interface
        from Lotus 1-2-3, a computer spreadsheet program \u201Cthat enables users
        to perform accounting functions electronically on a computer.\u201D 49 F.3d
        at 809. The menu command hierarchy referred to a series of commands\u2014
        such as \u201CCopy,\u201D \u201CPrint,\u201D and \u201CQuit\u201D\u2014 which
        were arranged into more than 50 menus and submenus.\\n  <em>\\n   Id.\\n  </em>\\n
        \ Although the defendant did not copy any Lotus source code, it copied the
        menu command hierarchy into its rival program. The question before the court
        was \u201Cwhether a computer menu command hierarchy is copyrightable subject
        matter.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1389-5\\\">\\n
        \ Although it accepted the district court\u2019s finding that Lotus developers
        made some expressive choices in selecting and arranging the command terms,
        the First Circuit found that the command hierarchy was not copyrightable because,
        among other things, it was a \u201Cmethod of operation\u201D under Section
        102(b). In reaching this conclusion, the court defined a \u201Cmethod of operation\u201D
        as \u201Cthe means by which a person operates something, whether it be a car,
        a food processor, or a computer.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at
        815.\\n  <a class=\\\"footnote\\\" href=\\\"#fn10\\\" id=\\\"fn10_ref\\\">\\n
        \  10\\n  </a>\\n  Because the Lotus menu command hierarchy provided \u201Cthe
        means by which users control and operate Lotus 1-2-3,\u201D it was deemed
        unprotectable.\\n  <em>\\n   Id.\\n  </em>\\n  For example, if users wanted
        to copy material, they would use the \u201CCopy\u201D command and the command
        terms would tell the computer what to do. According to the\\n  <em>\\n   Lotus\\n
        \ </em>\\n  court, the \u201Cfact that Lotus developers could have designed
        the Lotus menu command hierarchy differently is immaterial to the question
        of whether it is a \u2018method of operation.\u2019 \u201D\\n  <em>\\n   Id.\\n
        \ </em>\\n  at 816. (noting that \u201Cour initial inquiry is not whether
        the Lotus menu command hierarchy incorporates any expression\u201D). The court
        further indicated that, \u201C[i]f specific words are essential to operating
        something, then they are part of a \u2018method of operation\u2019 and, as
        such, are unprotectable.\u201D\\n  <em>\\n   Id.\\n  </em>\\n</p>\\n<p id=\\\"b1389-10\\\">\\n
        \ On appeal, Oracle argues that the district court\u2019s reliance on\\n  <em>\\n
        \  Lotus\\n  </em>\\n  is misplaced because it is distinguishable on its facts
        and is inconsistent with Ninth Circuit law. We agree. First, while the defendant
        in\\n  <em>\\n   Lotus\\n  </em>\\n  did not copy any of the underlying code,
        Google concedes that it copied portions of Oracle\u2019s declaring source
        code verbatim. Second, the\\n  <em>\\n   Lotus\\n  </em>\\n  court found that
        the commands at issue there (copy, print, etc.) were not creative, but it
        is undisputed here that the declaring code and the structure and organization
        of the API packages are both creative and original. Finally, while the court
        in\\n  <em>\\n   Lotus\\n  </em>\\n  found the commands at issue were \u201Cessential
        to operating\u201D the system, it is undisputed that\u2014 other than perhaps
        as to the three core packages \u2014 Google did not need to copy the structure,
        sequence, and organization of the Java API packages to write programs in the
        Java language.\\n </p>\\n<p id=\\\"b1389-11\\\">\\n  More importantly, however,
        the Ninth Circuit has not adopted the court\u2019s \u201Cmethod of operation\u201D
        reasoning in\\n  <em>\\n   Lotus,\\n  </em>\\n  and we conclude that it is
        inconsistent with binding precedent.\\n  <a class=\\\"footnote\\\" href=\\\"#fn11\\\"
        id=\\\"fn11_ref\\\">\\n   11\\n  </a>\\n  Specifically, we find\\n  <span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1366\\\">
        \\n   *1366\\n   </span>\\n  that\\n  <em>\\n   Lotus\\n  </em>\\n  is inconsistent
        with Ninth Circuit case law recognizing that the structure, sequence, and
        organization of a computer program is eligible for copyright protection where
        it qualifies as an expression of an idea, rather than the idea itself.\\n
        \ <em>\\n   See Johnson Controls,\\n  </em>\\n  886 F.2d at 1175-76. And,
        while the court in\\n  <em>\\n   Lotus\\n  </em>\\n  held \u201Cthat expression
        that is part of a \u2018method of operation\u2019 cannot be copyrighted,\u201D
        49 F.3d at 818, this court \u2014 applying Ninth Circuit law \u2014 reached
        the exact opposite conclusion, finding that copyright protects \u201Cthe expression
        of [a] process or method,\u201D\\n  <em>\\n   Atari,\\n  </em>\\n  975 F.2d
        at 839.\\n </p>\\n<p id=\\\"b1390-4\\\">\\n  We find, moreover, that the hard
        and fast rule set down in\\n  <em>\\n   Lotus\\n  </em>\\n  and employed by
        the district court here \u2014 i.e., that elements which perform a function
        can never be copyrightable \u2014 is at odds with the Ninth Circuit\u2019s
        endorsement of the abstraction-filtration-comparison analysis discussed earlier.
        As the Tenth Circuit concluded in expressly rejecting the\\n  <em>\\n   Lotus\\n
        \ </em>\\n  \u201Cmethod of operation\u201D analysis, in favor of the Second
        Circuit\u2019s abstraction-filtration-comparison test, \u201Calthough an element
        of a work may be characterized as a method of operation, that element may
        nevertheless contain expression that is eligible for copyright protection.\u201D\\n
        \ <em>\\n   Mitel,\\n  </em>\\n  124 F.3d at 1372. Specifically, the court
        found that Section 102(b) \u201Cdoes not extinguish the protection accorded
        a particular expression of an idea merely because that expression is embodied
        in a method of operation at a higher level of abstraction.\u201D\\n  <em>\\n
        \  Id.\\n  </em>\\n</p>\\n<p id=\\\"b1390-5\\\">\\n  Other courts agree that
        components of a program that can be characterized as a \u201Cmethod of operation\u201D
        may nevertheless be copyrightable. For example, the Third Circuit rejected
        a defendant\u2019s argument that operating system programs are \u201Cper se\u201D
        uncopyrightable because an operating system is a \u201Cmethod of operation\u201D
        for a computer.\\n  <em>\\n   Apple Computer, Inc. v. Franklin Computer Corp.,\\n
        \ </em>\\n  714 F.2d 1240, 1250-52 (3d Cir.1983). The court distinguished
        between the \u201Cmethod which instructs the computer to perform its operating
        functions\u201D and \u201Cthe instructions themselves,\u201D and found that
        the instructions were copyrightable.\\n  <em>\\n   Id.\\n  </em>\\n  at 1250-51.
        In its analysis, the court noted: \u201C[tjhat the words of a program are
        used ultimately in the implementation of a process should in no way affect
        their copyrightability.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 1252 (quoting
        CONTU Report at 21). The court focused \u201Con whether the idea is capable
        of various modes of expression\u201D and indicated that, \u201C[ijf other
        programs can be written or created which perform the same function as [i]n
        Apple\u2019s operating system program, then that program is an expression
        of the idea and hence copyrightable.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 1253. Notably, no other circuit has adopted the First Circuit\u2019s
        \u201Cmethod of operation\u201D analysis.\\n </p>\\n<p id=\\\"b1390-7\\\">\\n
        \ Courts have likewise found that classifying a work as a \u201Csystem\u201D
        does not preclude copyright for the particular expression of that system.\\n
        \ <em>\\n   See Toro Co. v. R &amp; R Prods. Co.,\\n  </em>\\n  787 F.2d 1208,
        1212 (8th Cir.1986) (rejecting the district court\u2019s decision that \u201Cappellant\u2019s
        parts numbering system is not copyrightable because it is a \u2018system\u2019
        \u201D and indicating that Section 102(b) does not preclude protection for
        the \u201Cparticular expression\u201D of that system);\\n  <em>\\n   see also
        Am. Dental Ass\u2019n v. Delta Dental Plans Ass\u2019n,\\n  </em>\\n  126
        F.3d 977, 980 (7th Cir.1997) (\u201CA dictionary cannot be called a \u2018system\u2019
        just because new novels are written using words, all of which appear in the
        dictionary. Nor is word-processing software a \u2018system\u2019 just because
        it has a command structure for producing paragraphs.\u201D).\\n </p>\\n<p
        id=\\\"b1390-8\\\">\\n  Here, the district court recognized that the SSO \u201Cresembles
        a taxonomy,\u201D but found that \u201Cit is nevertheless a command structure,
        a system or method of operation \u2014 a long hierarchy of over six thousand\\n
        \ <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1367\\\">
        \\n   *1367\\n   </span>\\n  commands to carry out pre-assigned functions.\u201D\\n
        \ <em>\\n   Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 999-1000.\\n
        \ <a class=\\\"footnote\\\" href=\\\"#fn12\\\" id=\\\"fn12_ref\\\">\\n   12\\n
        \ </a>\\n  In other words, the court concluded that, although the SSO is expressive,
        it is not copyrightable because it is also functional. The problem with the
        district court\u2019s approach is that computer programs are by definition
        functional \u2014 they are all designed to accomplish some task. Indeed, the
        statutory definition of \u201Ccomputer program\u201D acknowledges that they
        function \u201Cto bring about a certain result.\u201D\\n  <em>\\n   See\\n
        \ </em>\\n  17 U.S.C. \xA7 101 (defining a \u201Ccomputer program\u201D as
        \u201Ca set of statements or instructions to be used directly or indirectly
        in a computer in order to bring about a certain result\u201D). If we were
        to accept the district court\u2019s suggestion that a computer program is
        uncopyrightable simply because it \u201Ccarr[ies] out preassigned functions,\u201D
        no computer program is protectable. That result contradicts Congress\u2019s
        express intent to provide copyright protection to computer programs, as well
        as binding Ninth Circuit case law finding computer programs copyrightable,
        despite their utilitarian or functional purpose. Though the trial court did
        add the caveat that it \u201Cdoes not hold that the structure, sequence and
        organization of all computer programs may be stolen,\u201D\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 1002, it is hard to see how its method
        of operation analysis could lead to any other conclusion.\\n </p>\\n<p id=\\\"b1391-5\\\">\\n
        \ While it does not appear that the Ninth Circuit has addressed the precise
        issue, we conclude that a set of commands to instruct a computer to carry
        out desired operations may contain expression that is eligible for copyright
        protection.\\n  <em>\\n   See Mitel,\\n  </em>\\n  124 F.3d at 1372. We agree
        \u25A0with Oracle that, under Ninth Circuit law, an original work \u2014 even
        one that serves a function \u2014 is entitled to copyright protection as long
        as the author had multiple ways to express the underlying idea. Section 102(b)
        does not, as Google seems to suggest, automatically deny copyright protection
        to elements of a computer program that are functional. Instead, as noted,
        Section 102(b) codifies the idea/expression dichotomy and the legislative
        history confirms that, among other things, Section 102(b) was \u201Cintended
        to make clear that the expression adopted by the programmer is the copyrightable
        element in a computer program.\u201D H.R.Rep. No. 1476, 94th Cong., 2d Sess.
        54,\\n  <em>\\n   reprinted in\\n  </em>\\n  1976 U.S.C.C.A.N. 5659, 5670.
        Therefore, even if an element directs a computer to perform operations, the
        court must nevertheless determine whether it contains any separable expression
        entitled to protection.\\n </p>\\n<p id=\\\"b1391-9\\\">\\n  On appeal, Oracle
        does not \u2014 and concedes that it cannot \u2014 claim copyright in the
        idea of organizing functions of a computer program or in the \u201Cpackage-class-method\u201D
        organizational structure in the abstract. Instead, Oracle claims copyright
        protection only in its\\n  <em>\\n   particular\\n  </em>\\n  way of naming
        and organizing each of the 37 Java API packages.\\n  <a class=\\\"footnote\\\"
        href=\\\"#fn13\\\" id=\\\"fn13_ref\\\">\\n   13\\n  </a>\\n  Oracle recognizes,
        for example, that it \u201Ccannot copyright the idea of programs that open
        an internet connection,\u201D but \u201Cit can copyright the precise strings
        of code used to do so, at least so long as \u2018other language is available\u2019
        to\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1368\\\">
        \\n   *1368\\n   </span>\\n  achieve the same function.\u201D Appellant Reply
        Br. 13-14 (citation omitted). Thus, Oracle concedes that Google and others
        could employ the Java language \u2014 much like anyone could employ the English
        language to write a paragraph without violating the copyrights of other English
        language writers. And, that Google may employ the \u201Cpackage-class-method\u201D
        structure much like authors can employ the same rules of grammar chosen by
        other authors without fear of infringement. What Oracle contends is that,
        beyond that point, Google, like any author, is not permitted to employ the
        precise phrasing or precise structure chosen by Oracle to flesh out the substance
        of its packages\u2014 the details and arrangement of the prose.\\n </p>\\n<p
        id=\\\"b1392-4\\\">\\n  As the district court acknowledged, Google could have
        structured Android differently and could have chosen different ways to express
        and implement the functionality that it copied.\\n  <a class=\\\"footnote\\\"
        href=\\\"#fn14\\\" id=\\\"fn14_ref\\\">\\n   14\\n  </a>\\n  Specifically,
        the court found that \u201Cthe very same functionality could have been offered
        in Android without duplicating the exact command structure used in Java.\u201D\\n
        \ <em>\\n   Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 976.
        The court further explained that Google could have offered the same functions
        in Android by \u201Crearranging the various methods under different groupings
        among the various classes and packages.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ The evidence showed, moreover, that Google designed many of its own API
        packages from scratch, and, thus, could have designed its own corresponding
        37 API packages if it wanted to do so.\\n </p>\\n<p id=\\\"b1392-7\\\">\\n
        \ Given the court\u2019s findings that the SSO is original and creative, and
        that the declaring code could have been written and organized in any number
        of ways and still have achieved the same functions, we conclude that Section
        102(b) does not bar the packages from copyright protection just because they
        also perform functions.\\n </p>\\n<p id=\\\"b1392-8\\\">\\n  3. Google\u2019s
        Interoperability Arguments are Irrelevant to Copyrightability\\n </p>\\n<p
        id=\\\"b1392-9\\\">\\n  Oracle also argues that the district court erred in
        invoking interoperability in its copyrightability analysis. Specifically,
        Oracle argues that Google\u2019s interoperability arguments are only relevant,
        if at all, to fair use \u2014 not to the question of whether the API packages
        are copyrightable. We agree.\\n </p>\\n<p id=\\\"b1392-10\\\">\\n  In characterizing
        the SSO of the Java API packages as a \u201Cmethod of operation,\u201D the
        district court explained that \u201C[d]uplication of the command structure
        is necessary for interoperability.\u201D\\n  <em>\\n   Copyrightability Decision,\\n
        \ </em>\\n  872 F.Supp.2d at 977. The court found that, \u201C[i]n order for
        at least some of [the pre-Android Java] code to run on Android, Google was
        required to provide the same java.paekage.Class.method() command system using
        the same names with the same \u2018taxonomy\u2019 and with the same functional
        specifications.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1369\\\"> \\n   *1369\\n   </span>\\n
        \ 1000 (emphasis omitted). And, the court concluded that \u201CGoogle replicated
        what was necessary to achieve a degree of interoperability \u2014 but no more,
        taking care, as said before, to provide its own implementations.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  In reaching this conclusion, the court relied
        primarily on two Ninth Circuit decisions:\\n  <em>\\n   Sega Enterprises v.
        Accolade, Inc.,\\n  </em>\\n  977 F.2d 1510 (9th Cir.1992), and\\n  <em>\\n
        \  Sony Computer Entertainment, Inc. v. Connectix, Corp.,\\n  </em>\\n  203
        F.3d 596 (9th Cir.2000).\\n </p>\\n<p id=\\\"b1393-5\\\">\\n  Both\\n  <em>\\n
        \  Sega\\n  </em>\\n  and\\n  <em>\\n   Sony\\n  </em>\\n  are fair use cases
        in which copyrightability was addressed only tangentially. In\\n  <em>\\n
        \  Sega,\\n  </em>\\n  for example, Sega manufactured a video game console
        and game cartridges that contained hidden functional program elements necessary
        to achieve compatibility with the console. Defendant Accolade: (1) reverse-engineered
        Sega\u2019s video game programs to discover the requirements for compatibility;
        and (2) created its own games for the Sega console.\\n  <em>\\n   Sega,\\n
        \ </em>\\n  977 F.2d at 1514-15. As part of the reverse-engineering process,
        Accolade made intermediate copies of object code from Sega\u2019s console.\\n
        \ <em>\\n   Id.\\n  </em>\\n  Although the court recognized that the intermediate
        copying of computer code may infringe Sega\u2019s copyright, it concluded
        that \u201Cdisassembly of copyrighted object code is, as a matter of law,
        a fair use of the copyrighted work if such disassembly provides the only means
        of access to those elements of the code that are not protected by copyright
        and the copier has a legitimate reason for seeking such access.\u201D\\n  <em>\\n
        \  Id.\\n  </em>\\n  at 1518. The court agreed with Accolade that its copying
        was necessary to examine the unprotected functional aspects of the program.\\n
        \ <em>\\n   Id.\\n  </em>\\n  at 1520. And, because Accolade had a legitimate
        interest in making its cartridges compatible with Sega\u2019s console, the
        court found that Accolade\u2019s intermediate copying was fair use.\\n </p>\\n<p
        id=\\\"b1393-7\\\">\\n  Likewise, in\\n  <em>\\n   Sony,\\n  </em>\\n  the
        Ninth Circuit found that the defendant\u2019s reverse engineering and intermediate
        copying of Sony\u2019s copyrighted software program \u201Cwas a fair use for
        the purpose of gaining access to the unprotected elements of Sony\u2019s software.\u201D\\n
        \ <em>\\n   Sony,\\n  </em>\\n  203 F.3d at 602. The court explained that
        Sony\u2019s software program contained unprotected functional elements and
        that the defendant could only access those elements through reverse engineering.\\n
        \ <em>\\n   Id.\\n  </em>\\n  at 603. The defendant used that information
        to create a software program that let consumers play games designed for Sony\u2019s
        PlayStation console on their computers. Notably, the defendant\u2019s software
        program did not contain any of Sony\u2019s copyrighted material.\\n  <em>\\n
        \  Id.\\n  </em>\\n  at 598.\\n </p>\\n<p id=\\\"b1393-9\\\">\\n  The district
        court characterized\\n  <em>\\n   Sony\\n  </em>\\n  and\\n  <em>\\n   Sega\\n
        \ </em>\\n  as \u201Cclose analogies\u201D to this case.\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 1000. According to the court, both
        decisions \u201Cheld that interface procedures that were necessary to duplicate
        in order to achieve interoperability were functional aspects not copyrightable
        under Section 102(b).\u201D\\n  <em>\\n   Id.\\n  </em>\\n  The district court\u2019s
        reliance on\\n  <em>\\n   Sega\\n  </em>\\n  and\\n  <em>\\n   Sony\\n  </em>\\n
        \ in the copyrightability context is misplaced, however.\\n </p>\\n<p id=\\\"b1393-10\\\">\\n
        \ As noted, both cases were focused on fair use, not copyrightability. In\\n
        \ <em>\\n   Sega,\\n  </em>\\n  for example, the only question was whether
        Accolade\u2019s intermediate copying was fair use. The court never addressed
        the question of whether Sega\u2019s software code, which had functional elements,
        also contained separable creative expression entitled to protection. Likewise,
        although the court in\\n  <em>\\n   Sony\\n  </em>\\n  determined that Sony\u2019s
        computer program had functional elements, it never addressed whether it also
        had expressive elements.\\n  <em>\\n   Sega\\n  </em>\\n  and\\n  <em>\\n
        \  Sony\\n  </em>\\n  are also factually distinguishable because the defendants
        in those cases made intermediate copies to understand the functional aspects
        of the copyrighted works and then created new products.\\n  <em>\\n   See
        Sony,\\n  </em>\\n  203 F.3d at 606-07;\\n  <em>\\n   Sega,\\n  </em>\\n  977
        F.2d at 1522-23. This is not\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1370\\\"> \\n   *1370\\n   </span>\\n  a case where Google reverse-engineered
        Oracle\u2019s Java packages to gain access to unprotected functional elements
        contained therein. As the former Register of Copyrights of the United States
        pointed out in his brief amicus curiae, \u201C[h]ad Google reverse engineered
        the programming packages to figure out the ideas and functionality of the
        original, and then created its own structure and its own literal code, Oracle
        would have no remedy under copyright whatsoever.\u201D Br. for Amicus Curiae
        Ralph Oman 29. Instead, Google chose to copy both the declaring code and the
        overall SSO of the 37 Java API packages at issue.\\n </p>\\n<p id=\\\"b1394-4\\\">\\n
        \ We disagree with Google\u2019s suggestion that\\n  <em>\\n   Sony\\n  </em>\\n
        \ and\\n  <em>\\n   Sega\\n  </em>\\n  created an \u201Cinteroperability exception\u201D
        to copyrightability.\\n  <em>\\n   See\\n  </em>\\n  Appellee Br. 39 (citing\\n
        \ <em>\\n   Sony\\n  </em>\\n  and\\n  <em>\\n   Sega\\n  </em>\\n  for the
        proposition that \u201Ccompatibility elements are not copyrightable under
        section 102(b)\u201D (emphasis omitted)). Although both cases recognized that
        the software programs at issue there contained unprotected functional elements,
        a determination that some elements are unprotected is not the same as saying
        that the entire work loses copyright protection. To accept Google\u2019s reading
        would contradict Ninth Circuit case law recognizing that both the literal
        and non-literal components of a software program are eligible for copyright
        protection.\\n  <em>\\n   See Johnson Controls,\\n  </em>\\n  886 F.2d at
        1175. And it would ignore the fact that the Ninth Circuit endorsed the abstraction-filtration-comparison
        inquiry in\\n  <em>\\n   Sega\\n  </em>\\n  itself.\\n </p>\\n<p id=\\\"b1394-5\\\">\\n
        \ As previously discussed, a court must examine the software program to determine
        whether it contains creative expression that can be separated from the underlying
        function.\\n  <em>\\n   See Sega,\\n  </em>\\n  977 F.2d at 1524-25. In doing
        so, the court filters out the elements of the program that are \u201Cideas\u201D
        as well as elements that are \u201Cdictated by considerations of efficiency,
        so as to be necessarily incidental to that idea; required by factors external
        to the program itself.\u201D\\n  <em>\\n   Altai\\n  </em>\\n  982 F.2d at
        707.\\n </p>\\n<p id=\\\"b1394-7\\\">\\n  To determine \u201Cwhether certain
        aspects of an allegedly infringed software are not protected by copyright
        law, the focus is on external factors that influenced the choice of the creator
        of the infringed product.\u201D\\n  <em>\\n   Dun &amp; Bradstreet Software
        Servs., Inc. v. Grace Consulting, Inc.,\\n  </em>\\n  307 F.3d 197, 215 (3d
        Cir.2002) (citing\\n  <em>\\n   Altai\\n  </em>\\n  982 F.2d at 714;\\n  <em>\\n
        \  Mitel\\n  </em>\\n  124 F.3d at 1375). The Second Circuit, for example,
        has noted that programmers are often constrained in their design choices by
        \u201Cextrinsic considerations\u201D including \u201Cthe mechanical specifications
        of the computer on which a particular program is intended to run\u201D and
        \u201Ccompatibility requirements of other programs with which a program is
        designed to operate in conjunction.\u201D\\n  <em>\\n   Altai\\n  </em>\\n
        \ 982 F.2d at 709-10 (citing 3 Melville B. Nimmer &amp; David Nimmer, Nimmer
        on Copyright \xA7 13.01 at 13-66-71 (1991)). The Ninth Circuit has likewise
        recognized that: (1) computer programs \u201Ccontain many logical, structural,
        and visual display elements that are dictated by ... external factors such
        as compatibility requirements and industry demands\u201D; and (2) \u201C[i]n
        some circumstances, even the exact set of commands used by the programmer
        is deemed functional rather than creative for purposes of copyright.\u201D\\n
        \ <em>\\n   Sega,\\n  </em>\\n  977 F.2d at 1524 (internal citation omitted).\\n
        </p>\\n<p id=\\\"b1394-8\\\">\\n  Because copyrightability is focused on the
        choices available to the plaintiff at the time the computer program was created,
        the relevant compatibility inquiry asks whether the plaintiffs choices were
        dictated by a need to ensure that its program worked with existing third-party
        programs.\\n  <em>\\n   Dun &amp; Bradstreet,\\n  </em>\\n  307 F.3d at 215;\\n
        \ <em>\\n   see also Atari,\\n  </em>\\n  975 F.2d at 840 (\u201CExternal
        factors did not dictate the design of the IONES program.\u201D). Whether a
        defen\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1371\\\">
        \\n   *1371\\n   </span>\\n  dant later seeks to make its program interoperable
        with the plaintiffs program has no bearing on whether the software the plaintiff
        created had any design limitations dictated by external factors.\\n  <em>\\n
        \  See Dun &amp; Bradstreet,\\n  </em>\\n  307 F.3d at 215 (finding an expert\u2019s
        testimony on interoperability \u201Cwholly misplaced\u201D because he \u201Clooked
        at externalities from the eyes of the plagiarist, not the eyes of the program\u2019s
        creator\u201D). Stated differently, the focus is on the compatibility needs
        and programming choices of the party claiming copyright protection \u2014
        not the choices the defendant made to achieve compatibility with the plaintiffs
        program. Consistent with this approach, courts have recognized that, once
        the plaintiff creates a copyrightable work, a defendant\u2019s desire \u201Cto
        achieve total compatibility ... is a commercial and competitive objective
        which does not enter into the ... issue of whether particular ideas and expressions
        have merged.\u201D\\n  <em>\\n   Apple Computer,\\n  </em>\\n  714 F.2d at
        1253.\\n </p>\\n<p id=\\\"b1395-5\\\">\\n  Given this precedent, we conclude
        that the district court erred in focusing its interoperability analysis on
        Google\u2019s desires for its Android software.\\n  <em>\\n   See Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 1000 (\u201CGoogle replicated what
        was necessary to achieve a degree of interoperability\u201D with Java.). Whether
        Google\u2019s software is \u201Cinteroperable\u201D in some sense with any
        aspect of the Java platform (although as Google concedes, certainly not with
        the JVM) has no bearing on the threshold question of whether Oracle\u2019s
        software is copyrightable. It is the interoperability and other needs of Oracle
        \u2014 not those of Google \u2014 that apply in the copyrightability context,
        and there is no evidence that when Oracle created the Java API packages at
        issue it did so to meet compatibility requirements of other pre-existing programs.\\n
        </p>\\n<p id=\\\"Aef\\\">\\n  Google maintains on appeal that its use of the
        \u201CJava class and method names and declarations was \u2018the only and
        essential means\u2019 of achieving a degree of interoperability with existing
        programs written in the [Java language].\u201D Appellee Br. 49. Indeed, given
        the record evidence that Google designed Android so that it would\\n  <em>\\n
        \  not\\n  </em>\\n  be compatible with the Java platform, or the JVM specifically,
        we find Google\u2019s interoperability argument confusing. While Google repeatedly
        cites to the district court\u2019s finding that Google had to copy the packages
        so that an app written in Java could run on Android, it cites to no evidence
        in the record that any such app exists and points to no Java apps that either
        pre-dated or post-dated Android that could run on the Android platform.\\n
        \ <a class=\\\"footnote\\\" href=\\\"#fn15\\\" id=\\\"fn15_ref\\\">\\n   15\\n
        \ </a>\\n  The compatibility Google sought to foster was not with Oracle\u2019s
        Java platform or with the JVM central to that platform. Instead, Google wanted
        to capitalize on the fact that software developers were already trained and
        experienced in using the Java API packages at issue. The district court agreed,
        finding that, as to the 37 Java API packages, \u201CGoogle believed Java application
        programmers would want to find the same 37 sets of functionalities in the
        new Android system callable by the same names as used in Java.\u201D\\n  <em>\\n
        \  Copyrightability Decision,\\n  </em>\\n  872 F.Supp.2d at 978. Google\u2019s
        interest was in accelerating its development process by \u201Cleveraging]
        Java for its existing base of developers.\u201D J.A.2033,\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1372\\\"> \\n   *1372\\n   </span>\\n
        \ 2092. Although this competitive objective might be relevant to the fair
        use inquiry, we conclude that it is irrelevant to the copyrightability of
        Oracle\u2019s declaring code and organization of the API packages.\\n </p>\\n<p
        id=\\\"b1396-4\\\">\\n  Finally, to the extent Google suggests that it was
        entitled to copy the Java API packages because they had become the effective
        industry standard, we are unpersuaded. Google cites no authority for its suggestion
        that copyrighted works lose protection when they become popular, and we have
        found none.\\n  <a class=\\\"footnote\\\" href=\\\"#fn16\\\" id=\\\"fn16_ref\\\">\\n
        \  16\\n  </a>\\n  In fact, the Ninth Circuit has rejected the argument that
        a work that later becomes the industry standard is uncopyrightable.\\n  <em>\\n
        \  See Practice Mgmt. Info. Corp. v. Am. Med. Ass\u2019n,\\n  </em>\\n  121
        F.3d 516, 520 n. 8 (9th Cir.1997) (noting that the district court found plaintiffs
        medical coding system entitled to copyright protection, and that, although
        the system had become the industry standard, plaintiffs copyright did not
        prevent competitors \u201Cfrom developing comparative or better coding systems
        and lobbying the federal government and private actors to adopt them. It simply
        prevents wholesale copying of an existing system.\u201D). Google was free
        to develop its own API packages and to \u201Clobby\u201D programmers to adopt
        them. Instead, it chose to copy Oracle\u2019s declaring code and the SSO to
        capitalize on the preexisting community of programmers who were accustomed
        to using the Java API packages. That desire has nothing to do with copyrightability.
        For these reasons, we find that Google\u2019s industry standard argument has
        no bearing on the copyrightability of Oracle\u2019s work.\\n </p>\\n<p id=\\\"b1396-7\\\">\\n
        \ B. Fair Use\\n </p>\\n<p id=\\\"b1396-8\\\">\\n  As noted, the jury hung
        on Google\u2019s fair use defense, and the district court declined to order
        a new trial given its conclusion that the code and structure Google copied
        were not entitled to copyright protection. On appeal, Oracle argues that:
        (1) a remand to decide fair use \u201Cis pointless\u201D; and (2) this court
        should find, as a matter of law, that \u201CGoogle\u2019s commercial use of
        Oracle\u2019s work in a market where Oracle already competed was not fair
        use.\u201D Appellant Br. 68.\\n </p>\\n<p id=\\\"b1396-9\\\">\\n  Fair use
        is an affirmative defense to copyright infringement and is codified in Section
        107 of the Copyright Act.\\n  <em>\\n   Golan,\\n  </em>\\n  132 S.Ct. at
        890 (\u201C[T]he fair use defense, is codified at 17 U.S.C. \xA7 107.\u201D).
        Section 107 permits use of copyrighted work if it is \u201Cfor purposes such
        as criticism, comment, news reporting, teaching (including multiple copies
        for classroom use), scholarship, or research.\u201D 17 U.S.C. \xA7 107. The
        fair use doctrine has been referred to as \u201C \u2018the most troublesome
        in the whole law of copyright.\u2019 \u201D\\n  <em>\\n   Monge v. Maya Magazines,
        Inc.,\\n  </em>\\n  688 F.3d 1164, 1170 (9th Cir.2012) (quoting\\n  <em>\\n
        \  Dellar v. Samuel Goldwyn, Inc.,\\n  </em>\\n  104 F.2d 661, 662 (2d Cir.1939)
        (per curiam)). It both permits and requires \u201Ccourts to avoid rigid application
        of the copyright statute\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1373\\\"> \\n   *1373\\n   </span>\\n  when, on occasion, it would
        stifle the very creativity which that law is designed to foster.\u201D\\n
        \ <em>\\n   Campbell v. Acuff-Rose Music, Inc.,\\n  </em>\\n  510 U.S. 569,
        577, 114 S.Ct. 1164, 127 L.Ed.2d 500 (1994) (quoting\\n  <em>\\n   Stewart
        v. Abend,\\n  </em>\\n  495 U.S. 207, 236, 110 S.Ct. 1750, 109 L.Ed.2d 184
        (1990)).\\n </p>\\n<p id=\\\"b1397-5\\\">\\n  \u201CSection 107 requires a
        case-by-case determination whether a particular use is fair, and the statute
        notes four nonexclusive factors to be considered.\u201D\\n  <em>\\n   Harper
        &amp; Row Publishers, Inc. v. Nation Enters.,\\n  </em>\\n  471 U.S. 539,
        549, 105 S.Ct. 2218, 85 L.Ed.2d 588 (1985). Those factors are: (1) \u201Cthe
        purpose and character of the use, including whether such use is of a commercial
        nature or is for nonprofit educational purposes;\u201D (2) \u201Cthe nature
        of the copyrighted work;\u201D (3) \u201Cthe amount and substantiality of
        the portion used in relation to the copyrighted work as a whole;\u201D and
        (4) \u201Cthe effect of the use upon the potential market for or value of
        the copyrighted work.\u201D 17 U.S.C. \xA7 107. The Supreme Court has explained
        that all of the statutory factors \u201Care to be explored, and the results
        weighed together, in light of the purpose[ ] of copyright,\u201D which is
        \u201C[t]o promote the Progress of Science and useful Arts.\u201D\\n  <em>\\n
        \  Campbell,\\n  </em>\\n  510 U.S. at 578, 575, 114 S.Ct. 1164 (internal
        citations omitted).\\n </p>\\n<p id=\\\"b1397-6\\\">\\n  \u201CFair use is
        a mixed question of law and fact.\u201D\\n  <em>\\n   Harper &amp; Row,\\n
        \ </em>\\n  471 U.S. at 560, 105 S.Ct. 2218. Thus, while subsidiary and controverted
        findings of fact must be reviewed for clear error under Rule 52 of the Federal
        Rules of Civil Procedure, the Ninth Circuit reviews the ultimate application
        of those facts de novo.\\n  <em>\\n   See Seltzer v. Green Day, Inc.,\\n  </em>\\n
        \ 725 F.3d 1170, 1175 (9th Cir.2013) (citing\\n  <em>\\n   SOFA Entm\u2019t,
        Inc. v. Dodger Prods., Inc.,\\n  </em>\\n  709 F.3d 1273, 1277 (9th Cir.2013)).
        Where there are no material facts at issue and \u201Cthe parties dispute only
        the ultimate conclusions to be drawn from those facts, we may draw those conclusions
        without usurping the function of the jury.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ (citing\\n  <em>\\n   Fisher v. Dees,\\n  </em>\\n  794 F.2d 432, 436 (9th
        Cir.1986)). Indeed, the Supreme Court has specifically recognized that, \u201C[w]here
        the district court has found facts sufficient to evaluate each of the statutory
        factors, an appellate court \u2018need not remand for further factfinding
        ... [but] may conclude as a matter of law that [the challenged use] [does]
        not qualify as a fair use of the copyrighted work.\u2019 \u201D\\n  <em>\\n
        \  Harper &amp; Row,\\n  </em>\\n  471 U.S. at 560, 105 S.Ct. 2218 (citation
        omitted).\\n </p>\\n<p id=\\\"b1397-8\\\">\\n  Of course, the corollary to
        this point is true as well \u2014 where there are material facts in dispute
        and those facts have not yet been resolved by the trier of fact, appellate
        courts may not make findings of fact in the first instance.\\n  <em>\\n   See
        Shawmut Bank, N.A. v. Kress Assocs.,\\n  </em>\\n  33 F.3d 1477, 1504 (9th
        Cir.1994) (\u201C[W]e must avoid finding facts in the first instance.\u201D);\\n
        \ <em>\\n   see also Golden Bridge Tech., Inc. v. Nokia, Inc.,\\n  </em>\\n
        \ 527 F.3d 1318, 1323 (Fed.Cir.2008) (\u201CAppellate courts review district
        court judgments; we do not find facts.\u201D). Here, it is undisputed that
        neither the jury nor the district court made findings of fact to which we
        can refer in assessing the question of whether Google\u2019s use of the API
        packages at issue was a \u201Cfair use\u201D within the meaning of Section
        107. Oracle urges resolution of the fair use question by arguing that the
        trial court should have decided the question as a matter of law based on the
        undisputed facts developed at trial, and that we can do so as well. Google,
        on the other hand, argues that many critical facts regarding fair use are
        in dispute. It asserts that the fact that the jury could not reach a resolution
        on the fair use defense indicates that at least some presumably reasonable
        jurors found its use to be fair. And, Google asserts that, even if it is true
        that the district court erred in discussing concepts of \u201Cinteroperability\u201D
        when considering copyrightability, those\\n  <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1374\\\"> \\n   *1374\\n   </span>\\n
        \ concepts are still relevant to its fair use defense. We turn first to a
        more detailed examination of fair use.\\n </p>\\n<p id=\\\"b1398-4\\\">\\n
        \ The first factor in the fair use inquiry involves \u201Cthe purpose and
        character of the use, including whether such use is of a commercial nature
        or is for nonprofit educational purposes.\u201D 17 U.S.C. \xA7 107(1). This
        factor involves two sub-issues: (1) \u201Cwhether and to what extent the new
        work is transformative,\u201D\\n  <em>\\n   Campbell,\\n  </em>\\n  510 U.S.
        at 579, 114 S.Ct. 1164 (citation and internal quotation marks omitted); and
        (2) whether the use serves a commercial purpose.\\n </p>\\n<p id=\\\"b1398-5\\\">\\n
        \ A use is \u201Ctransformative\u201D if it \u201Cadds something new, with
        a further purpose or different character, altering the first with new expression,
        meaning or message.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  The critical question
        is \u201Cwhether the new work merely supersede^] the objects of the original
        creation ... or instead adds something new.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ (citations and internal quotation marks omitted). This inquiry \u201Cmay
        be guided by the examples given in the preamble to \xA7 107, looking to whether
        the use is for criticism, or comment, or news reporting, and the like.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  at 578-79, 114 S.Ct. 1164. \u201CThe Supreme
        Court has recognized that parodie works, like other works that comment and
        criticize, are by their nature often sufficiently transformative to fit clearly
        under the fair use exception.\u201D\\n  <em>\\n   Mattel, Inc. v. Walking
        Mountain Prods.,\\n  </em>\\n  353 F.3d 792, 800 (9th Cir.2003) (citing\\n
        \ <em>\\n   Campbell,\\n  </em>\\n  510 U.S. at 579, 114 S.Ct. 1164).\\n </p>\\n<p
        id=\\\"b1398-6\\\">\\n  Courts have described new works as \u201Ctransformative\u201D
        when \u201Cthe works use copy-righted material for purposes distinct from
        the purpose of the original material.\u201D\\n  <em>\\n   Elvis Presley Enters.,
        Inc. v. Passport Video,\\n  </em>\\n  349 F.3d 622, 629 (9th Cir.2003) (\u201CHere,
        Passport\u2019s use of many of the television clips is transformative because
        they are cited as historical reference points in the life of a remarkable
        entertainer.\u201D),\\n  <em>\\n   overruled on other grounds by Flexible
        Lifeline Sys., Inc. v. Precision Lift, Inc.,\\n  </em>\\n  654 F.3d 989, 995
        (9th Cir.2011) (per curiam);\\n  <em>\\n   see also Bouchat v. Baltimore Ravens
        Ltd. P\u2019ship,\\n  </em>\\n  619 F.3d 301, 309-10 (4th Cir.2010) (quoting\\n
        \ <em>\\n   A.V. ex rel. Vanderhye v. iParadigms, LLC,\\n  </em>\\n  562 F.3d
        630, 638 (4th Cir.2009) (\u201C[A] transformative use is one that \u2018employ[s]
        the quoted matter in a different manner or for a different purpose from the
        original.\u2019 \u201D)). \u201CA use is considered transformative only where
        a defendant changes a plaintiff\u2019s copyrighted work or uses the plaintiffs
        copyrighted work in a different context such that the plaintiffs work is transformed
        into a new creation.\u201D\\n  <em>\\n   Perfect 10, Inc. v. Amazon.com, Inc.,\\n
        \ </em>\\n  508 F.3d 1146, 1165 (9th Cir.2007) (quoting\\n  <em>\\n   Wall
        Data Inc. v. L.A. County Sheriffs Dep\u2019t,\\n  </em>\\n  447 F.3d 769,
        778 (9th Cir.2006), and finding that Google\u2019s use of thumbnail images
        in its search engine was \u201Chighly transformative\u201D).\\n </p>\\n<p
        id=\\\"b1398-8\\\">\\n  A work is not transformative where the user \u201Cmakes
        no alteration to the\\n  <em>\\n   expressive content or message\\n  </em>\\n
        \ of the original work.\u201D\\n  <em>\\n   Seltzer,\\n  </em>\\n  725 F.3d
        at 1177;\\n  <em>\\n   see also Wall Data,\\n  </em>\\n  447 F.3d at 778 (\u201CThe
        Sheriffs Department created exact copies of RUMBA\u2019s software. It then
        put those copies to the identical purpose as the original software. Such a
        use cannot be considered transformative.\u201D);\\n  <em>\\n   Monge,\\n  </em>\\n
        \ 688 F.3d at 1176 (finding that a magazine\u2019s publication of photographs
        of a secret celebrity wedding \u201Csprinkled with written commentary\u201D
        was \u201Cat best minimally transformative\u201D where the magazine \u201Cdid
        not transform the photos into a new work ... or incorporate the photos as
        part of a broader work\u201D);\\n  <em>\\n   Elvis Presley Enters.,\\n  </em>\\n
        \ 349 F.3d at 629 (finding that use of copyrighted clips of Elvis\u2019s television
        appearances was not transformative where \u201Csome of the clips [we]re played
        without much interruption, if any ... [and] instead serve[d] the\\n  <span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1375\\\">
        \\n   *1375\\n   </span>\\n  same intrinsic entertainment value that is protected
        by Plaintiffs\u2019 copyrights.\u201D). Where the use \u201Cis for the same
        intrinsic purpose as [the copyright holder\u2019s] ... such use seriously
        weakens a claimed fair use.\u201D\\n  <em>\\n   Worldwide Church of God v.
        Phila. Church of God, Inc.,\\n  </em>\\n  227 F.3d 1110, 1117 (9th Cir.2000)
        (quoting\\n  <em>\\n   Weissmann v. Freeman,\\n  </em>\\n  868 F.2d 1313,
        1324 (2d Cir.1989)).\\n </p>\\n<p id=\\\"b1399-5\\\">\\n  Analysis of the
        first factor also requires inquiry into the commercial nature of the use.
        Use of the copyrighted work that is commercial \u201Ctends to weigh against
        a finding of fair use.\u201D\\n  <em>\\n   Harper &amp; Row,\\n  </em>\\n
        \ 471 U.S. at 562, 105 S.Ct. 2218 (\u201CThe crux of the profit/nonprofit
        distinction is not whether the sole motive of the use is monetary gain but
        whether the user stands to profit from exploitation of the copyrighted material
        without paying the customary price.\u201D). \u201C[T]he more transformative
        the new work, the less will be the significance of other factors, like commercialism,
        that may weigh against a finding of fair use.\u201D\\n  <em>\\n   Campbell,\\n
        \ </em>\\n  510 U.S. at 579, 114 S.Ct. 1164.\\n </p>\\n<p id=\\\"b1399-6\\\">\\n
        \ The second factor \u2014 the nature of the copyrighted work \u2014 \u201Ccalls
        for recognition that some works are closer to the core of intended copyright
        protection than others, with the consequence that fair use is more difficult
        to establish when the former works are copied.\u201D\\n  <em>\\n   Id.\\n
        \ </em>\\n  at 586, 114 S.Ct. 1164. This factor \u201Cturns on whether the
        work is informational or creative.\u201D\\n  <em>\\n   Worldwide Church of
        God,\\n  </em>\\n  227 F.3d at 1118;\\n  <em>\\n   see also Harper &amp; Row,\\n
        \ </em>\\n  471 U.S. at 563, 105 S.Ct. 2218 (\u201CThe law generally recognizes
        a greater need to disseminate factual works than works of fiction or fantasy.\u201D).
        Creative expression \u201Cfalls within the core of the copyright\u2019s protective
        purposes.\u201D\\n  <em>\\n   Campbell,\\n  </em>\\n  510 U.S. at 586, 114
        S.Ct. 1164. Because computer programs have both functional and expressive
        components, however, where the functional components are themselves unprotected
        (because, e.g., they are dictated by considerations of efficiency or other
        external factors), those elements should be afforded \u201Ca lower degree
        of protection than more traditional literary works.\u201D\\n  <em>\\n   Sega,\\n
        \ </em>\\n  977 F.2d at 1526. Thus, where the nature of the work is such that
        purely functional elements exist in the work and it is necessary to copy the
        expressive elements in order to perform those functions, consideration of
        this second factor arguably supports a finding that the use is fair.\\n </p>\\n<p
        id=\\\"b1399-8\\\">\\n  The third factor asks the court to examine \u201Cthe
        amount and substantiality of the portion used in relation to the copyrighted
        work as a whole.\u201D 17 U.S.C. \xA7 107(3). Analysis of this factor is viewed
        in the context of the copyrighted work, not the infringing work. Indeed, the
        statutory language makes clear that \u201Ca taking may not be excused merely
        because it is insubstantial with respect to the\\n  <em>\\n   infringing\\n
        \ </em>\\n  work.\u201D\\n  <em>\\n   Harper &amp; Row,\\n  </em>\\n  471
        U.S. at 565, 105 S.Ct. 2218. \u201CAs Judge Learned Hand cogently remarked,
        \u2018no plagiarist can excuse the wrong by showing how much of his work he
        did not pirate.\u2019 \u201D\\n  <em>\\n   Id.\\n  </em>\\n  (quoting\\n  <em>\\n
        \  Sheldon v. Metro-Goldwyn Pictures Corp.,\\n  </em>\\n  81 F.2d 49, 56 (2d
        Cir.1936)). In contrast, \u201Cthe fact that a substantial portion of the
        infringing work was copied verbatim is evidence of the qualitative value of
        the copied material, both to the originator and to the plagiarist who seeks
        to profit from marketing someone else\u2019s copyrighted expression.\u201D\\n
        \ <em>\\n   Id.\\n  </em>\\n  The Ninth Circuit has recognized that, while
        \u201Cwholesale copying does not preclude fair use per se, copying an entire
        work militates against a finding of fair use.\u201D\\n  <em>\\n   Worldwide
        Church of God,\\n  </em>\\n  227 F.3d at 1118 (internal citation and quotation
        omitted). \u201CIf the secondary user only copies as much as is necessary
        for his or her intended use, then this factor will not weigh against him or
        her.\u201D\\n  <em>\\n   Kelly v.\\n  </em>\\n<span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1376\\\"> \\n   *1376\\n   </span>\\n<em>\\n
        \  Arriba Soft Corp.,\\n  </em>\\n  336 F.3d 811, 820-21 (9th Cir.2003). Under
        this factor, \u201Cattention turns to the persuasiveness of a parodist\u2019s
        justification for the particular copying done, and the enquiry will harken
        back to the first of the statutory factors ... [because] the extent of permissible
        copying varies with the purpose and character of the use.\u201D\\n  <em>\\n
        \  Campbell,\\n  </em>\\n  510 U.S. at 586-87, 114 S.Ct. 1164.\\n </p>\\n<p
        id=\\\"b1400-4\\\">\\n  The fourth and final factor focuses on \u201Cthe effect
        of the use upon the potential market for or value of the copyrighted work.\u201D\\n
        \ <em>\\n   Harper &amp; Row,\\n  </em>\\n  471 U.S. at 566, 105 S.Ct. 2218.
        This factor reflects the idea that fair use \u201Cis limited to copying by
        others which does not materially impair the marketability of the work which
        is copied.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 566-67, 105 S.Ct. 2218.
        The Supreme Court has said that this factor is \u201Cundoubtedly the single
        most important element of fair use.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at
        566, 105 S.Ct. 2218. It requires that courts \u201Cconsider not only the extent
        of market harm caused by the particular actions of the alleged infringer,
        but also whether unrestricted and widespread conduct of the sort engaged in
        by the defendant ... would result in a substantially adverse impact on the
        potential market for the original.\u201D\\n  <em>\\n   Campbell,\\n  </em>\\n
        \ 510 U.S. at 590, 114 S.Ct. 1164 (citation and quotation marks omitted).
        \u201CMarket harm is a matter of degree, and the importance of this factor
        will vary, not only with the amount of harm, but also with the relative strength
        of the showing on the other factors.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 590 n. 21, 114 S.Ct. 1164.\\n </p>\\n<p id=\\\"b1400-5\\\">\\n  Oracle
        asserts that all of these factors support its position that Google\u2019s
        use was not \u201Cfair use\u201D \u2014 Google knowingly and illicitly copied
        a creative work to further its own commercial purposes, did so verbatim, and
        did so to the detriment of Oracle\u2019s market position. These undisputable
        facts, according to Oracle, should end the fair use inquiry. Oracle\u2019s
        position is not without force. On many of these points, Google does not debate
        Oracle\u2019s characterization of its conduct, nor could it on the record
        evidence.\\n </p>\\n<p id=\\\"b1400-7\\\">\\n  Google contends, however, that,
        although it admittedly copied portions of the API packages and did so for
        what were purely commercial purposes, a reasonable juror still could find
        that: (1) Google\u2019s use was transformative; (2) the Java API packages
        are entitled only to weak protection; (3) Google\u2019s use was necessary
        to work within a language that had become an industry standard; and (4) the
        market impact on Oracle was not substantial.\\n </p>\\n<p id=\\\"b1400-8\\\">\\n
        \ On balance, we find that due respect for the limit of our appellate function
        requires that we remand the fair use question for a new trial. First, although
        it is undisputed that Google\u2019s use of the API packages is commercial,
        the parties disagree on whether its use is \u201Ctransformative.\u201D Google
        argues that it is, because it wrote its own implementing code, created its
        own virtual machine, and incorporated the packages into a smartphone platform.
        For its part, Oracle maintains that Google\u2019s use is not transformative
        because: (1) \u201C[t]he same code in Android ... enables programmers to invoke
        the same pre-programmed functions in exactly the same way;\u201D and (2) Google\u2019s
        use of the declaring code and packages does not serve a different function
        from Java. Appellant Reply Br. 47. While Google overstates what activities
        can be deemed transformative under a correct application of the law, we cannot
        say that there are no material facts in dispute on the question of whether
        Google\u2019s use is \u201Ctransformative,\u201D even under a correct reading
        of the law. As such, we are unable to resolve this issue on appeal.\\n </p>\\n<p
        id=\\\"b1400-9\\\">\\n  Next, while we have concluded that it was error for
        the trial court to focus\\n  <em>\\n   unduly\\n  </em>\\n  on the functional
        aspects of the packages, and on Google\u2019s competitive desire to\\n  <span
        citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1377\\\">
        \\n   *1377\\n   </span>\\n  achieve commercial \u201Cinteroperability\u201D
        when deciding whether Oracle\u2019s API packages are entitled to copyright
        protection, we expressly noted that these factors may be relevant to a fair
        use analysis. While the trial court erred in concluding that these factors
        were sufficient to overcome Oracle\u2019s threshold claim of copyrightability,
        reasonable jurors might find that they are relevant to Google\u2019s fair
        use defense under the second and third factors of the inquiry.\\n  <em>\\n
        \  See Sega,\\n  </em>\\n  977 F.2d at 1524-25 (discussing the Second Circuit\u2019s
        approach to \u201Cbreaking] down a computer program into its component subroutines
        and subsubroutines and then identifying] the idea or core functional element
        of each\u201D in the context of the second fair use factor: the nature of
        the copyrighted work). We find this particularly true with respect to those
        core packages which it seems may be necessary for anyone to copy if they are
        to write programs in the Java language. And, it may be that others of the
        packages were similarly essential components of any Java language-based program.
        So far, that type of filtration analysis has not occurred.\\n </p>\\n<p id=\\\"b1401-5\\\">\\n
        \ Finally, as to market impact, the district court found that \u201CSun and
        Oracle never successfully developed its own smartphone platform using Java
        technology.\u201D\\n  <em>\\n   Copyrightability Decision,\\n  </em>\\n  872
        F.Supp.2d at 978. But Oracle argues that, when Google copied the API packages,
        Oracle was licensing in the mobile and smartphone markets, and that Android\u2019s
        release substantially harmed those commercial opportunities as well as the
        potential market for a Java smartphone device. Because there are material
        facts in dispute on this factor as well, remand is necessary.\\n </p>\\n<p
        id=\\\"b1401-8\\\">\\n  Ultimately, we conclude that this is not a case in
        which the record contains sufficient factual findings upon which we could
        base a de novo assessment of Google\u2019s affirmative defense of fair use.
        Accordingly, we remand this question to the district court for further proceedings.
        On remand, the district court should revisit and revise its jury instructions
        on fair use consistent with this opinion so as to provide the jury with a
        clear and appropriate picture of the fair use defense.\\n  <a class=\\\"footnote\\\"
        href=\\\"#fn17\\\" id=\\\"fn17_ref\\\">\\n   17\\n  </a>\\n</p>\\n<p id=\\\"b1401-9\\\">\\n
        \ II. Google\u2019s Cross-Appeal\\n </p>\\n<p id=\\\"b1401-10\\\">\\n  Google
        cross-appeals from the portion of the district court\u2019s final judgment
        entered in favor of Oracle on its claim for copyright infringement as to the
        nine lines of range-Check code and the eight decompiled files. Final Judgment,\\n
        \ <em>\\n   Oracle Am., Inc. v. Google Inc.,\\n  </em>\\n  No. 3:10-cv3561
        (N.D.Cal. June 20, 2012), ECF No. 1211. Specifically, Google appeals from
        the district court\u2019s decisions: (1) granting Oracle\u2019s motion for\\n
        \ <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1378\\\">
        \\n   *1378\\n   </span>\\n  JMOL of infringement as to the eight decompiled
        Java files that Google copied into Android; and (2) denying Google\u2019s
        motion for JMOL with respect to rangeCheck.\\n </p>\\n<p id=\\\"b1402-4\\\">\\n
        \ When reviewing a district court\u2019s grant or denial of a motion for JMOL,
        we apply the procedural law of the relevant regional circuit, here the Ninth
        Circuit.\\n  <em>\\n   Trading Techs. Int\u2019l, Inc. v. eSpeed, Inc.,\\n
        \ </em>\\n  595 F.3d 1340, 1357 (Fed.Cir.2010). The Ninth Circuit reviews
        a district court\u2019s JMOL decision de novo, applying the same standard
        as the district court.\\n  <em>\\n   Mangum v. Action Collection Serv., Inc.,\\n
        \ </em>\\n  575 F.3d 935, 938 (9th Cir.2009). To grant judgment as a matter
        of law, the court must find that \u201Cthe evidence presented at trial permits
        only one reasonable conclusion\u201D and that \u201Cno reasonable juror could
        find in the non-moving party\u2019s favor.\u201D\\n  <em>\\n   Id.\\n  </em>\\n
        \ at 938-39 (citation and internal quotation marks omitted).\\n </p>\\n<p
        id=\\\"b1402-5\\\">\\n  Oracle explains that the eight decompiled files at
        issue \u201Ccontain security functions governing access to network files\u201D
        while rangeCheck \u201Cfacilitates an important sorting function, frequently
        called upon during the operation of Java and Android.\u201D Oracle Response
        to Cross-Appeal 60-61. At trial, Google conceded that it copied the eight
        decompiled Java code files and the nine lines of code referred to as range-Check
        into Android. Its only defense was that the copying was de minimis. Accordingly,
        the district court instructed the jury that, \u201C[w]ith respect to the infringement
        issues concerning the rangeCheck and other similar files, Google agrees that
        the accused lines of code and comments came from the copyrighted materials
        but contends that the amounts involved were so negligible as to be de minimis
        and thus should be excluded.\u201D Final Charge to the Jury (Phase One),\\n
        \ <em>\\n   Oracle Am., Inc. v. Google, Inc.,\\n  </em>\\n  No. 3:10-cv-3561
        (N.D.Cal. Apr. 30, 2012), ECF No. 1018, at 14.\\n </p>\\n<p id=\\\"b1402-6\\\">\\n
        \ Although the jury found that Google infringed Oracle\u2019s copyright in
        the nine lines of code comprising rangeCheck, it returned a noninfringement
        verdict as to eight decompiled security files. But because the trial testimony
        was that Google\u2019s use of the decompiled files was significant \u2014
        and there was no testimony to the contrary \u2014 the district court concluded
        that \u201C[n]o reasonable jury could find that this copying was de minimis.\u201D\\n
        \ <em>\\n   Order Granting JMOL on Decompiled Files,\\n  </em>\\n  2012 U.S.
        Dist. LEXIS 66417, at *6. As such, the court granted Oracle\u2019s motion
        for JMOL of infringement as to the decompiled security files.\\n </p>\\n<p
        id=\\\"b1402-7\\\">\\n  On appeal, Google maintains that its copying of rangeCheck
        and the decompiled security files was de minimis and thus did not infringe
        any of Oracle\u2019s copyrights. According to Google, the district court should
        have denied Oracle\u2019s motion for JMOL \u201Cbecause substantial evidence
        supported the jury\u2019s verdict that Google\u2019s use of eight decompiled
        test files was de minimis.\u201D Cross-Appellant Br. 76. Google further argues
        that the court should have granted its motion for JMOL as to range-Check because
        the \u201Ctrial evidence revealed that the nine lines of rangeCheck code were
        both quantitatively and qualitatively insignificant in relation to the [Java]
        platform.\u201D\\n  <em>\\n   Id.\\n  </em>\\n  at 78.\\n </p>\\n<p id=\\\"b1402-8\\\">\\n
        \ In response, Oracle argues that the Ninth Circuit does not recognize a de
        minimis defense to copyright infringement and that, even if it does, we should
        affirm the judgments of infringement on grounds that Google\u2019s copying
        was significant. Because we agree with Oracle on its second point, we need
        not address the first, except to note that there is some conflicting Ninth
        Circuit precedent on the question of whether there is a free-standing de minim-is
        defense to copyright infringement or whether the substantiality of the alleged\\n
        \ <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1379\\\">
        \\n   *1379\\n   </span>\\n  copying is best addressed as part of a fair use
        defense.\\n  <em>\\n   Compare Norse v. Henry Holt &amp; Co.,\\n  </em>\\n
        \ 991 F.2d 563, 566 (9th Cir.1993) (indicating that \u201Ceven a small taking
        may sometimes be actionable\u201D and the \u201Cquestion of whether a copying
        is substantial enough to be actionable may be best resolved through the fair
        use doctrine\u201D),\\n  <em>\\n   with Newton v. Diamond,\\n  </em>\\n  388
        F.3d 1189, 1192-93 (9th Cir.2003) (\u201CFor an unauthorized use of a copyrighted
        work to be actionable, the use must be significant enough to constitute infringement.
        This means that even where the fact of copying is conceded, no legal consequences
        will follow from that fact unless the copying is substantial.\u201D) (internal
        citation omitted).\\n  <a class=\\\"footnote\\\" href=\\\"#fn18\\\" id=\\\"fn18_ref\\\">\\n
        \  18\\n  </a>\\n</p>\\n<p id=\\\"b1403-4\\\">\\n  Even assuming that the
        Ninth Circuit recognizes a stand-alone de minim-is defense to copyright infringement,
        however, we conclude that: (1) the jury reasonably found that Google\u2019s
        copying of the rangeCheck files was more than de minim-is; and (2) the district
        court correctly concluded that the defense failed as a matter of law with
        respect to the decompiled security files.\\n </p>\\n<p id=\\\"b1403-5\\\">\\n
        \ First, the unrebutted testimony at trial revealed that rangeCheck and the
        decompiled security files were significant to both Oracle and Google. Oracle\u2019s
        expert, Dr. John Mitchell, testified that Android devices call the rangeCheck
        function 2,600 times just in powering on the device. Although Google argues
        that the eight decompiled files were insignificant because they were used
        only to test the Android platform, Dr. Mitchell testified that \u201Cusing
        the copied files even as test files would have been significant use\u201D
        and the district court specifically found that \u201C[t]here was no testimony
        to the contrary.\u201D\\n  <em>\\n   Order Granting JMOL on Decompiled Files,\\n
        \ </em>\\n  2012 U.S. Dist. LEXIS 66417, at *6. Given this testimony, a reasonable
        jury could not have found Google\u2019s copying de minimis.\\n </p>\\n<p id=\\\"b1403-8\\\">\\n
        \ Google emphasizes that the nine lines of rangeCheck code \u201Crepresented
        an infinitesimal percentage of the 2.8 million lines of code in the 166 Java
        packages \u2014 let alone the millions of Unes of code in the entire [Java]
        platform.\u201D Google Cross-Appeal Br. 78-79. To the extent Google is arguing
        that a certain minimum number of lines of code must be copied before a court
        can find infringement, that argument is without merit.\\n  <em>\\n   See Baxter
        v. MCA, Inc.,\\n  </em>\\n  812 F.2d 421, 425 (9th Cir.1987) (\u201C[N]o bright
        line rule exists as to what quantum of similarity is permitted.\u201D). And,
        given the trial testimony that both rangeCheck and the decompiled security
        files are qualitatively significant and Google copied them in their entirety,
        Google cannot show that the district court erred in denying its motion for
        JMOL.\\n </p>\\n<p id=\\\"b1403-9\\\">\\n  We have considered Google\u2019s
        remaining arguments and find them unpersuasive. Accordingly, we affirm both
        of the JMOL decisions at issue in Google\u2019s cross-appeal.\\n </p>\\n<p
        id=\\\"b1403-10\\\">\\n  III. Google\u2019s Policy-Based Arguments\\n </p>\\n<p
        id=\\\"b1403-11\\\">\\n  Many of Google\u2019s arguments, and those of some
        amici, appear premised on the belief that copyright is not the correct legal
        ground upon which to protect intellectual property rights to software programs;
        they opine that patent protection for such programs, with its insistence on\\n
        \ <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1380\\\">
        \\n   *1380\\n   </span>\\n  non-obviousness, and shorter terms of protection,
        might be more applicable, and sufficient. Indeed, the district court\u2019s
        method of operation analysis seemed to say as much.\\n  <em>\\n   Copyrightability
        Decision,\\n  </em>\\n  872 F.Supp.2d at 984 (stating that this case raises
        the question of \u201Cwhether the copyright holder is more appropriately asserting
        an exclusive right to a functional system, process, or method of operation
        that belongs in the realm of patents, not copyrights\u201D). Google argues
        that \u201C[ajfter\\n  <em>\\n   Sega,\\n  </em>\\n  developers could no longer
        hope to protect [software] interfaces by copyright ...\\n  <em>\\n   Sega\\n
        \ </em>\\n  signaled that the only reliable means for protecting the functional
        requirements for achieving interoperability was by patenting them.\u201D Appellee
        Br. 40 (quoting Pamela Samuelson,\\n  <em>\\n   Are Patents on Interfaces
        Impeding Interoperability\\n  </em>\\n  ? 93 Minn. L.Rev.1943, 1959 (2009)).
        And, Google relies heavily on articles written by Professor Pamela Samuelson,
        who has argued that \u201Cit would be best for a commission of computer program
        experts to draft a new form of intellectual property law for machine-readable
        programs.\u201D Pamela Samuelson,\\n  <em>\\n   CONTU Revisited: The Case
        Against Copyright Protection for Computer Programs in Machine-Readable Form,\\n
        \ </em>\\n  1984 Duke L.J. 663, 764 (1984). Professor Samuelson has more recently
        argued that\\n  <em>\\n   \u201CAltai\\n  </em>\\n  and\\n  <em>\\n   Sega\\n
        \ </em>\\n  contributed to the eventual shift away from claims of copyright
        in program interfaces and toward reliance on patent protection. Patent protection
        also became more plausible and attractive as the courts became more receptive
        to software. patents.\u201D Samuelson, 93 Minn. L.Rev. at 1959.\\n </p>\\n<p
        id=\\\"b1404-5\\\">\\n  Although Google, and the authority on which it relies,
        seem to suggest that software is or should be entitled to protection only
        under patent law \u2014 not copyright law \u2014 several commentators have
        recently argued the exact opposite.\\n  <em>\\n   See\\n  </em>\\n  Technology
        Quarterly,\\n  <em>\\n   Stalking Trolls,\\n  </em>\\n  Economist, Mar. 8,
        2014, http://www.economist.com/ news/technology-quarterly/21598 321-intel-lectual-property-after-being-blamed-stymying-innovation-america-vague
        (\u201C[M]any innovators have argued that the electronics and software industries
        would flourish if companies trying to bring new technology (software innovations
        included) to market did not have to worry about being sued for infringing
        thousands of absurd patents at every turn. A perfectly adequate means of protecting
        and rewarding software developers for their ingenuity has existed for over
        300 years. It is called copyright.\u201D); Timothy B. Lee,\\n  <em>\\n   Will
        the Supreme Court save us from software pat\\n  </em>\\n  ents?, Wash. Post,
        Feb. 26, 2014, 1:13 PM, http://www.washingtonpost.com/blogs/theswitch/wp/2014/02/26/will-the-supremecourt-save-us-from-software-patents/
        (\u201CIf you write a book or a song, you can get copyright protection for
        it. If you invent a new pill or a better mousetrap, you can get a patent on
        it. But for the last two decades, software has had the distinction of being
        potentially eligible for both copyright and patent protection. Critics say
        that\u2019s a mistake. They argue that the complex and expensive patent system
        is a terrible fit for the fast-moving software industry. And they argue that
        patent protection is unnecessary because software innovators already have
        copyright protection available.\u201D).\\n </p>\\n<p id=\\\"b1404-7\\\">\\n
        \ Importantly for our purposes, the Supreme Court has made clear that \u201C[n]either
        the Copyright Statute nor any other says that because a thing is patentable
        it may not be copyrighted.\u201D\\n  <em>\\n   Mazer v. Stein,\\n  </em>\\n
        \ 347 U.S. 201, 217, 74 S.Ct. 460, 98 L.Ed. 630 (1954). Indeed, the thrust
        of the CONTU Report is that copyright is \u201Cthe most suitable mode of legal
        protection for computer software.\u201D Peter S. Menell,\\n  <em>\\n   An
        Analysis of the Scope of Copyright Protection for Application Programs,\\n
        \ </em>\\n  41 Stan. L.Rev. 1045, 1072 (1989);\\n  <em>\\n   see also\\n  </em>\\n
        \ CONTU Report at 1 (recommending that copyright law be amended \u201Cto make
        it explicit that\\n  <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1381\\\"> \\n   *1381\\n   </span>\\n  computer programs, to the
        extent that they embody an author\u2019s original creation, are proper subject
        matter of copyright\u201D). Until either the Supreme Court or Congress tells
        us otherwise, we are bound to respect the Ninth Circuit\u2019s decision to
        afford software programs protection under the copyright laws. We thus decline
        any invitation to declare that protection of software programs should be the
        domain of patent law, and only patent law.\\n </p>\\n<p id=\\\"b1405-5\\\">\\n
        \ Conclusion\\n </p>\\n<p id=\\\"b1405-6\\\">\\n  For the foregoing reasons,
        we conclude that the declaring code and the structure, sequence, and organization
        of the 37 Java API packages at issue are entitled to copyright protection.
        We therefore reverse the district court\u2019s copyrightability determination
        with instructions to reinstate the jury\u2019s infringement verdict. Because
        the jury hung on fair use, we remand Google\u2019s fair use defense for further
        proceedings consistent with this decision.\\n </p>\\n<p id=\\\"b1405-8\\\">\\n
        \ With respect to Google\u2019s cross-appeal, we affirm the district court\u2019s
        decisions: (1) granting Oracle\u2019s motion for JMOL as to the eight decompiled
        Java files that Google copied into Android; and (2) denying Google\u2019s
        motion for JMOL with respect to the rangeCheck function. Accordingly, we affirm-in-part,
        reverse-in-part, and remand for further proceedings.\\n </p>\\n<p id=\\\"b1405-9\\\">\\n
        \ AFFIRMED-IN-PART, REVERSED-IN-PART, AND REMANDED\\n </p>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<div
        class=\\\"footnotes\\\"><div class=\\\"footnote\\\" id=\\\"fn1\\\" label=\\\"1\\\">\\n<a
        class=\\\"footnote\\\" href=\\\"#fn1_ref\\\">\\n   1\\n  </a>\\n<p id=\\\"b1372-11\\\">\\n
        \  . Oracle acquired Sun in 2010.\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn2\\\" label=\\\"2\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn2_ref\\\">\\n
        \  2\\n  </a>\\n<p id=\\\"b1373-7\\\">\\n   . The 37 API packages involved
        in this appeal are: java.awt.font, java.beans, java.io, java, lang, java.
        lang. annotation, java.lang.ref, java. lang. reflect,java.net, java.nio, java.
        nio. channels, java.nio.channels.spi, java.nio.charset, java.nio.charset.spi,
        java.security, java, security.acl, java, security, cert, java, security, interfaces,
        java, security, spec, java.sql, java. text, java.util, java.util.jar, java.util.logging,
        java.util.prefs, java.util.regex, java.util.zip, javax.crypto, javax. crypto,
        interfaces, javax.crypto.specjavax.net, javax.net.ssl, javax. security, auth,
        javax. security.auth.callback, javax. security, auth.login, javax. security.
        auth.x500, javax.security.cert, and javax.sql.\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn3\\\" label=\\\"3\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn3_ref\\\">\\n
        \  3\\n  </a>\\n<p id=\\\"b1377-8\\\">\\n   . The Supreme Court has not addressed
        whether copyrightability is a pure question of law or a mixed question of
        law and fact, or whether, if it is a mixed question of law and fact, the factual
        components of that inquiry are for the court, rather than the jury. Relatedly,
        it has not decided the standard of review that applies on appeal. Ten years
        ago, before finding it unnecessary to decide whether copyrightability is a
        pure question of law or a mixed question of law and fact, the Seventh Circuit
        noted that it had \\\"found only a handful of appellate cases addressing the
        issue, and they are split.\u201D\\n   <em>\\n    Gaiman v. McFarlane,\\n   </em>\\n
        \  360 F.3d 644, 648 (7th Cir.2004). And, panels of the Ninth Circuit have
        defined the respective roles of the jury and the court differently where questions
        of originality were at issue.\\n   <em>\\n    Compare North Coast Indus. v.
        Jason Maxwell, Inc.,\\n   </em>\\n   972 F.2d 1031, 1035 (9th Cir.1992),\\n
        \  <em>\\n    with Ets-Hokin,\\n   </em>\\n   225 F.3d at 1073. More recently,
        several district courts within the Ninth Circuit have treated copyrightability
        as a question for only the court, regardless of whether it is a pure question
        of law.\\n   <em>\\n    See Stern v. Does,\\n   </em>\\n   No. 09-1986, 2011
        U.S. Dist. LEXIS 37735, *7 (C.D.Cal. Feb. 10, 2011);\\n   <em>\\n    Jonathan
        Browning, Inc. v. Venetian Casino Resort LLC,\\n   </em>\\n   No. C 07-3983,
        2009 U.S. Dist. LEXIS 57525, at *2 (N.D.Cal. June 19, 2009);\\n   <em>\\n
        \   see also Pivot Point Int\u2019l, Inc. v. Charlene Prods., Inc.,\\n   </em>\\n
        \  932 F.Supp. 220, 225 (N.D.Ill. 19.96) (Easterbrook, J.) (citing to\\n   <em>\\n
        \   Markman v. Westview Instruments, Inc.,\\n   </em>\\n   517 U.S. 370, 116
        S.Ct. 1384, 134 L.Ed.2d 577 (1996), and concluding that whether works are
        copyrightable is a question which the \u201Cjury has nothing to do with\u201D).
        We need not address any of these questions, because the parties here agreed
        that the district court would decide copyright-\\n   <span citation-index=\\\"1\\\"
        class=\\\"star-pagination\\\" label=\\\"1354\\\"> \\n    *1354\\n    </span>\\n
        \  ability, and both largely agree that we may undertake a review of that
        determination de novo.\\n  </p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn4\\\"
        label=\\\"4\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn4_ref\\\">\\n   4\\n
        \ </a>\\n<p id=\\\"b1381-6\\\">\\n   . Importantly, this full analysis only
        applies where a copyright owner alleges infringement of the non-literal aspects
        of its work. Where \\\"admitted literal copying of a discrete, easily-conceptualized
        portion of a work\u201D is at issue \u2014 as with Oracle\u2019s declaring
        code \u2014 a court \\\"need not perform a complete abstraction-filtration-comparison
        analysis\u201D and may focus the protectability analysis on the filtration
        stage, with attendant reference to standard copyright principles.\\n   <em>\\n
        \   Mitel,\\n   </em>\\n   124 F.3d at 1372-73.\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn5\\\" label=\\\"5\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn5_ref\\\">\\n
        \  5\\n  </a>\\n<p id=\\\"b1384-6\\\">\\n   . It is undisputed that Microsoft
        and Apple developed mobile operating systems from scratch, using their own
        array of software packages. When asked whether Google could also copy all
        of Microsoft or Apple\u2019s declaring code- \u2014 codes that obviously differ
        from those at issue here \u2014 counsel for Google responded: \\\"Yes, but
        only the structure, sequence, and organization. Only the command structure\u2014
        what you need to access the functions. You\u2019d have to rewrite all the
        millions of lines of code in Apple or in Microsoft which is what Google did
        in Android.\u201D Oral Argument at 36:00.\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn6\\\" label=\\\"6\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn6_ref\\\">\\n
        \  6\\n  </a>\\n<p id=\\\"b1385-6\\\">\\n   . In their brief as amici curiae
        in support of reversal, Scott McNealy and Brian Sutphin\u2014 both former
        executives at Sun who were involved in the development of the Java platform
        \u2014 provide a detailed example of the creative choices involved in designing
        a Java package. Looking at the \\\"java.text\u201D package, they explain that
        it \\\"contains 25 classes, 2 interfaces, and hundreds of methods to handle
        text, dates, numbers, and messages in a manner independent of natural human
        languages. ...\u201D Br. of McNealy and Sutphin 14-15. Java's creators had
        to determine whether to include a java.text package in the first place, how
        long the package would be, what elements to include, how to organize that
        package, and how it would relate to other packages.\\n   <em>\\n    Id.\\n
        \  </em>\\n   at 16. This description of Sun's creative process is consistent
        with the evidence presented at trial.\\n   <em>\\n    See\\n   </em>\\n   Appellant
        Br. 12-13 (citing testimony that it took years to write some of the Java packages
        and that Sun/Oracle developers had to \\\"wrestle with what functions to include
        in the package, which to put in other packages, and which to omit entirely\u201D).\\n
        \ </p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn7\\\" label=\\\"7\\\">\\n<a
        class=\\\"footnote\\\" href=\\\"#fn7_ref\\\">\\n   7\\n  </a>\\n<p id=\\\"b1385-11\\\">\\n
        \  . The district court did not find merger with respect to the structure,
        sequence, and organization of Oracle\u2019s Java API packages. Nor could it,
        given the court\u2019s recognition that there were myriad ways in which the
        API\\n   <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\" label=\\\"1362\\\">
        \\n    *1362\\n    </span>\\n   packages could have been organized. Indeed,
        the court found that the SSO is original and that \\\"nothing in the rules
        of the Java language ... required that Google replicate the same groupings.\u201D\\n
        \  <em>\\n    Copyrightability Decision,\\n   </em>\\n   872 F.Supp.2d at
        999. As discussed below, however, the court nonetheless found that the SSO
        is an uncopyrightable \\\"method of operation.\u201D\\n  </p>\\n</div><div
        class=\\\"footnote\\\" id=\\\"fn8\\\" label=\\\"8\\\">\\n<a class=\\\"footnote\\\"
        href=\\\"#fn8_ref\\\">\\n   8\\n  </a>\\n<p id=\\\"b1386-7\\\">\\n   . At
        oral argument, counsel for Oracle was asked whether we should view the three
        core packages \\\"differently vis-a-vis the concept of a method of operation
        than the other packages.\u201D\\n   <em>\\n    See\\n   </em>\\n   Oral Argument
        at 7:43. He responded: \\\"I think not your Honor. I would view them differently
        with respect to fair use.... It\u2019s not that they are more basic. It's
        that there are just several methods, that is, routines, within just those
        three packages that are necessary to 'speak the Java language.' Nothing in
        the other thirty-four packages is necessary in order to speak in Java, so
        to speak.\u201D\\n   <em>\\n    Id.\\n   </em>\\n   Counsel conceded, however,
        that this issue \u201Cmight go to merger. It might go to the question whether
        someone \u2014 since we conceded that it's okay to use the language\u2014
        if it\u2019s alright to use the language that there are certain things that
        the original developers had to say in order to use that language, arguably,
        although I still think it\u2019s really a fair use analysis.\u201D\\n   <em>\\n
        \   Id.\\n   </em>\\n</p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn9\\\"
        label=\\\"9\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn9_ref\\\">\\n   9\\n
        \ </a>\\n<p id=\\\"b1388-7\\\">\\n   . The Supreme Court granted certiorari
        in\\n   <em>\\n    Lotus,\\n   </em>\\n   but, shortly after oral argument,
        the Court announced that it was equally divided and that Justice Stevens took
        no part in the\\n   <span citation-index=\\\"1\\\" class=\\\"star-pagination\\\"
        label=\\\"1365\\\"> \\n    *1365\\n    </span>\\n   consideration or decision
        of the case. The Court therefore left the First Circuit\u2019s decision undisturbed.\\n
        \  <em>\\n    See Lotus,\\n   </em>\\n   516 U.S. at 233-34, 116 S.Ct. 804.\\n
        \ </p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn10\\\" label=\\\"10\\\">\\n<a
        class=\\\"footnote\\\" href=\\\"#fn10_ref\\\">\\n   10\\n  </a>\\n<p id=\\\"b1389-7\\\">\\n
        \  . The\\n   <em>\\n    Lotus\\n   </em>\\n   majority cited no authority
        for this definition of \\\"method of operation.\u201D\\n  </p>\\n</div><div
        class=\\\"footnote\\\" id=\\\"fn11\\\" label=\\\"11\\\">\\n<a class=\\\"footnote\\\"
        href=\\\"#fn11_ref\\\">\\n   11\\n  </a>\\n<p id=\\\"b1389-8\\\">\\n   . As
        Oracle points out, the Ninth Circuit has cited\\n   <em>\\n    Lotus\\n   </em>\\n
        \  only one time, on a procedural issue.\\n   <em>\\n    See Danjaq LLC v.
        Sony Corp.,\\n   </em>\\n   263 F.3d 942, 954 (9th Cir.2001) (citing\\n   <em>\\n
        \   Lotus\\n   </em>\\n   for the proposition that delay \\\"has been held
        permissible, among other reasons, when it is necessitated by the exhaustion
        of remedies through the administrative process ... when it is used to evaluate
        and prepare a complicated claim\u201D).\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn12\\\" label=\\\"12\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn12_ref\\\">\\n
        \  12\\n  </a>\\n<p id=\\\"b1391-6\\\">\\n   . This analogy by the district
        court is meaningful because taxonomies, in varying forms, have generally been
        deemed copyrightable.\\n   <em>\\n    See, e.g., Practice Mgmt. Info. Corp.
        v. Am. Med. Ass\u2019n,\\n   </em>\\n   121 F.3d 516, 517-20 (9th Cir.1997);\\n
        \  <em>\\n    Am. Dental,\\n   </em>\\n   126 F.3d at 978-81.\\n  </p>\\n</div><div
        class=\\\"footnote\\\" id=\\\"fn13\\\" label=\\\"13\\\">\\n<a class=\\\"footnote\\\"
        href=\\\"#fn13_ref\\\">\\n   13\\n  </a>\\n<p id=\\\"b1391-7\\\">\\n   . At
        oral argument, counsel for Oracle explained that it \\\"would never claim
        that anyone who uses a package-class-method manner of classifying violates
        our copyright. We don't own every conceivable way of organizing, we own only
        our specific expression \u2014 our specific way of naming each of these 362
        methods, putting them into 36 classes, and 20 subclasses.\\\" Oral Argument
        at 16:44.\\n  </p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn14\\\" label=\\\"14\\\">\\n<a
        class=\\\"footnote\\\" href=\\\"#fn14_ref\\\">\\n   14\\n  </a>\\n<p id=\\\"b1392-5\\\">\\n
        \  . Amici McNealy and Sutphin explain that \\\"a quick examination of other
        programming environments shows that creators of other development platforms
        provide the same functions with wholly different creative choices.\u201D Br.
        of McNealy and Sutphin 17. For example, in Java, a developer setting the time
        zone would call the \\\"setTimeZone\u201D method within the \\\"DateFormat\u201D
        class of the java.text package.\\n   <em>\\n    Id.\\n   </em>\\n   Apple\u2019s
        iOS platform, on the other hand, \u201Cdevotes an entire class to set the
        time zone in an application \u2014 the \u2018NSTimeZone\u2019 class\u201D
        which is in the \u201CFoundation framework.\u201D\\n   <em>\\n    Id.\\n   </em>\\n
        \  at 17-18 (noting that a \\\"framework is Apple\u2019s terminology for a
        structure conceptually similar to Java's 'package' \u201D). Microsoft provides
        similar functionality with \\\"an entirely different structure, naming scheme,
        and selection.\u201D\\n   <em>\\n    Id.\\n   </em>\\n   at 18 (\\\"In its
        Windows Phone development platform, Microsoft stores its time zone programs
        in the 'TimeZonelnfo' class in its 'Systems' namespace (Microsoft\u2019s version
        of a 'package' or \u2018framework\u2019).\u201D). Again, this is consistent
        with the evidence presented at trial.\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn15\\\" label=\\\"15\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn15_ref\\\">\\n
        \  15\\n  </a>\\n<p id=\\\"b1395-6\\\">\\n   . During oral argument, Google\u2019s
        counsel stated that \\\"a program written in the Java language can run on
        Android if it\u2019s only using packages within the 37. So if I\u2019m a developer
        and I have written a program, I\u2019ve written it in Java, I can stick an
        Android header on it and it will run in Android because it is using the identical
        names of the classes, methods, and packages.\u201D Oral Argument at 31:31.
        Counsel did not identify any programs that use only the 37 API packages at
        issue, however, and did not attest that any such program would be useful.
        Nor did Google cite to any record evidence to support this claim.\\n  </p>\\n</div><div
        class=\\\"footnote\\\" id=\\\"fn16\\\" label=\\\"16\\\">\\n<a class=\\\"footnote\\\"
        href=\\\"#fn16_ref\\\">\\n   16\\n  </a>\\n<p id=\\\"b1396-5\\\">\\n   . Google
        argues that, in the same way a formerly distinctive trademark can become generic
        over time, a program element can lose copyright protection when it becomes
        an industry standard. But \u201Cit is to be expected that phrases and other
        fragments of expression in a highly successful copyrighted work will become
        part of the language. That does not mean they lose all protection in the manner
        of a trade name that has become generic.\u201D\\n   <em>\\n    Warner Bros.,
        Inc. v. Am. Broadcasting Cos.,\\n   </em>\\n   720 F.2d 231, 242 (2d Cir.1983)
        (\\\"No matter how well known a copyrighted phrase becomes, its author is
        entitled to guard against its appropriation to promote the sale of commercial
        products.\u201D). Notably, even when a patented method or system becomes an
        acknowledged industry standard with acquiescence of the patent owner, any
        permissible use generally requires payment of a reasonable royalty, which
        Google refused to do here.\\n   <em>\\n    See generally In re Innovatio IP
        Ventures, LLC,\\n   </em>\\n   No. 11-C-9308, 2013 U.S. Dist. LEXIS 144061
        (N.D.Ill. Sept. 27, 2013).\\n  </p>\\n</div><div class=\\\"footnote\\\" id=\\\"fn17\\\"
        label=\\\"17\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn17_ref\\\">\\n   17\\n
        \ </a>\\n<p id=\\\"b1401-6\\\">\\n   . Google argues that, if we allow it
        to retry its fair use defense on remand, it is entitled to a retrial on infringement
        as well. We disagree. The question of whether Google\u2019s copying constituted
        infringement of a copyrighted work is \\\"distinct and separable\u201D from
        the question of whether Google can establish a fair use defense to its copying.\\n
        \  <em>\\n    See Gasoline Prods. Co. v. Champlin Refining Co.,\\n   </em>\\n
        \  283 U.S. 494, 500, 51 S.Ct. 513, 75 L.Ed. 1188 (1931) (\\\"Where the practice
        permits a partial new trial, it may not properly be resorted to unless it
        clearly appears that the issue to be retried is so distinct and separable
        from the others that a trial of it alone may be had without injustice.\u201D).
        Indeed, we have emphasized more than once in this opinion the extent to which
        the questions are separable, and the confusion and error caused when they
        are blurred. The issues are not \u201Cinterwoven\u201D and it would not create
        \\\"confusion and uncertainty\u201D to reinstate the infringement verdict
        and submit fair use to a different jury.\\n   <em>\\n    Id.\\n   </em>\\n
        \  We note, moreover, that, because Google only mentions this point in passing,
        with no development of an argument in support of it, under our case law, it
        has not been properly raised.\\n   <em>\\n    See Smith-Kline Beecham Corp.
        v. Apotex Corp.,\\n   </em>\\n   439 F.3d 1312, 1320 (Fed.Cir.2006) (when
        a party provides no developed argument on a point, we treat that argument
        as waived) (collecting cases).\\n  </p>\\n</div><div class=\\\"footnote\\\"
        id=\\\"fn18\\\" label=\\\"18\\\">\\n<a class=\\\"footnote\\\" href=\\\"#fn18_ref\\\">\\n
        \  18\\n  </a>\\n<p id=\\\"b1403-6\\\">\\n   . At least one recent district
        court decision has recognized uncertainty in Ninth Circuit law on this point.\\n
        \  <em>\\n    See Brocade Commc\u2019ns Sys. v. A10 Networks, Inc.,\\n   </em>\\n
        \  No. 10-cv-3428, 2013 WL 831528, at *4 n. 3, 2013 U.S. Dist. LEXIS 8113,
        at *33 (N.D.Cal. Jan. 10, 2013) (\\\"The Ninth Circuit has been unclear about
        whether the de minimis use doctrine serves as an affirmative defense under
        the Copyright Act's fair use exceptions or whether the doctrine merely highlights
        plaintiffs\u2019 obligation to show that \u2018the use must be significant
        enough to constitute infringement.\u2019 \u201D) (citing\\n   <em>\\n    Newton,\\n
        \  </em>\\n   388 F.3d at 1193;\\n   <em>\\n    Norse,\\n   </em>\\n   991
        F.2d at 566).\\n  </p>\\n</div></div></opinion>\",\"html_with_citations\":\"<pre
        class=\\\"inline\\\">  United States Court of Appeals\\n      for the Federal
        Circuit\\n                 ______________________\\n\\n              ORACLE
        AMERICA, INC.,\\n                 Plaintiff-Appellant,\\n\\n                            v.\\n\\n
        \                   GOOGLE INC.,\\n               Defendant-Cross-Appellant.\\n
        \               ______________________\\n\\n                    2013-1021,
        -1022\\n                 ______________________\\n\\n    Appeals from the
        United States District Court for the\\nNorthern District of California in
        No. 10-CV-3561, Judge\\nWilliam H. Alsup.\\n                ______________________\\n\\n
        \                 Decided: May 9, 2014\\n                 ______________________\\n\\n
        \    E. JOSHUA ROSENKRANZ, Orrick, Herrington & Sut-\\ncliffe LLP, of New
        York, New York, argued for plaintiff-\\nappellant. With him on the brief were
        MARK S. DAVIES,\\nANDREW D. SILVERMAN, KELLY M. DALEY; and ANNETTE L.\\nHURST,
        GABRIEL M. RAMSEY, and ELIZABETH C. MCBRIDE,\\nof San Francisco, California.
        Of counsel on the brief were\\nDORIAN E. DALEY, DEBORAH K. MILLER, MATTHEW\\nSARBORARIA,
        and ANDREW C. TEMKIN, Oracle America,\\nInc., of Redwood Shores, California;
        and DALE M.\\nCENDALI, DIANA M. TORRES, SEAN B. FERNANDES, and\\nJOSHUA L.
        SIMMONS, Kirkland & Ellis LLP, of New York,\\nNew York. Of counsel were SUSAN
        M. DAVIES, Kirkland &\\n\\f2                       ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\nEllis LLP, of New York, New York; MICHAEL A. JACOBS,\\nMorrison
        & Foerster LLP, of San Francisco, California;\\nand KENNETH A. KUWAYTI, of
        Palo Alto, California.\\n\\n    ROBERT A. VAN NEST, Keker & Van Nest LLP,
        of San\\nFrancisco, California, argued for defendant-cross-\\nappellant. With
        him on the brief were CHRISTA M.\\nANDERSON, STEVEN A. HIRSCH, MICHAEL S.
        KWUN, and\\nDANIEL E. JACKSON. Of counsel on the brief were IAN C.\\nBALLON
        and HEATHER MEEKER, Greenberg Traurig, LLP,\\nof East Palo Alto, California;
        RENNY HWANG, Google Inc.,\\nof Mountain View, California; and DARYL L. JOSEFFER
        and\\nBRUCE W. BABER, King & Spalding LLP, of Washington,\\nDC.\\n\\n    MARCIA
        B. PAUL, Davis Wright Tremaine LLP, of New\\nYork, New York, for amicus curiae
        Ralph Oman. With\\nher on the brief were LACY H. KOONCE, III and DEBORAH\\nA.
        ADLER.\\n\\n    WILLIAM A. RUDY, Lathrop & Gage LLP, of Kansas\\nCity, Missouri,
        for amici curiae Picture Archive Council of\\nAmerica, Inc., et al. With him
        on the brief were CAROLE\\nE. HANDLER and BRIANNA E. DAHLBERG, of Los Angeles,\\nCalifornia.\\n\\n
        \   GREGORY G. GARRE, Latham & Watkins, LLP, of\\nWashington, DC, for amici
        curiae Microsoft Corporation,\\net al. With him on the brief was LORI ALVINO
        MCGILL. Of\\ncounsel on the brief were PAUL T. DACIER, KRISHNENDU\\nGUPTA,
        EMC Corporation, of Hopkinton, Massachusetts;\\nand DOUGLAS LUFTMAN, NETAPP,
        Inc., of Sunnyvale,\\nCalifornia.\\n\\n    JARED BOBROW, Weil, Gotshal & Manges
        LLP, of\\nRedwood Shores, California, for amici curiae Eugene H.\\nSpafford,
        Ph.D., et al. With him on the brief was AARON\\nY. HUANG.\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                      3\\n\\n\\n\\n\\n    MATTHEW S.
        HELLMAN, Jenner & Block LLP, of Wash-\\nington, DC, for amicus curiae BSA/The
        Software Alliance.\\nWith him on the brief was PAUL M. SMITH.\\n\\n   STEVEN
        T. COTTREAU, Clifford Chance US LLP, of\\nWashington, DC, for amici curiae,
        Scott McNealy, et al.\\n\\n    MEREDITH JACOB, Program on Information Justice\\nand
        Intellectual Property, American University, Washing-\\nton College of Law,
        of Washington, DC, for amici curiae\\nIntellectual Property Law Professors.\\n\\n
        \   JULIE P. SAMUELS, Electronic Frontier Foundation, of\\nSan Francisco,
        California, for amici curiae Computer\\nScientists. With her on the brief
        was MICHAEL BARCLAY.\\nOf counsel on the brief was JASON M. SCHULTZ, NYU\\nTechnology
        Law and Policy Clinic, NYU School of Law, of\\nNew York, New York.\\n\\n    JONATHAN
        BAND, Jonathan Band PLLC, of Washing-\\nton, DC, filed a brief for amicus
        curiae Computer & Com-\\nmunications Industry Association. With him on the
        brief\\nwas MATTHEW SCHRUERS, Computer & Communications\\nIndustry Association,
        of Washington, DC.\\n\\n     CHAD RUBACK, The Ruback Law Firm, of Dallas,
        Tex-\\nas, filed a brief for amici curiae Rackspace US, Inc., et al.\\n\\n
        \   JENNIFER M. URBAN, Samuelson Law, Technology and\\nPublic Policy Clinic,
        U.C. Berkeley School of Law, of\\nBerkeley, California for amici curiae Software
        Innovators,\\net al.\\n                 ______________________\\n\\nBefore
        O\u2019MALLEY, PLAGER, and TARANTO, Circuit Judges.\\n\\f4                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nO\u2019MALLEY, Circuit Judge.\\n
        \   This copyright dispute involves 37 packages of com-\\nputer source code.
        The parties have often referred to\\nthese groups of computer programs, individually
        or collec-\\ntively, as \u201Capplication programming interfaces,\u201D or
        API\\npackages, but it is their content, not their name, that\\nmatters. The
        predecessor of Oracle America, Inc. (\u201COra-\\ncle\u201D) wrote these and
        other API packages in the Java\\nprogramming language, and Oracle licenses
        them on\\nvarious terms for others to use. Many software develop-\\ners use
        the Java language, as well as Oracle\u2019s API pack-\\nages, to write applications
        (commonly referred to as\\n\u201Capps\u201D) for desktop and laptop computers,
        tablets,\\nsmartphones, and other devices.\\n    Oracle filed suit against
        Google Inc. (\u201CGoogle\u201D) in the\\nUnited States District Court for
        the Northern District of\\nCalifornia, alleging that Google\u2019s Android
        mobile operat-\\ning system infringed Oracle\u2019s patents and copyrights.
        The\\njury found no patent infringement, and the patent claims\\nare not at
        issue in this appeal. As to the copyright claims,\\nthe parties agreed that
        the jury would decide infringe-\\nment, fair use, and whether any copying
        was de minimis,\\nwhile the district judge would decide copyrightability and\\nGoogle\u2019s
        equitable defenses. The jury found that Google\\ninfringed Oracle\u2019s copyrights
        in the 37 Java packages and\\na specific computer routine called \u201CrangeCheck,\u201D
        but\\nreturned a noninfringement verdict as to eight decompiled\\nsecurity
        files. The jury deadlocked on Google\u2019s fair use\\ndefense.\\n     After
        the jury verdict, the district court denied Ora-\\ncle\u2019s motion for judgment
        as a matter of law (\u201CJMOL\u201D)\\nregarding fair use as well as Google\u2019s
        motion for JMOL\\nwith respect to the rangeCheck files. Order on Motions\\nfor
        Judgment as a Matter of Law, Oracle Am., Inc. v.\\nGoogle Inc., No. 3:10-cv-3561
        (N.D. Cal. May 10, 2012),\\nECF No. 1119. Oracle also moved for JMOL of infringe-\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      5\\n\\n\\n\\nment with
        respect to the eight decompiled security files.\\nIn granting that motion,
        the court found that: (1) Google\\nadmitted to copying the eight files; and
        (2) no reasonable\\njury could find that the copying was de minimis. Oracle\\nAm.,
        Inc. v. Google Inc., No. C 10-3561, 2012 U.S. Dist.\\nLEXIS 66417 (N.D. Cal.
        May 11, 2012) (\u201COrder Granting\\nJMOL on Decompiled Files\u201D).\\n
        \   Shortly thereafter, the district court issued its deci-\\nsion on copyrightability,
        finding that the replicated ele-\\nments of the 37 API packages\u2014including
        the declaring\\ncode and the structure, sequence, and organization\u2014were\\nnot
        subject to copyright protection. Oracle Am., Inc. v.\\nGoogle Inc., </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span> <span
        class=\\\"reporter\\\">F. Supp. 2d</span> <span class=\\\"page\\\">974</span>
        </span><pre class=\\\"inline\\\">(N.D. Cal. 2012) (\u201CCopy-\\nrightability
        Decision\u201D). Accordingly, the district court\\nentered final judgment
        in favor of Google on Oracle\u2019s\\ncopyright infringement claims, except
        with respect to the\\nrangeCheck code and the eight decompiled files. Final\\nJudgment,
        Oracle Am., Inc. v. Google Inc., No. 3:10-cv-\\n3561 (N.D. Cal. June 20, 2012),
        ECF No. 1211. Oracle\\nappeals from the portion of the final judgment entered\\nagainst
        it, and Google cross-appeals from the portion of\\nthat same judgment entered
        in favor of Oracle as to the\\nrangeCheck code and eight decompiled files.\\n
        \    Because we conclude that the declaring code and the\\nstructure, sequence,
        and organization of the API packages\\nare entitled to copyright protection,
        we reverse the district\\ncourt\u2019s copyrightability determination with
        instructions to\\nreinstate the jury\u2019s infringement finding as to the
        37 Java\\npackages. Because the jury deadlocked on fair use, we\\nremand for
        further consideration of Google\u2019s fair use\\ndefense in light of this
        decision. With respect to Google\u2019s\\ncross-appeal, we affirm the district
        court\u2019s decisions:\\n(1) granting Oracle\u2019s motion for JMOL as to
        the eight\\ndecompiled Java files that Google copied into Android;\\nand (2)
        denying Google\u2019s motion for JMOL with respect to\\nthe rangeCheck function.
        Accordingly, we affirm-in-part,\\nreverse-in-part, and remand for further
        proceedings.\\n\\f6                      ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\n                      BACKGROUND\\n                   A. The
        Technology\\n    Sun Microsystems, Inc. (\u201CSun\u201D) developed the Java\\n\u201Cplatform\u201D
        for computer programming and released it in\\n1996. 1 The aim was to relieve
        programmers from the\\nburden of writing different versions of their computer\\nprograms
        for different operating systems or devices. \u201CThe\\nJava platform, through
        the use of a virtual machine,\\nenable[d] software developers to write programs
        that\\n[we]re able to run on different types of computer hard-\\nware without
        having to rewrite them for each different\\ntype.\u201D Copyrightability </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"antecedent_guess\\\">Decision,</span>
        <span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F. Supp.
        2d</span> at <span class=\\\"page\\\">977</span></span><pre class=\\\"inline\\\">.\\nWith
        Java, a software programmer could \u201Cwrite once, run\\nanywhere.\u201D\\n
        \   The Java virtual machine (\u201CJVM\u201D) plays a central role\\nin the
        overall Java platform. The Java programming\\nlanguage itself\u2014which includes
        words, symbols, and\\nother units, together with syntax rules for using them
        to\\ncreate instructions\u2014is the language in which a Java\\nprogrammer
        writes source code, the version of a program\\nthat is \u201Cin a human-readable
        language.\u201D </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        For the\\n</span><pre class=\\\"inline\\\">instructions to be executed, they
        must be converted (or\\ncompiled) into binary machine code (object code) consist-\\ning
        of 0s and 1s understandable by the particular compu-\\nting device. In the
        Java system, \u201Csource code is first\\nconverted into \u2018bytecode,\u2019
        an intermediate form, before it\\nis then converted into binary machine code
        by the Java\\nvirtual machine\u201D that has been designed for that device.\\n</pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> The
        Java </span><pre class=\\\"inline\\\">platform includes the \u201CJava development
        kit\\n(JDK), javac compiler, tools and utilities, runtime pro-\\ngrams, class
        libraries (API packages), and the Java virtu-\\nal machine.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> at
        977 </span><pre class=\\\"inline\\\">n.2.\\n\\n\\n\\n\\n    1   Oracle acquired
        Sun in 2010.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                      7\\n\\n\\n\\n
        \    Sun wrote a number of ready-to-use Java programs to\\nperform common
        computer functions and organized those\\nprograms into groups it called \u201Cpackages.\u201D
        These packag-\\nes, which are the application programming interfaces at\\nissue
        in this appeal, allow programmers to use the pre-\\nwritten code to build
        certain functions into their own\\nprograms, rather than write their own code
        to perform\\nthose functions from scratch. They are shortcuts. Sun\\ncalled
        the code for a specific operation (function) a \u201Cmeth-\\nod.\u201D It
        defined \u201Cclasses\u201D so that each class consists of\\nspecified methods
        plus variables and other elements on\\nwhich the methods operate. To organize
        the classes for\\nusers, then, it grouped classes (along with certain related\\n\u201Cinterfaces\u201D)
        into \u201Cpackages.\u201D See </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">id.</span> at 982 </span><pre class=\\\"inline\\\">(describing\\norganization:
        \u201C[e]ach package [i]s broken into classes and\\nthose in turn [are] broken
        into methods\u201D). The parties\\nhave not disputed the district court\u2019s
        analogy: Oracle\u2019s\\ncollection of API packages is like a library, each
        package\\nis like a bookshelf in the library, each class is like a book\\non
        the shelf, and each method is like a how-to chapter in a\\nbook. </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> at
        977</span><pre class=\\\"inline\\\">.\\n    The original Java Standard Edition
        Platform (\u201CJava\\nSE\u201D) included \u201Ceight packages of pre-written
        programs.\u201D\\n</pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 982. </span><pre class=\\\"inline\\\">The district court found, and Oracle
        concedes\\nto some extent, that three of those packages\u2014java.lang,\\njava.io,
        and java.util\u2014were \u201Ccore\u201D packages, meaning that\\nprogrammers
        using the Java language had to use them\\n\u201Cin order to make any worthwhile
        use of the language.\u201D\\n</pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> By 2008, </span><pre class=\\\"inline\\\">the
        Java platform had more than 6,000\\nmethods making up more than 600 classes
        grouped into\\n166 API packages. There are 37 Java API packages at\\nissue
        in this appeal, three of which are the core packages\\nidentified by the district
        court. 2 These packages contain\\n\\n\\n\\n    2  The 37 API packages involved
        in this appeal are:\\njava.awt.font, java.beans,   java.io,  java.lang,   ja-\\n\\f8
        \                       ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nthousands
        of individual elements, including classes,\\nsubclasses, methods, and interfaces.\\n
        \    Every package consists of two types of source code\u2014\\nwhat the parties
        call (1) declaring code; and\\n(2) implementing code. Declaring code is the
        expression\\nthat identifies the prewritten function and is sometimes\\nreferred
        to as the \u201Cdeclaration\u201D or \u201Cheader.\u201D As the dis-\\ntrict
        court explained, the \u201Cmain point is that this header\\nline of code introduces
        the method body and specifies very\\nprecisely the inputs, name and other
        functionality.\u201D </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at\\n979-80. </span><pre class=\\\"inline\\\">The expressions used by the
        programmer from\\nthe declaring code command the computer to execute the\\nassociated
        implementing code, which gives the computer\\nthe step-by-step instructions
        for carrying out the declared\\nfunction.\\n    To use the district court\u2019s
        example, one of the Java\\nAPI packages at issue is \u201Cjava.lang.\u201D
        Within that package\\nis a class called \u201Cmath,\u201D and within \u201Cmath\u201D
        there are\\nseveral methods, including one that is designed to find the\\nlarger
        of two numbers: \u201Cmax.\u201D The declaration for the\\n\u201Cmax\u201D
        method, as defined for integers, is: \u201Cpublic static int\\nmax(int x,
        int y),\u201D where the word \u201Cpublic\u201D means that the\\nmethod is
        generally accessible, \u201Cstatic\u201D means that no\\n\\n\\nva.lang.annotation,
        java.lang.ref, java.lang.reflect, ja-\\nva.net, java.nio, java.nio.channels,
        java.nio.channels.spi,\\njava.nio.charset, java.nio.charset.spi, java.security,
        ja-\\nva.security.acl, java.security.cert, java.security.interfaces,\\njava.security.spec,
        java.sql, java.text, java.util, ja-\\nva.util.jar,    java.util.logging,      java.util.prefs,
        \   ja-\\nva.util.regex,          java.util.zip,            javax.crypto,\\njavax.crypto.interfaces,
        \     javax.crypto.spec,     javax.net,\\njavax.net.ssl,             javax.security.auth,
        \            ja-\\nvax.security.auth.callback,         javax.security.auth.login,\\njavax.security.auth.x500,
        javax.security.cert, and ja-\\nvax.sql.\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                      9\\n\\n\\n\\nspecific instance of the class is needed
        to call the method,\\nthe first \u201Cint\u201D indicates that the method
        returns an inte-\\nger, and \u201Cint x\u201D and \u201Cint y\u201D are the
        two numbers (inputs)\\nbeing compared. Copyrightability Decision, </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span> <span
        class=\\\"reporter\\\">F. Supp.</span>\\n<span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at 980-82. A programmer calls the \u201Cmax\u201D
        method by\\ntyping the name of the method stated in the declaring\\ncode and
        providing unique inputs for the variables \u201Cx\u201D and\\n\u201Cy.\u201D
        The expressions used command the computer to\\nexecute the implementing code
        that carries out the opera-\\ntion of returning the larger number.\\n    Although
        Oracle owns the copyright on Java SE and\\nthe API packages, it offers three
        different licenses to those\\nwho want to make use of them. The first is the
        General\\nPublic License, which is free of charge and provides that\\nthe
        licensee can use the packages\u2014both the declaring and\\nimplementing code\u2014but
        must \u201Ccontribute back\u201D its inno-\\nvations to the public. This arrangement
        is referred to as\\nan \u201Copen source\u201D license. The second option
        is the Specifi-\\ncation License, which provides that the licensee can use\\nthe
        declaring code and organization of Oracle\u2019s API pack-\\nages but must
        write its own implementing code. The\\nthird option is the Commercial License,
        which is for\\nbusinesses that \u201Cwant to use and customize the full Java\\ncode
        in their commercial products and keep their code\\nsecret.\u201D Appellant
        Br. 14. Oracle offers the Commercial\\nLicense in exchange for royalties.
        To maintain Java\u2019s\\n\u201Cwrite once, run anywhere\u201D motto, the
        Specification and\\nCommercial Licenses require that the licensees\u2019 programs\\npass
        certain tests to ensure compatibility with the Java\\nplatform.\\n    The
        testimony at trial also revealed that Sun was li-\\ncensing a derivative version
        of the Java platform for use\\non mobile devices: the Java Micro Edition (\u201CJava
        ME\u201D).\\nOracle licensed Java ME for use on feature phones and\\nsmartphones.
        Sun/Oracle has never successfully devel-\\noped its own smartphone platform
        using Java.\\n\\f10                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\n
        \         B. Google\u2019s Accused Product: Android\\n    The accused product
        is Android, a software platform\\nthat was designed for mobile devices and
        competes with\\nJava in that market. Google acquired Android, Inc. in\\n2005
        as part of a plan to develop a smartphone platform.\\nLater that same year,
        Google and Sun began discussing\\nthe possibility of Google \u201Ctaking a
        license to use and to\\nadapt the entire Java platform for mobile devices.\u201D
        Copy-\\nrightability Decision, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F. Supp.</span>
        <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at 978.
        They also\\ndiscussed a \u201Cpossible co-development partnership deal\\nwith
        Sun under which Java technology would become an\\nopen-source part of the
        Android platform, adapted for\\nmobile devices.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> The parties </span><pre
        class=\\\"inline\\\">negotiated for months\\nbut were unable to reach an agreement.
        The point of\\ncontention between the parties was Google\u2019s refusal to\\nmake
        the implementation of its programs compatible with\\nthe Java virtual machine
        or interoperable with other Java\\nprograms. Because Sun/Oracle found that
        position to be\\nanathema to the \u201Cwrite once, run anywhere\u201D philosophy,\\nit
        did not grant Google a license to use the Java API\\npackages.\\n    When
        the parties\u2019 negotiations reached an impasse,\\nGoogle decided to use
        the Java programming language to\\ndesign its own virtual machine\u2014the
        Dalvik virtual ma-\\nchine (\u201CDalvik VM\u201D)\u2014and \u201Cto write
        its own implementa-\\ntions for the functions in the Java API that were key
        to\\nmobile devices.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> Google developed </span><pre class=\\\"inline\\\">the
        Android plat-\\nform, which grew to include 168 API packages\u201437 of\\nwhich
        correspond to the Java API packages at issue in\\nthis appeal.\\n    With
        respect to the 37 packages at issue, \u201CGoogle be-\\nlieved Java application
        programmers would want to find\\nthe same 37 sets of functionalities in the
        new Android\\nsystem callable by the same names as used in Java.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\nTo
        achieve </span><pre class=\\\"inline\\\">this result, Google copied the declaring
        source\\ncode from the 37 Java API packages verbatim, inserting\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                    11\\n\\n\\n\\nthat code
        into parts of its Android software. In doing so,\\nGoogle copied the elaborately
        organized taxonomy of all\\nthe names of methods, classes, interfaces, and
        packages\u2014\\nthe \u201Coverall system of organized names\u2014covering
        37\\npackages, with over six hundred classes, with over six\\nthousand methods.\u201D
        Copyrightability Decision, 872 F.\\nSupp. 2d at 999. The parties and district
        court referred\\nto this taxonomy of expressions as the \u201Cstructure, se-\\nquence,
        and organization\u201D or \u201CSSO\u201D of the 37 packages. It\\nis undisputed,
        however, that Google wrote its own imple-\\nmenting code, except with respect
        to: (1) the rangeCheck\\nfunction, which consisted of nine lines of code;
        and\\n(2) eight decompiled security files.\\n    As to rangeCheck, the court
        found that the Sun engi-\\nneer who wrote it later worked for Google and contributed\\ntwo
        files he created containing the rangeCheck function\u2014\\n\u201CTimsort.java\u201D
        and \u201CComparableTimsort\u201D\u2014to the Android\\nplatform. In doing
        so, the nine-line rangeCheck function\\nwas copied directly into Android.
        As to the eight decom-\\npiled files, the district court found that they were
        copied\\nand used as test files but \u201Cnever found their way into\\nAndroid
        or any handset.\u201D </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 983.\\n</span><pre class=\\\"inline\\\">     Google released the Android
        platform in 2007, and the\\nfirst Android phones went on sale the following
        year.\\nAlthough it is undisputed that certain Android software\\ncontains
        copies of the 37 API packages\u2019 declaring code at\\nissue, neither the
        district court nor the parties specify in\\nwhich programs those copies appear.
        Oracle indicated at\\noral argument, however, that all Android phones contain\\ncopies
        of the accused portions of the Android software.\\nOral Argument at 1:35,
        available at http://www.\\ncafc.uscourts.gov/oral-argument-recordings/2013-1021/all.\\nAndroid
        smartphones \u201Crapidly grew in popularity and\\nnow comprise a large share
        of the United States market.\u201D\\nCopyrightability Decision, </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span> <span
        class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at 978. Google\\nprovides the Android platform
        free of charge to\\nsmartphone manufacturers and receives revenue when\\n\\f12
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncustomers
        use particular functions on the Android phone.\\nAlthough Android uses the
        Java programming language,\\nit is undisputed that Android is not generally
        Java com-\\npatible. As Oracle explains, \u201CGoogle ultimately designed\\nAndroid
        to be incompatible with the Java platform, so\\nthat apps written for one
        will not work on the other.\u201D\\nAppellant Br. 29.\\n             C. Trial
        and Post-Trial Rulings\\n     Beginning on April 16, 2012, the district court
        and the\\njury\u2014on parallel tracks\u2014viewed documents and heard\\ntestimony
        from twenty-four witnesses on copyrightability,\\ninfringement, fair use,
        and Google\u2019s other defenses.\\nBecause the parties agreed the district
        court would decide\\ncopyrightability, the court instructed the jury to assume\\nthat
        the structure, sequence, and organization of the 37\\nAPI packages was copyrightable.
        And, the court informed\\nthe jury that Google conceded that it copied the
        declaring\\ncode used in the 37 packages verbatim. The court also\\ninstructed
        the jury that Google conceded copying the\\nrangeCheck function and the eight
        decompiled security\\nfiles, but that Google maintained that its use of those\\nlines
        of code was de minimis. See Final Charge to the\\nJury (Phase One), Oracle
        Am., Inc. v. Google Inc., 3:10-cv-\\n3561 (N.D. Cal. Apr. 30, 2012), ECF No.
        1018 at 14 (\u201CWith\\nrespect to the infringement issues concerning the\\nrangeCheck
        and other similar files, Google agrees that\\nthe accused lines of code and
        comments came from the\\ncopyrighted material but contends that the amounts\\ninvolved
        were so negligible as to be de minimis and thus\\nshould be excused.\u201D).\\n
        \   On May 7, 2012, the jury returned a verdict finding\\nthat Google infringed
        Oracle\u2019s copyright in the 37 Java\\nAPI packages and in the nine lines
        of rangeCheck code,\\nbut returned a noninfringement verdict as to eight de-\\ncompiled
        security files. The jury hung on Google\u2019s fair use\\ndefense.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                      13\\n\\n\\n\\n     The
        parties filed a number of post-trial motions, most\\nof which were ultimately
        denied. In relevant part, the\\ndistrict court denied Oracle\u2019s motion
        for JMOL regarding\\nfair use and Google\u2019s motion for JMOL as to the\\nrangeCheck
        files. Order on Motions for Judgment as a\\nMatter of Law, Oracle Am., Inc.
        v. Google Inc., No. 3:10-\\ncv-3561 (N.D. Cal. May 10, 2012), ECF No. 1119.
        The\\ndistrict court granted Oracle\u2019s motion for JMOL of in-\\nfringement
        as to the eight decompiled files, however. In\\nits order, the court explained
        that: (1) Google copied the\\nfiles in their entirety; (2) the trial testimony
        revealed that\\nthe use of those files was \u201Csignificant\u201D; and (3)
        no reason-\\nable jury could find the copying de minimis. Order Grant-\\ning
        JMOL on Decompiled Files, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">2012</span> <span class=\\\"reporter\\\">U.S. Dist. LEXIS</span>\\n<span
        class=\\\"page\\\">66417</span></span><pre class=\\\"inline\\\">, at *6.\\n
        \    On May 31, 2012, the district court issued the prima-\\nry decision at
        issue in this appeal, finding that the repli-\\ncated elements of the Java
        API packages\u2014including the\\ndeclarations and their structure, sequence,
        and organiza-\\ntion\u2014were not copyrightable. As to the declaring code,\\nthe
        court concluded that \u201Cthere is only one way to write\u201D\\nit, and
        thus the \u201Cmerger doctrine bars anyone from claim-\\ning exclusive copyright
        ownership of that expression.\u201D\\nCopyrightability Decision, </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span> <span
        class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at 998. The\\ncourt further found that the
        declaring code was not pro-\\ntectable because \u201Cnames and short phrases
        cannot be\\ncopyrighted.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> As such, </span><pre class=\\\"inline\\\">the
        court determined that\\n\u201Cthere can be no copyright violation in using
        the identical\\ndeclarations.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n    As to </span><pre class=\\\"inline\\\">the
        overall structure, sequence, and organiza-\\ntion of the Java API packages,
        the court recognized that\\n\u201Cnothing in the rules of the Java language
        . . . required\\nthat Google replicate the same groupings even if Google\\nwas
        free to replicate the same functionality.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 999.\\n</span><pre
        class=\\\"inline\\\">Therefore, the court determined that \u201COracle\u2019s
        best argu-\\nment . . . is that while no single name is copyrightable,\\nJava\u2019s
        overall system of organized names\u2014covering 37\\n\\f14                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\npackages, with over six hundred
        classes, with over six\\nthousand methods\u2014is a \u2018taxonomy\u2019 and,
        therefore, copy-\\nrightable.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n    Although it </span><pre class=\\\"inline\\\">acknowledged
        that the overall structure of\\nOracle\u2019s API packages is creative, original,
        and \u201Cresem-\\nbles a taxonomy,\u201D the district court found that it
        \u201Cis\\nnevertheless a command structure, a system or method of\\noperation\u2014a
        long hierarchy of over six thousand com-\\nmands to carry out pre-assigned
        functions\u201D\u2014that is not\\nentitled to copyright protection under
        Section 102(b) of\\nthe Copyright Act. </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> at 999-1000. </span><pre class=\\\"inline\\\">In
        reaching this\\nconclusion, the court emphasized that, \u201C[o]f the 166
        Java\\npackages, 129 were not violated in any way.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 1001.\\n</span><pre
        class=\\\"inline\\\">And, of the 37 Java API packages at issue, \u201C97 percent
        of\\nthe Android lines were new from Google and the remain-\\ning three percent
        were freely replicable under the merger\\nand names doctrines.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> On
        these </span><pre class=\\\"inline\\\">grounds, the court\\ndismissed Oracle\u2019s
        copyright claims, concluding that \u201Cthe\\nparticular elements replicated
        by Google were free for all\\nto use under the Copyright Act.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n
        \   On June </span><pre class=\\\"inline\\\">20, 2012, the district court
        entered final\\njudgment in favor of Google and against Oracle on its\\nclaim
        for copyright infringement, except with respect to\\nthe rangeCheck function
        and the eight decompiled files.\\nAs to rangeCheck and the decompiled files,
        the court\\nentered judgment for Oracle and against Google in the\\namount
        of zero dollars, per the parties\u2019 stipulation. Final\\nJudgment, Oracle
        Am., Inc. v. Google Inc., No. 3:10-cv-\\n3561 (N.D. Cal. June 20, 2012), ECF
        No. 1211. Oracle\\ntimely appealed from the portion of the district court\u2019s\\nfinal
        judgment entered against it and Google timely cross-\\nappealed with respect
        to rangeCheck and the eight de-\\ncompiled files.   Because this action included
        patent\\nclaims, we have jurisdiction pursuant to 28 U.S.C.\\n\xA7 1295(a)(1).\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                   15\\n\\n\\n\\n                         DISCUSSION\\n
        \                  I. ORACLE\u2019S APPEAL\\n    It is undisputed that the
        Java programming language\\nis open and free for anyone to use. Except to
        the limited\\nextent noted below regarding three of the API packages, it\\nis
        also undisputed that Google could have written its own\\nAPI packages using
        the Java language. Google chose not\\nto do that. Instead, it is undisputed
        that Google copied\\n7,000 lines of declaring code and generally replicated
        the\\noverall structure, sequence, and organization of Oracle\u2019s\\n37
        Java API packages. The central question before us is\\nwhether these elements
        of the Java platform are entitled\\nto copyright protection. The district
        court concluded that\\nthey are not, and Oracle challenges that determination
        on\\nappeal. Oracle also argues that the district court should\\nhave dismissed
        Google\u2019s fair use defense as a matter of\\nlaw.\\n    According to Google,
        however, the district court cor-\\nrectly determined that: (1) there was only
        one way to\\nwrite the Java method declarations and remain \u201Cinterop-\\nerable\u201D
        with Java; and (2) the organization and structure\\nof the 37 Java API packages
        is a \u201Ccommand structure\u201D\\nexcluded from copyright protection under
        Section 102(b).\\nGoogle also argues that, if we reverse the district court\u2019s\\ncopyrightability
        determination, we should direct the\\ndistrict court to retry its fair use
        defense.\\n    \u201CWhen the questions on appeal involve law and prece-\\ndent
        on subjects not exclusively assigned to the Federal\\nCircuit, the court applies
        the law which would be applied\\nby the regional circuit.\u201D Atari Games
        Corp. v. Nintendo of\\nAm., Inc., </pre><span class=\\\"citation\\\" data-id=\\\"537780\\\"><a
        href=\\\"/opinion/537780/atari-games-corporation-and-tengen-inc-plaintiffscross-appellants-v/\\\"><span
        class=\\\"volume\\\">897</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1572</span></a></span><pre class=\\\"inline\\\">, 1575
        (Fed. Cir. 1990). Copyright\\nissues are not exclusively assigned to the Federal
        Circuit.\\nSee 28 U.S.C. \xA7 1295. The parties agree that Ninth Cir-\\ncuit
        law applies and that, in the Ninth Circuit, whether\\nparticular expression
        is protected by copyright law is\\n\\f16                       ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\n\u201Csubject to de novo review.\u201D Ets-Hokin
        v. Skyy Spirits,\\nInc., </pre><span class=\\\"citation\\\" data-id=\\\"770331\\\"><a
        href=\\\"/opinion/770331/no-98-17072/\\\"><span class=\\\"volume\\\">225</span>
        <span class=\\\"reporter\\\">F.3d</span> <span class=\\\"page\\\">1068</span></a></span><pre
        class=\\\"inline\\\">, 1073 (9th Cir. 2000). 3\\n\\n\\n\\n\\n     3   The
        Supreme Court has not addressed whether\\ncopyrightability is a pure question
        of law or a mixed\\nquestion of law and fact, or whether, if it is a mixed\\nquestion
        of law and fact, the factual components of that\\ninquiry are for the court,
        rather than the jury. Relatedly,\\nit has not decided the standard of review
        that applies on\\nappeal. Ten years ago, before finding it unnecessary to\\ndecide
        whether copyrightability is a pure question of law\\nor a mixed question of
        law and fact, the Seventh Circuit\\nnoted that it had \u201Cfound only a handful
        of appellate cases\\naddressing the issue, and they are split.\u201D Gaiman
        v.\\nMcFarlane, </pre><span class=\\\"citation\\\" data-id=\\\"785344\\\"><a
        href=\\\"/opinion/785344/neil-gaiman-and-marvels-and-miracles-llc/\\\"><span
        class=\\\"volume\\\">360</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">644</span></a></span><pre class=\\\"inline\\\">, 648 (7th
        Cir. 2004). And,\\npanels of the Ninth Circuit have defined the respective\\nroles
        of the jury and the court differently where questions\\nof originality were
        at issue. Compare North Coast Indus.\\nv. Jason Maxwell, Inc., </pre><span
        class=\\\"citation\\\" data-id=\\\"588898\\\"><a href=\\\"/opinion/588898/north-coast-industries-v-jason-maxwell-inc/\\\"><span
        class=\\\"volume\\\">972</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1031</span></a></span><pre class=\\\"inline\\\">, 1035
        (9th Cir.\\n1992), with </pre><span class=\\\"citation\\\" data-id=\\\"770331\\\"><span
        class=\\\"antecedent_guess\\\">Ets-Hokin,</span> <a href=\\\"/opinion/770331/no-98-17072/\\\"><span
        class=\\\"volume\\\">225</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1073</span></a></span><pre class=\\\"inline\\\">.
        More recently,\\nseveral district courts within the Ninth Circuit have\\ntreated
        copyrightability as a question for only the court,\\nregardless of whether
        it is a pure question of law. See\\nStern v. Does, No. 09-1986, </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">2011</span> <span
        class=\\\"reporter\\\">U.S. Dist. LEXIS</span> <span class=\\\"page\\\">37735</span></span><pre
        class=\\\"inline\\\">,\\n*7 (C.D. Cal. Feb. 10, 2011); Jonathan Browning,
        Inc. v.\\nVenetian Casino Resort LLC, No. C 07-3983, 2009 U.S.\\nDist. LEXIS
        57525, at *2 (N.D. Cal. June 19, 2009); see\\nalso Pivot Point Int\u2019l,
        Inc. v. Charlene Prods., Inc., 932 F.\\nSupp. 220, 225 (N.D. Ill. 1996) (Easterbrook,
        J.) (citing to\\nMarkman v. Westview Instruments, Inc., </pre><span class=\\\"citation\\\"
        data-id=\\\"118019\\\"><a href=\\\"/opinion/118019/herbert-markman-and-positek-inc-v-westview-instruments-inc-and-althon/\\\"><span
        class=\\\"volume\\\">517</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">370</span>\\n</a></span><pre class=\\\"inline\\\">(1996),
        and concluding that whether works are copyright-\\nable is a question which
        the \u201Cjury has nothing to do\\nwith\u201D). We need not address any of
        these questions,\\nbecause the parties here agreed that the district court\\nwould
        decide copyrightability, and both largely agree that\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                     17\\n\\n\\n\\n    We are mindful
        that the application of copyright law\\nin the computer context is often a
        difficult task. See Lotus\\nDev. Corp. v. Borland Int\u2019l, Inc., </pre><span
        class=\\\"citation\\\" data-id=\\\"691310\\\"><a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">807</span></a></span><pre class=\\\"inline\\\">, 820 (1st
        Cir.\\n1995) (Boudin, J., concurring) (\u201CApplying copyright law to\\ncomputer
        programs is like assembling a jigsaw puzzle\\nwhose pieces do not quite fit.\u201D).
        On this record, however,\\nwe find that the district court failed to distinguish
        be-\\ntween the threshold question of what is copyrightable\u2014\\nwhich
        presents a low bar\u2014and the scope of conduct that\\nconstitutes infringing
        activity. The court also erred by\\nimporting fair use principles, including
        interoperability\\nconcerns, into its copyrightability analysis.\\n    For
        the reasons that follow, we conclude that the de-\\nclaring code and the structure,
        sequence, and organiza-\\ntion of the 37 Java API packages are entitled to
        copyright\\nprotection. Because there is an insufficient record as to\\nthe
        relevant fair use factors, we remand for further pro-\\nceedings on Google\u2019s
        fair use defense.\\n                    A. Copyrightability\\n    The Copyright
        Act provides protection to \u201Coriginal\\nworks of authorship fixed in any
        tangible medium of\\nexpression,\u201D including \u201Cliterary works.\u201D
        \         17 U.S.C.\\n\xA7 102(a). It is undisputed that computer programs\u2014\\ndefined
        in the Copyright Act as \u201Ca set of statements or\\ninstructions to be
        used directly or indirectly in a computer\\nin order to bring about a certain
        result,\u201D 17 U.S.C.\\n\xA7 101\u2014can be subject to copyright protection
        as \u201Cliterary\\nworks.\u201D See Atari Games Corp. v. Nintendo of Am.,
        Inc.,\\n</pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">832</span></a></span><pre class=\\\"inline\\\">, 838 (Fed.
        Cir. 1992) (\u201CAs literary works,\\ncopyright protection extends to computer
        programs.\u201D).\\nIndeed, the legislative history explains that \u201Cliterary\\nworks\u201D
        includes \u201Ccomputer programs to the extent that\\n\\n\\n\\nwe may undertake
        a review of that determination de\\nnovo.\\n\\f18                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nthey incorporate authorship in the
        programmer\u2019s expres-\\nsion of original ideas, as distinguished from
        the ideas\\nthemselves.\u201D H.R. Rep. No. 1476, 94th Cong., 2d Sess. 54,\\nreprinted
        in 1976 U.S.C.C.A.N. 5659, 5667.\\n    By statute, a work must be \u201Coriginal\u201D
        to qualify for\\ncopyright protection. 17 U.S.C. \xA7 102(a). This \u201Coriginality\\nrequirement
        is not particularly stringent,\u201D however. Feist\\nPubl\u2019ns, Inc. v.
        Rural Tel. Serv. Co., </pre><span class=\\\"citation\\\" data-id=\\\"112568\\\"><a
        href=\\\"/opinion/112568/feist-publications-inc-v-rural-telephone-service-co/\\\"><span
        class=\\\"volume\\\">499</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">340</span></a></span><pre class=\\\"inline\\\">, 358\\n(1991).
        \u201COriginal, as the term is used in copyright, means\\nonly that the work
        was independently created by the\\nauthor (as opposed to copied from other
        works), and that\\nit possesses at least some minimal degree of creativity.\u201D\\n</pre><span
        class=\\\"citation\\\" data-id=\\\"112568\\\"><a href=\\\"/opinion/112568/feist-publications-inc-v-rural-telephone-service-co/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 345.\\n</a></span><pre class=\\\"inline\\\">
        \   Copyright protection extends only to the expression of\\nan idea\u2014not
        to the underlying idea itself. Mazer v. Stein,\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"105200\\\"><a href=\\\"/opinion/105200/mazer-v-stein/\\\"><span
        class=\\\"volume\\\">347</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">201</span></a></span><pre class=\\\"inline\\\">, 217 (1954)
        (\u201CUnlike a patent, a copyright\\ngives no exclusive right to the art
        disclosed; protection is\\ngiven only to the expression of the idea\u2014not
        the idea\\nitself.\u201D). This distinction\u2014commonly referred to as the\\n\u201Cidea/expression
        dichotomy\u201D\u2014is codified in Section 102(b)\\nof the Copyright Act,
        which provides:\\n     In no case does copyright protection for an origi-\\n
        \    nal work of authorship extend to any idea, proce-\\n     dure, process,
        system, method of operation,\\n     concept, principle, or discovery, regardless
        of the\\n     form in which it is described, explained, illustrat-\\n     ed,
        or embodied in such work.\\n17 U.S.C. \xA7 102(b); see Golan v. Holder, </pre><span
        class=\\\"citation\\\" data-id=\\\"2959739\\\"><a href=\\\"/opinion/2959739/golan-v-holder/\\\"><span
        class=\\\"volume\\\">132</span> <span class=\\\"reporter\\\">S. Ct.</span>
        <span class=\\\"page\\\">873</span></a></span><pre class=\\\"inline\\\">,\\n890
        (2012) (\u201CThe idea/expression dichotomy is codified at\\n17 U.S.C. \xA7
        102(b).\u201D).\\n    The idea/expression dichotomy traces back to the Su-\\npreme
        Court\u2019s decision in Baker v. Selden, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">101</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">99</span></span><pre class=\\\"inline\\\">,\\n101 (1879).
        In Baker, the plaintiff Selden wrote and\\nobtained copyrights on a series
        of books setting out a new\\nsystem of bookkeeping. </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 100. </span><pre class=\\\"inline\\\">The
        books included an\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                     19\\n\\n\\n\\nintroductory
        essay explaining the system and blank forms\\nwith ruled lines and headings
        designed for use with that\\nsystem. </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> Baker published </span><pre class=\\\"inline\\\">account
        books employing a\\nsystem with similar forms, and Selden filed suit alleging\\ncopyright
        infringement. According to Selden, the \u201Cruled\\nlines and headings, given
        to illustrate the system, are a\\npart of the book\u201D and \u201Cno one
        can make or use similar\\nruled lines and headings, or ruled lines and headings\\nmade
        and arranged on substantially the same system,\\nwithout violating the copyright.\u201D
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 101.\\n</span><pre class=\\\"inline\\\">    The Supreme Court framed the
        issue on appeal in\\nBaker as \u201Cwhether the exclusive property in a system
        of\\nbook-keeping can be claimed, under the law of copyright,\\nby means of
        a book in which that system is explained.\u201D\\n</pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> In reversing </span><pre
        class=\\\"inline\\\">the circuit court\u2019s decision, the Court\\nconcluded
        that the \u201Ccopyright of a book on book-keeping\\ncannot secure the exclusive
        right to make, sell, and use\\naccount-books prepared upon the plan set forth
        in such\\nbook.\u201D </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 104. </span><pre class=\\\"inline\\\">Likewise, the \u201Ccopyright of
        a work on\\nmathematical science cannot give to the author an exclu-\\nsive
        right to the methods of operation which he pro-\\npounds.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> at
        103. </span><pre class=\\\"inline\\\">The Court found that, although the\\ncopyright
        protects the way Selden \u201Cexplained and de-\\nscribed a peculiar system
        of book-keeping,\u201D it does not\\nprevent others from using the system
        described therein.\\n</pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 104. </span><pre class=\\\"inline\\\">The Court further indicated that,
        if it is neces-\\nsary to use the forms Selden included in his books to\\nmake
        use of the accounting system, that use would not\\namount to copyright infringement.
        See </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">id.</span>
        (noting that\\n</span><pre class=\\\"inline\\\">the public has the right to
        use the account-books and that,\\n\u201Cin using the art, the ruled lines
        and headings of accounts\\nmust necessarily be used as incident to it\u201D).\\n
        \   Courts routinely cite Baker as the source of several\\nprinciples incorporated
        into Section 102(b) that relate to\\nthis appeal, including that: (1) copyright
        protection ex-\\ntends only to expression, not to ideas, systems, or process-\\nes;
        and (2) \u201Cthose elements of a computer program that\\n\\f20                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nare necessarily incidental to its
        function are . . . unpro-\\ntectable.\u201D See Computer Assocs. Int\u2019l
        v. Altai, </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span>\\n<span
        class=\\\"page\\\">693</span></a></span><pre class=\\\"inline\\\">, 704-05
        (2d Cir. 1992) (\u201CAltai\u201D) (discussing </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"antecedent_guess\\\">Baker,</span> <span class=\\\"volume\\\">101</span>\\n<span
        class=\\\"reporter\\\">U.S.</span> at <span class=\\\"page\\\">103-04</span></span><pre
        class=\\\"inline\\\">).\\n    It is well established that copyright protection
        can ex-\\ntend to both literal and non-literal elements of a computer\\nprogram.
        See </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">702</span></a></span><pre class=\\\"inline\\\">.
        The literal elements\\nof a computer program are the source code and object\\ncode.
        See Johnson Controls, Inc. v. Phoenix Control Sys.,\\nInc., </pre><span class=\\\"citation\\\"
        data-id=\\\"530034\\\"><a href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"volume\\\">886</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1173</span></a></span><pre class=\\\"inline\\\">, 1175
        (9th Cir. 1989). Courts have\\ndefined source code as \u201Cthe spelled-out
        program com-\\nmands that humans can read.\u201D Lexmark Int\u2019l, Inc.
        v.\\nStatic Control Components, Inc., </pre><span class=\\\"citation\\\" data-id=\\\"788158\\\"><a
        href=\\\"/opinion/788158/lexmark-international-inc-v-static-control-components-inc/\\\"><span
        class=\\\"volume\\\">387</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">522</span></a></span><pre class=\\\"inline\\\">, 533 (6th\\nCir.
        2004). Object code refers to \u201Cthe binary language\\ncomprised of zeros
        and ones through which the computer\\ndirectly receives its instructions.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">698</span></a></span><pre class=\\\"inline\\\">.\\nBoth
        source and object code \u201Care consistently held pro-\\ntected by a copyright
        on the program.\u201D Johnson </pre><span class=\\\"citation\\\" data-id=\\\"530034\\\"><span
        class=\\\"antecedent_guess\\\">Controls,</span>\\n<a href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"volume\\\">886</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">1175</span></a></span><pre class=\\\"inline\\\">;
        see also </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">702</span> </a></span><pre class=\\\"inline\\\">(\u201CIt
        is\\nnow well settled that the literal elements of computer\\nprograms, i.e.,
        their source and object codes, are the\\nsubject of copyright protection.\u201D).
        Google nowhere dis-\\nputes that premise. See, e.g., Oral Argument at 57:38.\\n
        \   The non-literal components of a computer program in-\\nclude, among other
        things, the program\u2019s sequence, struc-\\nture, and organization, as well
        as the program\u2019s user\\ninterface. Johnson </pre><span class=\\\"citation\\\"
        data-id=\\\"530034\\\"><span class=\\\"antecedent_guess\\\">Controls,</span>
        <a href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"volume\\\">886</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">1175</span></a></span><pre class=\\\"inline\\\">.
        As dis-\\ncussed below, whether the non-literal elements of a pro-\\ngram
        \u201Care protected depends on whether, on the\\nparticular facts of each
        case, the component in question\\nqualifies as an expression of an idea, or
        an idea itself.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"530034\\\"><a
        href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n    In this </a></span><pre class=\\\"inline\\\">case,
        Oracle claims copyright protection with\\nrespect to both: (1) literal elements
        of its API packages\u2014\\nthe 7,000 lines of declaring source code; and
        (2) non-literal\\nelements\u2014the structure, sequence, and organization
        of\\neach of the 37 Java API packages.\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                     21\\n\\n\\n\\n    The distinction between literal
        and non-literal aspects\\nof a computer program is separate from the distinction\\nbetween
        literal and non-literal copying. See </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span
        class=\\\"antecedent_guess\\\">Altai,</span> <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        at <span class=\\\"page\\\">701-02</span></a></span><pre class=\\\"inline\\\">.
        \u201CLiteral\u201D copying is verbatim copying of\\noriginal expression.
        \u201CNon-literal\u201D copying is \u201Cparaphrased\\nor loosely paraphrased
        rather than word for word.\u201D Lotus\\nDev. Corp. v. Borland Int\u2019l,
        </pre><span class=\\\"citation\\\" data-id=\\\"691310\\\"><a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">807</span></a></span><pre class=\\\"inline\\\">, 814 (1st
        Cir.\\n1995). Here, Google concedes that it copied the declaring\\ncode verbatim.
        Oracle explains that the lines of declaring\\ncode \u201Cembody the structure
        of each [API] package, just as\\nthe chapter titles and topic sentences represent
        the struc-\\nture of a novel.\u201D Appellant Br. 45. As Oracle explains,\\nwhen
        Google copied the declaring code in these packages\\n\u201Cit also copied
        the \u2018sequence and organization\u2019 of the\\npackages (i.e., the three-dimensional
        structure with all\\nthe chutes and ladders)\u201D employed by Sun/Oracle
        in the\\npackages. Appellant Br. 27. Oracle also argues that the\\nnonliteral
        elements of the API packages\u2014the structure,\\nsequence, and organization
        that led naturally to the\\nimplementing code Google created\u2014are entitled
        to protec-\\ntion. Oracle does not assert \u201Cliteral\u201D copying of the
        entire\\nSSO, but, rather, that Google literally copied the declar-\\ning
        code and then paraphrased the remainder of the SSO\\nby writing its own implementing
        code. It therefore as-\\nserts non-literal copying with respect to the entirety
        of the\\nSSO.\\n    At this stage, it is undisputed that the declaring code\\nand
        the structure and organization of the Java API pack-\\nages are original.
        The testimony at trial revealed that\\ndesigning the Java API packages was
        a creative process\\nand that the Sun/Oracle developers had a vast range of\\noptions
        for the structure and organization. In its copy-\\nrightability decision,
        the district court specifically found\\nthat the API packages are both creative
        and original, and\\nGoogle concedes on appeal that the originality require-\\nments
        are met. See Copyrightability Decision, 872 F.\\nSupp. 2d at 976 (\u201CThe
        overall name tree, of course, has\\n\\f22                       ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\ncreative elements . . . .\u201D); </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> at
        999 </span><pre class=\\\"inline\\\">(\u201CYes, it is creative.\\nYes, it
        is original.\u201D); Appellee Br. 5 (\u201CGoogle does not\\ndispute\u201D
        the district court\u2019s finding that \u201Cthe Java API\\nclears the low
        originality threshold.\u201D). The court found,\\nhowever, that neither the
        declaring code nor the SSO was\\nentitled to copyright protection under the
        Copyright Act.\\n    Although the parties agree that Oracle\u2019s API packages\\nmeet
        the originality requirement under Section 102(a),\\nthey disagree as to the
        proper interpretation and applica-\\ntion of Section 102(b). For its part,
        Google suggests that\\nthere is a two-step copyrightability analysis, wherein\\nSection
        102(a) grants copyright protection to original\\nworks, while Section 102(b)
        takes it away if the work has\\na functional component. To the contrary, however,
        Con-\\ngress emphasized that Section 102(b) \u201Cin no way enlarges\\nor
        contracts the scope of copyright protection\u201D and that its\\n\u201Cpurpose
        is to restate . . . that the basic dichotomy be-\\ntween expression and idea
        remains unchanged.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112568\\\"><span
        class=\\\"antecedent_guess\\\">Feist,</span>\\n<a href=\\\"/opinion/112568/feist-publications-inc-v-rural-telephone-service-co/\\\"><span
        class=\\\"volume\\\">499</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">356</span> </a></span><pre class=\\\"inline\\\">(quoting
        H.R. Rep. No. 1476, 94th Cong.,\\n2d Sess. 54, reprinted in 1976 U.S.C.C.A.N.
        5659, 5670).\\n\u201CSection 102(b) does not extinguish the protection accord-\\ned
        a particular expression of an idea merely because that\\nexpression is embodied
        in a method of operation.\u201D Mitel,\\nInc. v. Iqtel, Inc., </pre><span
        class=\\\"citation\\\" data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"volume\\\">124</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1366</span></a></span><pre class=\\\"inline\\\">, 1372
        (10th Cir. 1997).\\nSection 102(a) and 102(b) are to be considered collectively\\nso
        that certain expressions are subject to greater scrutiny.\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> In assessing </a></span><pre class=\\\"inline\\\">copyrightability,
        the district court is\\nrequired to ferret out apparent expressive aspects
        of a\\nwork and then separate protectable expression from\\n\u201Cunprotectable
        ideas, facts, processes, and methods of\\noperation.\u201D See </pre><span
        class=\\\"citation\\\" data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">Atari,</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">839</span></a></span><pre class=\\\"inline\\\">.\\n
        \   Of course, as with many things, in defining this task,\\nthe devil is
        in the details. Circuit courts have struggled\\nwith, and disagree over, the
        tests to be employed when\\nattempting to draw the line between what is protectable\\nexpression
        and what is not. Compare Whelan Assocs., Inc.\\nv. Jaslow Dental Lab., Inc.,
        </pre><span class=\\\"citation\\\" data-id=\\\"474509\\\"><a href=\\\"/opinion/474509/whelan-associates-inc-v-jaslow-dental-laboratory-inc-dentcom-inc/\\\"><span
        class=\\\"volume\\\">797</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1222</span></a></span><pre class=\\\"inline\\\">, 1236
        (3d Cir.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                     23\\n\\n\\n\\n1986)
        (everything not necessary to the purpose or function\\nof a work is expression),
        with </pre><span class=\\\"citation\\\" data-id=\\\"691310\\\"><span class=\\\"antecedent_guess\\\">Lotus,</span>
        <a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">815</span>\\n</a></span><pre class=\\\"inline\\\">(methods
        of operation are means by which a user operates\\nsomething and any words
        used to effectuate that opera-\\ntion are unprotected expression). When assessing
        wheth-\\ner the non-literal elements of a computer program\\nconstitute protectable
        expression, the Ninth Circuit has\\nendorsed an \u201Cabstraction-filtration-comparison\u201D
        test\\nformulated by the Second Circuit and expressly adopted\\nby several
        other circuits. Sega Enters. Ltd. v. Accolade,\\nInc., </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">977</span> <span class=\\\"reporter\\\">F.2d</span>
        <span class=\\\"page\\\">1510</span></span><pre class=\\\"inline\\\">, 1525
        (9th Cir. 1992) (\u201CIn our view, in\\nlight of the essentially utilitarian
        nature of computer\\nprograms, the Second Circuit\u2019s approach is an appropriate\\none.\u201D).
        This test rejects the notion that anything that\\nperforms a function is necessarily
        uncopyrightable. See\\n</pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><span
        class=\\\"antecedent_guess\\\">Mitel,</span> <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"volume\\\">124</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1372</span> </a></span><pre class=\\\"inline\\\">(rejecting
        the Lotus court\u2019s formu-\\nlation, and concluding that, \u201Calthough
        an element of a\\nwork may be characterized as a method of operation, that\\nelement
        may nevertheless contain expression that is\\neligible for copyright protection.\u201D).
        And it also rejects as\\nflawed the Whelan assumption that, once any separable\\nidea
        can be identified in a computer program everything\\nelse must be protectable
        expression, on grounds that more\\nthan one idea may be embodied in any particular
        pro-\\ngram. </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span
        class=\\\"antecedent_guess\\\">Altai,</span> <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">705-06</span></a></span><pre class=\\\"inline\\\">.\\n
        \    Thus, this test eschews bright line approaches and re-\\nquires a more
        nuanced assessment of the particular\\nprogram at issue in order to determine
        what expression is\\nprotectable and infringed. As the Second Circuit explains,\\nthis
        test has three steps. In the abstraction step, the\\ncourt \u201Cfirst break[s]
        down the allegedly infringed program\\ninto its constituent structural parts.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 706. </a></span><pre class=\\\"inline\\\">In
        the\\nfiltration step, the court \u201Csift[s] out all non-protectable\\nmaterial,\u201D
        including ideas and \u201Cexpression that is neces-\\nsarily incidental to
        those ideas.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><a
        href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"id_token\\\">Id.</span> In the </a></span><pre class=\\\"inline\\\">final
        step, the\\n\\f24                        ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\ncourt compares the remaining creative expression with\\nthe
        allegedly infringing program. 4\\n    In the second step, the court is first
        to assess whether\\nthe expression is original to the programmer or author.\\n</pre><span
        class=\\\"citation\\\" data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">Atari,</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">839</span></a></span><pre class=\\\"inline\\\">.
        The court must then determine\\nwhether the particular inclusion of any level
        of abstrac-\\ntion is dictated by considerations of efficiency, required by\\nfactors
        already external to the program itself, or taken\\nfrom the public domain\u2014all
        of which would render the\\nexpression unprotectable. </pre><span class=\\\"citation\\\"
        data-id=\\\"591021\\\"><a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"id_token\\\">Id.</span> These conclusions </a></span><pre class=\\\"inline\\\">are
        to be\\ninformed by traditional copyright principles of originality,\\nmerger,
        and scenes a faire. See </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><span
        class=\\\"antecedent_guess\\\">Mitel,</span> <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"volume\\\">124</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1372</span>\\n</a></span><pre class=\\\"inline\\\">(\u201CAlthough
        this core of expression is eligible for copyright\\nprotection, it is subject
        to the rigors of filtration analysis\\nwhich excludes from protection expression
        that is in the\\npublic domain, otherwise unoriginal, or subject to the\\ndoctrines
        of merger and scenes a faire.\u201D).\\n     In all circuits, it is clear
        that the first step is part of\\nthe copyrightability analysis and that the
        third is an\\ninfringement question. It is at the second step of this\\nanalysis
        where the circuits are in less accord. Some treat\\nall aspects of this second
        step as part of the copyrightabil-\\nity analysis, while others divide questions
        of originality\\nfrom the other inquiries, treating the former as a question\\nof
        copyrightability and the latter as part of the infringe-\\nment inquiry. Compare
        </pre><span class=\\\"citation\\\" data-id=\\\"788158\\\"><span class=\\\"antecedent_guess\\\">Lexmark,</span>
        <a href=\\\"/opinion/788158/lexmark-international-inc-v-static-control-components-inc/\\\"><span
        class=\\\"volume\\\">387</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">537-38</span>\\n</a></span><pre class=\\\"inline\\\">\\n\\n
        \    4   Importantly, this full analysis only applies where\\na copyright
        owner alleges infringement of the non-literal\\naspects of its work. Where
        \u201Cadmitted literal copying of a\\ndiscrete, easily-conceptualized portion
        of a work\u201D is at\\nissue\u2014as with Oracle\u2019s declaring code\u2014a
        court \u201Cneed not\\nperform a complete abstraction-filtration-comparison\\nanalysis\u201D
        and may focus the protectability analysis on the\\nfiltration stage, with
        attendant reference to standard\\ncopyright principles. </pre><span class=\\\"citation\\\"
        data-id=\\\"155289\\\"><span class=\\\"antecedent_guess\\\">Mitel,</span>
        <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"volume\\\">124</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1372</span></a></span><pre
        class=\\\"inline\\\">-73.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                   25\\n\\n\\n\\n(finding
        that the district court erred in assessing princi-\\nples of merger and scenes
        a faire in the infringement\\nanalysis, rather than as a component of copyrightability),\\nwith
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"antecedent_guess\\\">Kregos,</span>
        <span class=\\\"volume\\\">937</span> <span class=\\\"reporter\\\">F.2d</span>
        at <span class=\\\"page\\\">705</span> </span><pre class=\\\"inline\\\">(noting
        that the Second\\nCircuit has considered the merger doctrine \u201Cin determin-\\ning
        whether actionable infringement has occurred, rather\\nthan whether a copyright
        is valid\u201D); see also </pre><span class=\\\"citation\\\" data-id=\\\"788158\\\"><span
        class=\\\"antecedent_guess\\\">Lexmark,</span> <a href=\\\"/opinion/788158/lexmark-international-inc-v-static-control-components-inc/\\\"><span
        class=\\\"volume\\\">387</span>\\n<span class=\\\"reporter\\\">F.3d</span>
        at <span class=\\\"page\\\">557</span> </a></span><pre class=\\\"inline\\\">(Feikens,
        J., dissenting-in-part) (noting the\\ncircuit split and concluding that, where
        a court is as-\\nsessing merger of an expression with a method of opera-\\ntion,
        \u201CI would find the merger doctrine can operate only as\\na defense to
        infringement in that context, and as such has\\nno bearing on the question
        of copyrightability.\u201D). We need\\nnot assess the wisdom of these respective
        views because\\nthere is no doubt on which side of this circuit split the\\nNinth
        Circuit falls.\\n    In the Ninth Circuit, while questions regarding origi-\\nnality
        are considered questions of copyrightability, con-\\ncepts of merger and scenes
        a faire are affirmative\\ndefenses to claims of infringement. </pre><span
        class=\\\"citation\\\" data-id=\\\"770331\\\"><span class=\\\"antecedent_guess\\\">Ets-Hokin,</span>
        <a href=\\\"/opinion/770331/no-98-17072/\\\"><span class=\\\"volume\\\">225</span>
        <span class=\\\"reporter\\\">F.3d</span>\\nat <span class=\\\"page\\\">1082</span></a></span><pre
        class=\\\"inline\\\">; Satava v. Lowry, </pre><span class=\\\"citation\\\"
        data-id=\\\"781339\\\"><a href=\\\"/opinion/781339/richard-satava-an-individual-satava-art-glass-a-sole-proprietorship-v/\\\"><span
        class=\\\"volume\\\">323</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">805</span></a></span><pre class=\\\"inline\\\">, 810 n.3
        (9th Cir.\\n2003) (\u201CThe Ninth Circuit treats scenes a faire as a de-\\nfense
        to infringement rather than as a barrier to copy-\\nrightability.\u201D).
        The Ninth Circuit has acknowledged that\\n\u201Cthere is some disagreement
        among courts as to whether\\nthese two doctrines figure into the issue of
        copyrightabil-\\nity or are more properly defenses to infringement.\u201D
        Ets-\\n</pre><span class=\\\"citation\\\" data-id=\\\"770331\\\"><span class=\\\"antecedent_guess\\\">Hokin,</span>
        <a href=\\\"/opinion/770331/no-98-17072/\\\"><span class=\\\"volume\\\">225</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1082</span>
        </a></span><pre class=\\\"inline\\\">(citations omitted). It, nonethe-\\nless,
        has made clear that, in that circuit, these concepts\\nare to be treated as
        defenses to infringement. Id. (citing\\n</pre><span class=\\\"citation no-link\\\"><span
        class=\\\"antecedent_guess\\\">Kregos,</span> <span class=\\\"volume\\\">937</span>
        <span class=\\\"reporter\\\">F.2d</span> at <span class=\\\"page\\\">705</span>
        </span><pre class=\\\"inline\\\">(holding that the merger doctrine\\nrelates
        to infringement, not copyrightability); Reed-Union\\nCorp. v. Turtle Wax,
        Inc., </pre><span class=\\\"citation\\\" data-id=\\\"714044\\\"><a href=\\\"/opinion/714044/reed-union-corporation-v-turtle-wax-inc/\\\"><span
        class=\\\"volume\\\">77</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">909</span></a></span><pre class=\\\"inline\\\">, 914 (7th
        Cir. 1996)\\n(explaining why the doctrine of scenes a faire is separate\\nfrom
        the validity of a copyright)).\\n    With these principles in mind, we turn
        to the trial\\ncourt\u2019s analysis and judgment and to Oracle\u2019s objections\\n\\f26
        \                      ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nthereto.
        While the trial court mentioned the abstraction-\\nfiltration-comparison test
        when describing the develop-\\nment of relevant law, it did not purport to
        actually apply\\nthat test. Instead, it moved directly to application of\\nfamiliar
        principles of copyright law when assessing the\\ncopyrightability of the declaring
        code and interpreted\\nSection 102(b) to preclude copyrightability for any
        func-\\ntional element \u201Cessential for interoperability\u201D \u201Cregardless\\nof
        its form.\u201D Copyrightability Decision, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at\\n997.\\n
        \   Oracle asserts that all of the trial court\u2019s conclusions\\nregarding
        copyrightability are erroneous. Oracle argues\\nthat its Java API packages
        are entitled to protection\\nunder the Copyright Act because they are expressive
        and\\ncould have been written and organized in any number of\\nways to achieve
        the same functions. Specifically, Oracle\\nargues that the district court
        erred when it: (1) concluded\\nthat each line of declaring code is uncopyrightable
        be-\\ncause the idea and expression have merged; (2) found the\\ndeclaring
        code uncopyrightable because it employs short\\nphrases; (3) found all aspects
        of the SSO devoid of protec-\\ntion as a \u201Cmethod of operation\u201D under
        17 U.S.C. \xA7 102(b);\\nand (4) invoked Google\u2019s \u201Cinteroperability\u201D
        concerns in the\\ncopyrightability analysis. For the reasons explained\\nbelow,
        we agree with Oracle on each point.\\n                 1. Declaring Source
        Code\\n     First, Oracle argues that the district court erred in\\nconcluding
        that each line of declaring source code is\\ncompletely unprotected under
        the merger and short\\nphrases doctrines. Google responds that Oracle waived\\nits
        right to assert copyrightability based on the 7,000 lines\\nof declaring code
        by failing \u201Cto object to instructions and a\\nverdict form that effectively
        eliminated that theory from\\nthe case.\u201D Appellee Br. 67. Even if not
        waived, moreover,\\nGoogle argues that, because there is only one way to write\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                     27\\n\\n\\n\\nthe names
        and declarations, the merger doctrine bars\\ncopyright protection.\\n    We
        find that Oracle did not waive arguments based\\non Google\u2019s literal
        copying of the declaring code. Prior to\\ntrial, both parties informed the
        court that Oracle\u2019s copy-\\nright infringement claims included the declarations
        of the\\nAPI elements in the Android class library source code.\\nSee Oracle\u2019s
        Statement of Issues Regarding Copyright,\\nOracle Am., Inc. v. Google Inc.,
        No. 3:10-cv-3561 (N.D.\\nCal. Apr. 12, 2012), ECF No. 899-1, at 3 (Oracle
        accuses\\nthe \u201Cdeclarations of the API elements in the Android class\\nlibrary
        source code and object code that implements the\\n37 API packages\u201D of
        copyright infringement.); see also\\nGoogle\u2019s Proposed Statement of Issues
        Regarding Copy-\\nright, Oracle Am., Inc. v. Google Inc., No. 3:10-cv-3561\\n(N.D.
        Cal. Apr. 12, 2012), ECF No. 901, at 2 (Oracle\\naccuses the \u201Cdeclarations
        of the API elements in Android\\nclass library source code and object code
        that implements\\nthe 37 API packages.\u201D).\\n    While Google is correct
        that the jury instructions and\\nverdict form focused on the structure and
        organization of\\nthe packages, we agree with Oracle that there was no\\nneed
        for the jury to address copying of the declaring code\\nbecause Google conceded
        that it copied it verbatim.\\nIndeed, the district court specifically instructed
        the jury\\nthat \u201CGoogle agrees that it uses the same names and\\ndeclarations\u201D
        in Android. Final Charge to the Jury at 10.\\n    That the district court
        addressed the declaring code in\\nits post-jury verdict copyrightability decision
        further\\nconfirms that the verbatim copying of declaring code\\nremained
        in the case. The court explained that the \u201Ciden-\\ntical lines\u201D
        that Google copied into Android \u201Care those\\nlines that specify the names,
        parameters and functionali-\\nty of the methods and classes, lines called
        \u2018declarations\u2019 or\\n\u2018headers.\u2019\u201D Copyrightability
        Decision, </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span>
        <span class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at\\n979. The court specifically found that
        the declaring code\\n\\f28                      ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\nwas not entitled to copyright protection under the
        merger\\nand short phrases doctrines. We address each in turn.\\n                        a.
        Merger\\n    The merger doctrine functions as an exception to the\\nidea/expression
        dichotomy. It provides that, when there\\nare a limited number of ways to
        express an idea, the idea\\nis said to \u201Cmerge\u201D with its expression,
        and the expression\\nbecomes unprotected. </pre><span class=\\\"citation\\\"
        data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">707-08</span></a></span><pre class=\\\"inline\\\">.
        As\\nnoted, the Ninth Circuit treats this concept as an affirma-\\ntive defense
        to infringement. </pre><span class=\\\"citation\\\" data-id=\\\"770331\\\"><span
        class=\\\"antecedent_guess\\\">Ets-Hokin,</span> <a href=\\\"/opinion/770331/no-98-17072/\\\"><span
        class=\\\"volume\\\">225</span> <span class=\\\"reporter\\\">F.3d</span> at\\n<span
        class=\\\"page\\\">1082</span></a></span><pre class=\\\"inline\\\">. Accordingly,
        it appears that the district court\u2019s\\nmerger analysis is irrelevant
        to the question of whether\\nOracle\u2019s API packages are copyrightable
        in the first\\ninstance. Regardless of when the analysis occurs, we\\nconclude
        that merger does not apply on the record before\\nus.\\n    Under the merger
        doctrine, a court will not protect a\\ncopyrighted work from infringement
        if the idea contained\\ntherein can be expressed in only one way. Satava v.\\nLowry,
        </pre><span class=\\\"citation\\\" data-id=\\\"781339\\\"><a href=\\\"/opinion/781339/richard-satava-an-individual-satava-art-glass-a-sole-proprietorship-v/\\\"><span
        class=\\\"volume\\\">323</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">805</span></a></span><pre class=\\\"inline\\\">, 812 n.5
        (9th Cir. 2003). For com-\\nputer programs, \u201Cthis means that when specific
        [parts of\\nthe code], even though previously copyrighted, are the\\nonly
        and essential means of accomplishing a given task,\\ntheir later use by another
        will not amount to infringe-\\nment.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">708</span> </a></span><pre class=\\\"inline\\\">(citation
        omitted). We have\\nrecognized, however, applying Ninth Circuit law, that
        the\\n\u201Cunique arrangement of computer program expression . . .\\ndoes
        not merge with the process so long as alternate\\nexpressions are available.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">Atari,</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">840</span></a></span><pre class=\\\"inline\\\">.\\n
        \   In Atari, for example, Nintendo designed a program\u2014\\nthe 10NES\u2014to
        prevent its video game system from ac-\\ncepting unauthorized game </pre><span
        class=\\\"citation\\\" data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">cartridges.</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">836</span></a></span><pre class=\\\"inline\\\">.\\nNintendo
        \u201Cchose arbitrary programming instructions and\\narranged them in a unique
        sequence to create a purely\\narbitrary data stream\u201D which \u201Cserves
        as the key to unlock\\nthe NES.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><a
        href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 840. </a></span><pre class=\\\"inline\\\">Because
        Nintendo produced expert\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                     29\\n\\n\\n\\ntestimony
        \u201Cshowing a multitude of different ways to\\ngenerate a data stream which
        unlocks the NES console,\u201D\\nwe concluded that Nintendo\u2019s specific
        choice of code did\\nnot merge with the process. </pre><span class=\\\"citation\\\"
        data-id=\\\"591021\\\"><a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n     Here, the </a></span><pre class=\\\"inline\\\">district
        court found that, \u201Cno matter how\\ncreative or imaginative a Java method
        specification may\\nbe, the entire world is entitled to use the same method\\nspecification
        (inputs, outputs, parameters) so long as the\\nline-by-line implementations
        are different.\u201D Copyrighta-\\nbility Decision, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        998. In its analysis, the\\ncourt identified the method declaration as the
        idea and\\nfound that the implementation is the expression. </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n(\u201CThe method </span><pre
        class=\\\"inline\\\">specification is the idea. The method im-\\nplementation
        is the expression. No one may monopolize\\nthe idea.\u201D) (emphases in original).
        The court explained\\nthat, under the rules of Java, a programmer must use
        the\\nidentical \u201Cdeclaration or method header lines\u201D to \u201Cdeclare\\na
        method specifying the same functionality.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 976.\\n</span><pre
        class=\\\"inline\\\">Because the district court found that there was only
        one\\nway to write the declaring code for each of the Java pack-\\nages, it
        concluded that \u201Cthe merger doctrine bars anyone\\nfrom claiming exclusive
        copyright ownership\u201D of it. </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> at\\n998. </span><pre class=\\\"inline\\\">Accordingly,
        the court held there could be \u201Cno copy-\\nright violation in using the
        identical declarations.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n    Google agrees </span><pre class=\\\"inline\\\">with
        the district court that the imple-\\nmenting code is the expression entitled
        to protection\u2014not\\nthe declaring code. Indeed, at oral argument, counsel
        for\\nGoogle explained that, \u201Cit is not our position that none of\\nJava
        is copyrightable. Obviously, Google spent two and a\\nhalf years . . . to
        write from scratch all of the implement-\\ning code.\u201D Oral Argument at
        33:16. 5 Because it is undis-\\n\\n\\n    5  It is undisputed that Microsoft
        and Apple devel-\\noped mobile operating systems from scratch, using their\\nown
        array of software packages. When asked whether\\nGoogle could also copy all
        of Microsoft or Apple\u2019s declaring\\n\\f30                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nputed that Google wrote its own
        implementing code, the\\ncopyrightability of the precise language of that
        code is not\\nat issue on appeal. Instead, our focus is on the declaring\\ncode
        and structure of the API packages.\\n     On appeal, Oracle argues that the
        district court:\\n(1) misapplied the merger doctrine; and (2) failed to focus\\nits
        analysis on the options available to the original au-\\nthor. We agree with
        Oracle on both points. First, we\\nagree that merger cannot bar copyright
        protection for any\\nlines of declaring source code unless Sun/Oracle had
        only\\none way, or a limited number of ways, to write them. See\\n</pre><span
        class=\\\"citation\\\" data-id=\\\"781339\\\"><span class=\\\"antecedent_guess\\\">Satava,</span>
        <a href=\\\"/opinion/781339/richard-satava-an-individual-satava-art-glass-a-sole-proprietorship-v/\\\"><span
        class=\\\"volume\\\">323</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">812</span> </a></span><pre class=\\\"inline\\\">n.5
        (\u201CUnder the merger doctrine,\\ncourts will not protect a copyrighted
        work from infringe-\\nment if the idea underlying the copyrighted work can
        be\\nexpressed in only one way, lest there be a monopoly on\\nthe underlying
        idea.\u201D). The evidence showed that Oracle\\nhad \u201Cunlimited options
        as to the selection and arrange-\\nment of the 7000 lines Google copied.\u201D
        Appellant Br. 50.\\nUsing the district court\u2019s \u201Cjava.lang.Math.max\u201D
        example,\\nOracle explains that the developers could have called it\\nany
        number of things, including \u201CMath.maximum\u201D or\\n\u201CArith.larger.\u201D
        This was not a situation where Oracle was\\nselecting among preordained names
        and phrases to create\\nits packages. 6 As the district court recognized,
        moreover,\\n\\n\\n\\ncode\u2014codes that obviously differ from those at issue\\nhere\u2014counsel
        for Google responded: \u201CYes, but only the\\nstructure, sequence, and organization.
        Only the com-\\nmand structure\u2014what you need to access the functions.\\nYou\u2019d
        have to rewrite all the millions of lines of code in\\nApple or in Microsoft
        which is what Google did in An-\\ndroid.\u201D Oral Argument at 36:00.\\n
        \   6   In their brief as amici curiae in support of rever-\\nsal, Scott McNealy
        and Brian Sutphin\u2014both former\\nexecutives at Sun who were involved in
        the development\\nof the Java platform\u2014provide a detailed example of
        the\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    31\\n\\n\\n\\n\u201Cthe
        Android method and class names could have been\\ndifferent from the names
        of their counterparts in Java\\nand still have worked.\u201D Copyrightability
        Decision, 872 F.\\nSupp. 2d at 976. Because \u201Calternative expressions
        [we]re\\navailable,\u201D there is no merger. See </pre><span class=\\\"citation\\\"
        data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">Atari,</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">840</span></a></span><pre class=\\\"inline\\\">.\\n
        \   We further find that the district court erred in focus-\\ning its merger
        analysis on the options available to Google\\nat the time of copying. It is
        well-established that copy-\\nrightability and the scope of protectable activity
        are to be\\nevaluated at the time of creation, not at the time of in-\\nfringement.
        See Apple Computer, Inc. v. Formula Int\u2019l,\\nInc., </pre><span class=\\\"citation\\\"
        data-id=\\\"429815\\\"><a href=\\\"/opinion/429815/apple-computer-inc-v-formula-international-inc/\\\"><span
        class=\\\"volume\\\">725</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">521</span></a></span><pre class=\\\"inline\\\">, 524 (9th
        Cir. 1984) (quoting National\\nCommission on New Technological Uses of Copyrighted\\nWorks,
        Final Report at 21 (1979) (\u201CCONTU Report\u201D)\\n(recognizing that the
        Copyright Act was designed \u201Cto\\nprotect all works of authorship from
        the moment of their\\nfixation in any tangible medium of expression\u201D)).
        The\\nfocus is, therefore, on the options that were available to\\nSun/Oracle
        at the time it created the API packages. Of\\n\\n\\n\\ncreative choices involved
        in designing a Java package.\\nLooking at the \u201Cjava.text\u201D package,
        they explain that it\\n\u201Ccontains 25 classes, 2 interfaces, and hundreds
        of meth-\\nods to handle text, dates, numbers, and messages in a\\nmanner
        independent of natural human languages . . . .\u201D\\nBr. of McNealy and
        Sutphin 14-15. Java\u2019s creators had to\\ndetermine whether to include
        a java.text package in the\\nfirst place, how long the package would be, what
        elements\\nto include, how to organize that package, and how it\\nwould relate
        to other packages. </pre><span class=\\\"citation\\\" data-id=\\\"429815\\\"><a
        href=\\\"/opinion/429815/apple-computer-inc-v-formula-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 16. </a></span><pre class=\\\"inline\\\">This
        descrip-\\ntion of Sun\u2019s creative process is consistent with the evi-\\ndence
        presented at trial. See Appellant Br. 12-13 (citing\\ntestimony that it took
        years to write some of the Java\\npackages and that Sun/Oracle developers
        had to \u201Cwrestle\\nwith what functions to include in the package, which
        to\\nput in other packages, and which to omit entirely\u201D).\\n\\f32                       ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncourse, once Sun/Oracle created
        \u201Cjava.lang.Math.max,\u201D\\nprogrammers who want to use that particular
        package\\nhave to call it by that name. But, as the court acknowl-\\nedged,
        nothing prevented Google from writing its own\\ndeclaring code, along with
        its own implementing code, to\\nachieve the same result. In such circumstances,
        the\\nchosen expression simply does not merge with the idea\\nbeing expressed.
        7\\n    It seems possible that the merger doctrine, when\\nproperly analyzed,
        would exclude the three packages\\nidentified by the district court as core
        packages from the\\nscope of actionable infringing conduct. This would be
        so if\\nthe Java authors, at the time these packages were creat-\\ned, had
        only a limited number of ways to express the\\nmethods and classes therein
        if they wanted to write in the\\nJava language. In that instance, the idea
        may well be\\nmerged with the expression in these three packages. 8\\n\\n\\n\\n
        \    7  The district court did not find merger with respect\\nto the structure,
        sequence, and organization of Oracle\u2019s\\nJava API packages. Nor could
        it, given the court\u2019s recog-\\nnition that there were myriad ways in
        which the API\\npackages could have been organized. Indeed, the court\\nfound
        that the SSO is original and that \u201Cnothing in the\\nrules of the Java
        language . . . required that Google\\nreplicate the same groupings.\u201D
        Copyrightability Decision,\\n</pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F. Supp.</span>
        <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at 999.
        As discussed below, however, the\\ncourt nonetheless found that the SSO is
        an uncopyrighta-\\nble \u201Cmethod of operation.\u201D\\n     8  At oral
        argument, counsel for Oracle was asked\\nwhether we should view the three
        core packages \u201Cdiffer-\\nently vis-\xE0-vis the concept of a method of
        operation than\\nthe other packages.\u201D See Oral Argument at 7:43. He\\nresponded:
        \u201CI think not your Honor. I would view them\\ndifferently with respect
        to fair use . . . . It\u2019s not that they\\nare more basic. It\u2019s that
        there are just several methods,\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.
        \                     33\\n\\n\\n\\nGoogle did not present its merger argument
        in this way\\nbelow and does not do so here, however. Indeed, Google\\ndoes
        not try to differentiate among the packages for\\npurposes of its copyrightability
        analysis and does not\\nappeal the infringement verdict as to the packages.
        For\\nthese reasons, we reject the trial court\u2019s merger analysis.\\n
        \                      b. Short Phrases\\n     The district court also found
        that Oracle\u2019s declaring\\ncode consists of uncopyrightable short phrases.
        Specifical-\\nly, the court concluded that, \u201Cwhile the Android method\\nand
        class names could have been different from the\\nnames of their counterparts
        in Java and still have\\nworked, copyright protection never extends to names
        or\\nshort phrases as a matter of law.\u201D Copyrightability Deci-\\nsion,
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span>
        <span class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at 976.\\n    The district court is correct
        that \u201C[w]ords and short\\nphrases such as names, titles, and slogans\u201D
        are not sub-\\nject to copyright protection. 37 C.F.R. \xA7 202.1(a). The\\ncourt
        failed to recognize, however, that the relevant\\nquestion for copyrightability
        purposes is not whether the\\nwork at issue contains short phrases\u2014as
        literary works\\noften do\u2014but, rather, whether those phrases are creative.\\nSee
        Soc\u2019y of Holy Transfiguration Monastery, Inc. v.\\n\\n\\n\\nthat is,
        routines, within just those three packages that are\\nnecessary to \u2018speak
        the Java language.\u2019 Nothing in the\\nother thirty-four packages is necessary
        in order to speak\\nin Java, so to speak.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> Counsel conceded, </span><pre
        class=\\\"inline\\\">however,\\nthat this issue \u201Cmight go to merger.
        It might go to the\\nquestion whether someone\u2014since we conceded that
        it\u2019s\\nokay to use the language\u2014if it\u2019s alright to use the
        lan-\\nguage that there are certain things that the original\\ndevelopers
        had to say in order to use that language,\\narguably, although I still think
        it\u2019s really a fair use analy-\\nsis.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n\\f34                      ORACLE
        </span><pre class=\\\"inline\\\">AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nGregory,
        </pre><span class=\\\"citation\\\" data-id=\\\"805822\\\"><a href=\\\"/opinion/805822/society-of-the-holy-transfiguration-monastery-inc-v-archbishop-gregory/\\\"><span
        class=\\\"volume\\\">689</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">29</span></a></span><pre class=\\\"inline\\\">, 52 (1st
        Cir. 2012) (noting that \u201Cnot\\nall short phrases will automatically be
        deemed uncopy-\\nrightable\u201D); see also 1 Melville B. Nimmer & David Nim-\\nmer,
        Nimmer on Copyright \xA7 2.01[B] (2013) (\u201C[E]ven a\\nshort phrase may
        command copyright protection if it\\nexhibits sufficient creativity.\u201D).
        And, by dissecting the\\nindividual lines of declaring code at issue into
        short\\nphrases, the district court further failed to recognize that\\nan
        original combination of elements can be copyrightable.\\nSee Softel, Inc.
        v. Dragon Med. & Scientific Commc\u2019ns,\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"743588\\\"><a href=\\\"/opinion/743588/softel-inc-v-dragon-medical-and-scientific-communications-inc-dragon/\\\"><span
        class=\\\"volume\\\">118</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">955</span></a></span><pre class=\\\"inline\\\">, 964 (2d
        Cir. 1997) (noting that, in Feist,\\n\u201Cthe Court made quite clear that
        a compilation of non-\\nprotectible elements can enjoy copyright protection
        even\\nthough its constituent elements do not\u201D).\\n     By analogy, the
        opening of Charles Dickens\u2019 A Tale of\\nTwo Cities is nothing but a string
        of short phrases. Yet no\\none could contend that this portion of Dickens\u2019
        work is\\nunworthy of copyright protection because it can be broken\\ninto
        those shorter constituent components. The question\\nis not whether a short
        phrase or series of short phrases\\ncan be extracted from the work, but whether
        the manner\\nin which they are used or strung together exhibits creativ-\\nity.\\n
        \   Although the district court apparently focused on in-\\ndividual lines
        of code, Oracle is not seeking copyright\\nprotection for a specific short
        phrase or word. Instead,\\nthe portion of declaring code at issue is 7,000
        lines, and\\nGoogle\u2019s own \u201CJava guru\u201D conceded that there can
        be\\n\u201Ccreativity and artistry even in a single method declara-\\ntion.\u201D
        Joint Appendix (\u201CJ.A.\u201D) 20,970. Because Oracle\\n\u201Cexercised
        creativity in the selection and arrangement\u201D of\\nthe method declarations
        when it created the API packages\\nand wrote the relevant declaring code,
        they contain pro-\\ntectable expression that is entitled to copyright protec-\\ntion.
        See </pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><span class=\\\"antecedent_guess\\\">Atari,</span>
        <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">840</span></a></span><pre class=\\\"inline\\\">;
        see also 17 U.S.C. \xA7\xA7 101,\\n103 (recognizing copyright protection for
        \u201Ccompilations\u201D\\nwhich are defined as work that is \u201Cselected,
        coordinated,\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    35\\n\\n\\n\\nor
        arranged in such a way that the resulting work as a\\nwhole constitutes an
        original work of authorship\u201D). Ac-\\ncordingly, we conclude that the
        district court erred in\\napplying the short phrases doctrine to find the
        declaring\\ncode not copyrightable.\\n                       c. Scenes a Faire\\n
        \    The scenes a faire doctrine, which is related to the\\nmerger doctrine,
        operates to bar certain otherwise crea-\\ntive expression from copyright protection.
        Apple Comput-\\ner, Inc. v. Microsoft Corp., </pre><span class=\\\"citation\\\"
        data-id=\\\"678566\\\"><a href=\\\"/opinion/678566/apple-computer-inc-v-microsoft-corp/\\\"><span
        class=\\\"volume\\\">35</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1435</span></a></span><pre class=\\\"inline\\\">, 1444
        (9th Cir.\\n1994). It provides that \u201Cexpressive elements of a work of\\nauthorship
        are not entitled to protection against in-\\nfringement if they are standard,
        stock, or common to a\\ntopic, or if they necessarily follow from a common
        theme\\nor setting.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><span
        class=\\\"antecedent_guess\\\">Mitel,</span> <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"volume\\\">124</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1374</span></a></span><pre class=\\\"inline\\\">.
        Under this doctrine,\\n\u201Cwhen certain commonplace expressions are indispensable\\nand
        naturally associated with the treatment of a given\\nidea, those expressions
        are treated like ideas and there-\\nfore [are] not protected by copyright.\u201D
        Swirsky v. Carey,\\n</pre><span class=\\\"citation\\\" data-id=\\\"787063\\\"><a
        href=\\\"/opinion/787063/seth-swirsky-an-individual-dba-julians-dad-warryn-campbell-v-mariah/\\\"><span
        class=\\\"volume\\\">376</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">841</span></a></span><pre class=\\\"inline\\\">, 850 (9th
        Cir. 2004). In the computer con-\\ntext, \u201Cthe scene a faire doctrine
        denies protection to pro-\\ngram elements that are dictated by external factors
        such\\nas \u2018the mechanical specifications of the computer on which\\na
        particular program is intended to run\u2019 or \u2018widely accept-\\ned programming
        practices within the computer industry.\u2019\u201D\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"743588\\\"><span class=\\\"antecedent_guess\\\">Softel,</span>
        <a href=\\\"/opinion/743588/softel-inc-v-dragon-medical-and-scientific-communications-inc-dragon/\\\"><span
        class=\\\"volume\\\">118</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">963</span> </a></span><pre class=\\\"inline\\\">(citation
        omitted).\\n    The trial court rejected Google\u2019s reliance on the scenes\\na
        faire doctrine. It did so in a footnote, finding that\\nGoogle had failed
        to present evidence to support the claim\\nthat either the grouping of methods
        within the classes or\\nthe code chosen for them \u201Cwould be so expected
        and\\ncustomary as to be permissible under the scenes a faire\\ndoctrine.\u201D
        Copyrightability Decision, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F. Supp.</span>
        <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at\\n999
        n.9. Specifically, the trial court found that \u201Cit is\\nimpossible to
        say on this record that all of the classes and\\ntheir contents are typical
        of such classes and, on this\\n\\f36                       ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nrecord, this order rejects Google\u2019s
        global argument based\\non scenes a faire.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n     On appeal, </span><pre
        class=\\\"inline\\\">Google refers to scenes a faire concepts\\nbriefly, as
        do some amici, apparently contending that,\\nbecause programmers have become
        accustomed to and\\ncomfortable using the groupings in the Java API packag-\\nes,
        those groupings are so commonplace as to be indispen-\\nsable to the expression
        of an acceptable programming\\nplatform. As such, the argument goes, they
        are so associ-\\nated with the \u201Cidea\u201D of what the packages are accomplish-\\ning
        that they should be treated as ideas rather than\\nexpression. See Br. of
        Amici Curiae Rackspace US, Inc.,\\net al. at 19-22.\\n    Google cannot rely
        on the scenes a faire doctrine as an\\nalternative ground upon which we might
        affirm the\\ncopyrightability judgment of the district court. This is so\\nfor
        several reasons. First, as noted, like merger, in the\\nNinth Circuit, the
        scenes a faire doctrine is a component\\nof the infringement analysis. \u201C[S]imilarity
        of expression,\\nwhether literal or non-literal, which necessarily results\\nfrom
        the fact that the common idea is only capable of\\nexpression in more or less
        stereotyped form, will preclude\\na finding of actionable similarity.\u201D
        4 Nimmer on Copy-\\nright \xA7 13.03[B][3]. Thus, the expression is not excluded\\nfrom
        copyright protection; it is just that certain copying is\\nforgiven as a necessary
        incident of any expression of the\\nunderlying idea. See </pre><span class=\\\"citation\\\"
        data-id=\\\"781339\\\"><span class=\\\"antecedent_guess\\\">Satava,</span>
        <a href=\\\"/opinion/781339/richard-satava-an-individual-satava-art-glass-a-sole-proprietorship-v/\\\"><span
        class=\\\"volume\\\">323</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">810</span> </a></span><pre class=\\\"inline\\\">n.3
        (\u201CThe\\nNinth Circuit treats scenes a faire as a defense to in-\\nfringement
        rather than as a barrier to copyrightability.\u201D).\\n    Second, Google
        has not objected to the trial court\u2019s\\nconclusion that Google failed
        to make a sufficient factual\\nrecord to support its contention that the groupings
        and\\ncode chosen for the 37 Java API packages were driven by\\nexternal factors
        or premised on features that were either\\ncommonplace or essential to the
        idea being expressed.\\nGoogle provides no record citations indicating that
        such a\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                     37\\n\\n\\n\\nshowing
        was made and does not contend that the trial\\ncourt erred when it expressly
        found it was not. Indeed,\\nGoogle does not even make this argument with respect
        to\\nthe core packages.\\n     Finally, Google\u2019s reliance on the doctrine
        below and\\nthe amici reference to it here are premised on a funda-\\nmental
        misunderstanding of the doctrine. Like merger,\\nthe focus of the scenes a
        faire doctrine is on the circum-\\nstances presented to the creator, not the
        copier. See </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><span
        class=\\\"antecedent_guess\\\">Mitel,</span>\\n<a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"volume\\\">124</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1375</span> </a></span><pre class=\\\"inline\\\">(finding
        error to the extent the trial\\ncourt discussed \u201Cwhether external factors
        such as market\\nforces and efficiency considerations justified Iqtel\u2019s
        copy-\\ning of the command codes\u201D). The court\u2019s analytical focus\\nmust
        be upon the external factors that dictated Sun\u2019s\\nselection of classes,
        methods, and code\u2014not upon what\\nGoogle encountered at the time it chose
        to copy those\\ngroupings and that code. See </pre><span class=\\\"citation\\\"
        data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"id_token\\\">id.</span> \u201C[T]he scenes </a></span><pre class=\\\"inline\\\">a
        faire\\ndoctrine identifies and excludes from protection against\\ninfringement
        expression whose creation \u2018flowed naturally\\nfrom considerations external
        to the author\u2019s creativity.\u2019\u201D\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> (quoting Nimmer </a></span><pre class=\\\"inline\\\">\xA7
        13.03[F][3], at 13-131 (1997)). It is\\nthis showing the trial court found
        Google failed to make,\\nand Google cites to nothing in the record which indicates\\notherwise.\\n
        \    For these reasons, the trial court was correct to con-\\nclude that the
        scenes a faire doctrine does not affect the\\ncopyrightability of either the
        declaring code in, or the SSO\\nof, the Java API packages at issue.\\n      2.
        The Structure, Sequence, and Organization\\n                  of the API Packages\\n
        \   The district court found that the SSO of the Java API\\npackages is creative
        and original, but nevertheless held\\nthat it is a \u201Csystem or method
        of operation . . . and, there-\\nfore, cannot be copyrighted\u201D under 17
        U.S.C. \xA7 102(b).\\nCopyrightability Decision, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        976-77. In\\nreaching this conclusion, the district court seems to have\\n\\f38
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nrelied
        upon language contained in a First Circuit decision:\\nLotus Development Corp.
        v. Borland International, Inc.,\\n</pre><span class=\\\"citation\\\" data-id=\\\"691310\\\"><a
        href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">807</span> </a></span><pre class=\\\"inline\\\">(1st Cir.
        1995), aff\u2019d without opinion by\\nequally divided court, </pre><span
        class=\\\"citation\\\" data-id=\\\"117991\\\"><a href=\\\"/opinion/117991/lotus-development-corp-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">516</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">233</span> </a></span><pre class=\\\"inline\\\">(1996).
        9\\n    In Lotus, it was undisputed that the defendant copied\\nthe menu command
        hierarchy and interface from Lotus 1-\\n2-3, a computer spreadsheet program
        \u201Cthat enables users\\nto perform accounting functions electronically
        on a com-\\n</pre><span class=\\\"citation\\\" data-id=\\\"691310\\\"><span
        class=\\\"antecedent_guess\\\">puter.\u201D</span> <a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">809</span></a></span><pre class=\\\"inline\\\">.
        The menu command hierarchy\\nreferred to a series of commands\u2014such as
        \u201CCopy,\u201D \u201CPrint,\u201D\\nand \u201CQuit\u201D\u2014which were
        arranged into more than 50\\nmenus and submenus. </pre><span class=\\\"citation\\\"
        data-id=\\\"691310\\\"><a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> Although the </a></span><pre class=\\\"inline\\\">defendant
        did\\nnot copy any Lotus source code, it copied the menu com-\\nmand hierarchy
        into its rival program. The question\\nbefore the court was \u201Cwhether
        a computer menu command\\nhierarchy is copyrightable subject matter.\u201D
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n
        \   Although it </span><pre class=\\\"inline\\\">accepted the district court\u2019s
        finding that\\nLotus developers made some expressive choices in select-\\ning
        and arranging the command terms, the First Circuit\\nfound that the command
        hierarchy was not copyrightable\\nbecause, among other things, it was a \u201Cmethod
        of opera-\\ntion\u201D under Section 102(b). In reaching this conclusion,\\nthe
        court defined a \u201Cmethod of operation\u201D as \u201Cthe means\\nby which
        a person operates something, whether it be a\\ncar, a food processor, or a
        computer.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"691310\\\"><a
        href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 815. </a></span><pre class=\\\"inline\\\">10
        Be-\\ncause the Lotus menu command hierarchy provided \u201Cthe\\nmeans by
        which users control and operate Lotus 1-2-3,\u201D it\\n\\n\\n     9   The
        Supreme Court granted certiorari in Lotus,\\nbut, shortly after oral argument,
        the Court announced\\nthat it was equally divided and that Justice Stevens
        took\\nno part in the consideration or decision of the case. The\\nCourt therefore
        left the First Circuit\u2019s decision undis-\\nturbed. See </pre><span class=\\\"citation\\\"
        data-id=\\\"117991\\\"><span class=\\\"antecedent_guess\\\">Lotus,</span>
        <a href=\\\"/opinion/117991/lotus-development-corp-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">516</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">233-34</span></a></span><pre class=\\\"inline\\\">.\\n
        \    10  The Lotus majority cited no authority for this def-\\ninition of
        \u201Cmethod of operation.\u201D\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.
        \                    39\\n\\n\\n\\nwas deemed unprotectable. </pre><span class=\\\"citation\\\"
        data-id=\\\"117991\\\"><a href=\\\"/opinion/117991/lotus-development-corp-v-borland-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> For example, </a></span><pre class=\\\"inline\\\">if
        users\\nwanted to copy material, they would use the \u201CCopy\u201D\\ncommand
        and the command terms would tell the comput-\\ner what to do. According to
        the Lotus court, the \u201Cfact that\\nLotus developers could have designed
        the Lotus menu\\ncommand hierarchy differently is immaterial to the\\nquestion
        of whether it is a \u2018method of operation.\u2019\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"117991\\\"><a href=\\\"/opinion/117991/lotus-development-corp-v-borland-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at\\n816. </a></span><pre class=\\\"inline\\\">(noting
        that \u201Cour initial inquiry is not whether the\\nLotus menu command hierarchy
        incorporates any expres-\\nsion\u201D). The court further indicated that,
        \u201C[i]f specific\\nwords are essential to operating something, then they
        are\\npart of a \u2018method of operation\u2019 and, as such, are unpro-\\ntectable.\u201D
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>\\n
        \   On appeal, </span><pre class=\\\"inline\\\">Oracle argues that the district
        court\u2019s reli-\\nance on Lotus is misplaced because it is distinguishable\\non
        its facts and is inconsistent with Ninth Circuit law.\\nWe agree. First, while
        the defendant in Lotus did not\\ncopy any of the underlying code, Google concedes
        that it\\ncopied portions of Oracle\u2019s declaring source code verbatim.\\nSecond,
        the Lotus court found that the commands at issue\\nthere (copy, print, etc.)
        were not creative, but it is undis-\\nputed here that the declaring code and
        the structure and\\norganization of the API packages are both creative and\\noriginal.
        Finally, while the court in Lotus found the\\ncommands at issue were \u201Cessential
        to operating\u201D the\\nsystem, it is undisputed that\u2014other than perhaps
        as to\\nthe three core packages\u2014Google did not need to copy the\\nstructure,
        sequence, and organization of the Java API\\npackages to write programs in
        the Java language.\\n    More importantly, however, the Ninth Circuit has
        not\\nadopted the court\u2019s \u201Cmethod of operation\u201D reasoning in\\nLotus,
        and we conclude that it is inconsistent with bind-\\ning precedent. 11 Specifically,
        we find that Lotus is incon-\\n\\n\\n    11 As Oracle points out, the Ninth
        Circuit has cited\\nLotus only one time, on a procedural issue. See Danjaq\\n\\f40
        \                      ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nsistent
        with Ninth Circuit case law recognizing that the\\nstructure, sequence, and
        organization of a computer\\nprogram is eligible for copyright protection
        where it\\nqualifies as an expression of an idea, rather than the idea\\nitself.
        See Johnson </pre><span class=\\\"citation\\\" data-id=\\\"530034\\\"><span
        class=\\\"antecedent_guess\\\">Controls,</span> <a href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"volume\\\">886</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">1175</span></a></span><pre class=\\\"inline\\\">-76.
        And,\\nwhile the court in Lotus held \u201Cthat expression that is part\\nof
        a \u2018method of operation\u2019 cannot be </pre><span class=\\\"citation\\\"
        data-id=\\\"691310\\\"><span class=\\\"antecedent_guess\\\">copyrighted,\u201D</span>
        <a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"volume\\\">49</span> <span class=\\\"reporter\\\">F.3d</span>\\nat
        <span class=\\\"page\\\">818</span></a></span><pre class=\\\"inline\\\">,
        this court\u2014applying Ninth Circuit law\u2014reached\\nthe exact opposite
        conclusion, finding that copyright\\nprotects \u201Cthe expression of [a]
        process or method,\u201D </pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><span
        class=\\\"antecedent_guess\\\">Atari,</span>\\n<a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">839</span></a></span><pre class=\\\"inline\\\">.\\n
        \    We find, moreover, that the hard and fast rule set\\ndown in Lotus and
        employed by the district court here\u2014\\ni.e., that elements which perform
        a function can never be\\ncopyrightable\u2014is at odds with the Ninth Circuit\u2019s
        en-\\ndorsement of the abstraction-filtration-comparison analy-\\nsis discussed
        earlier. As the Tenth Circuit concluded in\\nexpressly rejecting the Lotus
        \u201Cmethod of operation\u201D analy-\\nsis, in favor of the Second Circuit\u2019s
        abstraction-filtration-\\ncomparison test, \u201Calthough an element of a
        work may be\\ncharacterized as a method of operation, that element may\\nnevertheless
        contain expression that is eligible for copy-\\nright protection.\u201D </pre><span
        class=\\\"citation\\\" data-id=\\\"155289\\\"><span class=\\\"antecedent_guess\\\">Mitel,</span>
        <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"volume\\\">124</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1372</span></a></span><pre
        class=\\\"inline\\\">. Specifically,\\nthe court found that Section 102(b)
        \u201Cdoes not extinguish\\nthe protection accorded a particular expression
        of an idea\\nmerely because that expression is embodied in a method\\nof operation
        at a higher level of abstraction.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span>\\n   Other courts </a></span><pre class=\\\"inline\\\">agree
        that components of a program that\\ncan be characterized as a \u201Cmethod
        of operation\u201D may\\n\\n\\nLLC v. Sony Corp., </pre><span class=\\\"citation\\\"
        data-id=\\\"774772\\\"><a href=\\\"/opinion/774772/danjaq-llc-a-delaware-limited-liability-company-metro-goldwyn-mayer-inc/\\\"><span
        class=\\\"volume\\\">263</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">942</span></a></span><pre class=\\\"inline\\\">, 954 (9th
        Cir. 2001)\\n(citing Lotus for the proposition that delay \u201Chas been held\\npermissible,
        among other reasons, when it is necessitated\\nby the exhaustion of remedies
        through the administrative\\nprocess . . . when it is used to evaluate and
        prepare a\\ncomplicated claim\u201D).\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                   41\\n\\n\\n\\nnevertheless be copyrightable. For example,
        the Third\\nCircuit rejected a defendant\u2019s argument that operating\\nsystem
        programs are \u201Cper se\u201D uncopyrightable because an\\noperating system
        is a \u201Cmethod of operation\u201D for a comput-\\ner. Apple Computer, Inc.
        v. Franklin Computer Corp., </pre><span class=\\\"citation\\\" data-id=\\\"423653\\\"><a
        href=\\\"/opinion/423653/apple-computer-inc-a-california-corporation-v-franklin-computer/\\\"><span
        class=\\\"volume\\\">714</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        <span class=\\\"page\\\">1240</span></a></span><pre class=\\\"inline\\\">,
        1250-52 (3d Cir. 1983). The court distin-\\nguished between the \u201Cmethod
        which instructs the com-\\nputer to perform its operating functions\u201D
        and \u201Cthe\\ninstructions themselves,\u201D and found that the instructions\\nwere
        copyrightable. </pre><span class=\\\"citation\\\" data-id=\\\"423653\\\"><a
        href=\\\"/opinion/423653/apple-computer-inc-a-california-corporation-v-franklin-computer/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 1250-51. </a></span><pre class=\\\"inline\\\">In
        its analysis, the\\ncourt noted: \u201C[t]hat the words of a program are used\\nultimately
        in the implementation of a process should in no\\nway affect their copyrightability.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"423653\\\"><a href=\\\"/opinion/423653/apple-computer-inc-a-california-corporation-v-franklin-computer/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 1252 </a></span><pre class=\\\"inline\\\">(quoting\\nCONTU
        Report at 21). The court focused \u201Con whether the\\nidea is capable of
        various modes of expression\u201D and indi-\\ncated that, \u201C[i]f other
        programs can be written or created\\nwhich perform the same function as [i]n
        Apple\u2019s operating\\nsystem program, then that program is an expression
        of\\nthe idea and hence copyrightable.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"423653\\\"><a href=\\\"/opinion/423653/apple-computer-inc-a-california-corporation-v-franklin-computer/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 1253. </a></span><pre class=\\\"inline\\\">Notably,\\nno
        other circuit has adopted the First Circuit\u2019s \u201Cmethod of\\noperation\u201D
        analysis.\\n    Courts have likewise found that classifying a work as\\na
        \u201Csystem\u201D does not preclude copyright for the particular\\nexpression
        of that system. See Toro Co. v. R & R Prods.\\nCo., </pre><span class=\\\"citation\\\"
        data-id=\\\"468175\\\"><a href=\\\"/opinion/468175/the-toro-company-a-delaware-corporation-v-r-r-products-co-an-arizona/\\\"><span
        class=\\\"volume\\\">787</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1208</span></a></span><pre class=\\\"inline\\\">, 1212
        (8th Cir. 1986) (rejecting the\\ndistrict court\u2019s decision that \u201Cappellant\u2019s
        parts numbering\\nsystem is not copyrightable because it is a \u2018system\u2019\u201D
        and\\nindicating that Section 102(b) does not preclude protec-\\ntion for
        the \u201Cparticular expression\u201D of that system); see\\nalso Am. Dental
        Ass\u2019n v. Delta Dental Plans Ass\u2019n, </pre><span class=\\\"citation\\\"
        data-id=\\\"746914\\\"><a href=\\\"/opinion/746914/american-dental-association-v-delta-dental-plans-association/\\\"><span
        class=\\\"volume\\\">126</span>\\n<span class=\\\"reporter\\\">F.3d</span>
        <span class=\\\"page\\\">977</span></a></span><pre class=\\\"inline\\\">,
        980 (7th Cir. 1997) (\u201CA dictionary cannot be\\ncalled a \u2018system\u2019
        just because new novels are written\\nusing words, all of which appear in
        the dictionary. Nor is\\nword-processing software a \u2018system\u2019 just
        because it has a\\ncommand structure for producing paragraphs.\u201D).\\n
        \  Here, the district court recognized that the SSO \u201Cre-\\nsembles a
        taxonomy,\u201D but found that \u201Cit is nevertheless a\\n\\f42                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncommand structure, a system or method
        of operation\u2014a\\nlong hierarchy of over six thousand commands to carry\\nout
        pre-assigned functions.\u201D Copyrightability Decision,\\n</pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        999-1000. 12 In other words, the court\\nconcluded that, although the SSO
        is expressive, it is not\\ncopyrightable because it is also functional. The
        problem\\nwith the district court\u2019s approach is that computer pro-\\ngrams
        are by definition functional\u2014they are all designed\\nto accomplish some
        task. Indeed, the statutory definition\\nof \u201Ccomputer program\u201D acknowledges
        that they function\\n\u201Cto bring about a certain result.\u201D See 17 U.S.C.
        \xA7 101\\n(defining a \u201Ccomputer program\u201D as \u201Ca set of statements
        or\\ninstructions to be used directly or indirectly in a computer\\nin order
        to bring about a certain result\u201D). If we were to\\naccept the district
        court\u2019s suggestion that a computer\\nprogram is uncopyrightable simply
        because it \u201Ccarr[ies]\\nout pre-assigned functions,\u201D no computer
        program is\\nprotectable. That result contradicts Congress\u2019s express\\nintent
        to provide copyright protection to computer pro-\\ngrams, as well as binding
        Ninth Circuit case law finding\\ncomputer programs copyrightable, despite
        their utilitari-\\nan or functional purpose. Though the trial court did add\\nthe
        caveat that it \u201Cdoes not hold that the structure, se-\\nquence and organization
        of all computer programs may be\\nstolen,\u201D Copyrightability Decision,
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span>
        <span class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at\\n1002, it is hard to see how its method
        of operation analy-\\nsis could lead to any other conclusion.\\n   While it
        does not appear that the Ninth Circuit has\\naddressed the precise issue,
        we conclude that a set of\\ncommands to instruct a computer to carry out desired\\n\\n\\n\\n
        \    12 This analogy by the district court is meaningful\\nbecause taxonomies,
        in varying forms, have generally\\nbeen deemed copyrightable. See, e.g., Practice
        Mgmt. Info.\\nCorp. v. Am. Med. Ass\u2019n, </pre><span class=\\\"citation\\\"
        data-id=\\\"744681\\\"><a href=\\\"/opinion/744681/practice-management-information-corporation-a-california-corporation-v/\\\"><span
        class=\\\"volume\\\">121</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">516</span></a></span><pre class=\\\"inline\\\">, 517-20
        (9th Cir.\\n1997); Am. </pre><span class=\\\"citation\\\" data-id=\\\"746914\\\"><span
        class=\\\"antecedent_guess\\\">Dental,</span> <a href=\\\"/opinion/746914/american-dental-association-v-delta-dental-plans-association/\\\"><span
        class=\\\"volume\\\">126</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">978-81</span></a></span><pre class=\\\"inline\\\">.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                  43\\n\\n\\n\\noperations may
        contain expression that is eligible for\\ncopyright protection. See </pre><span
        class=\\\"citation\\\" data-id=\\\"155289\\\"><span class=\\\"antecedent_guess\\\">Mitel,</span>
        <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"volume\\\">124</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1372</span></a></span><pre
        class=\\\"inline\\\">. We\\nagree with Oracle that, under Ninth Circuit law,
        an\\noriginal work\u2014even one that serves a function\u2014is enti-\\ntled
        to copyright protection as long as the author had\\nmultiple ways to express
        the underlying idea. Section\\n102(b) does not, as Google seems to suggest,
        automatically\\ndeny copyright protection to elements of a computer\\nprogram
        that are functional. Instead, as noted, Sec-\\ntion 102(b) codifies the idea/expression
        dichotomy and the\\nlegislative history confirms that, among other things,\\nSection
        102(b) was \u201Cintended to make clear that the\\nexpression adopted by the
        programmer is the copyrighta-\\nble element in a computer program.\u201D H.R.
        Rep. No. 1476,\\n94th Cong., 2d Sess. 54, reprinted in 1976 U.S.C.C.A.N.\\n5659,
        5670. Therefore, even if an element directs a com-\\nputer to perform operations,
        the court must nevertheless\\ndetermine whether it contains any separable
        expression\\nentitled to protection.\\n     On appeal, Oracle does not\u2014and
        concedes that it can-\\nnot\u2014claim copyright in the idea of organizing
        functions of\\na computer program or in the \u201Cpackage-class-method\u201D\\norganizational
        structure in the abstract. Instead, Oracle\\nclaims copyright protection only
        in its particular way of\\nnaming and organizing each of the 37 Java API packag-\\nes.
        13 Oracle recognizes, for example, that it \u201Ccannot\\ncopyright the idea
        of programs that open an internet\\n\\n\\n\\n   13   At oral argument, counsel
        for Oracle explained\\nthat it \u201Cwould never claim that anyone who uses
        a pack-\\nage-class-method manner of classifying violates our\\ncopyright.
        We don\u2019t own every conceivable way of organ-\\nizing, we own only our
        specific expression\u2014our specific\\nway of naming each of these 362 methods,
        putting them\\ninto 36 classes, and 20 subclasses.\u201D Oral Argument at\\n16:44.\\n\\f44
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nconnection,\u201D
        but \u201Cit can copyright the precise strings of\\ncode used to do so, at
        least so long as \u2018other language is\\navailable\u2019 to achieve the
        same function.\u201D Appellant Reply\\nBr. 13-14 (citation omitted). Thus,
        Oracle concedes that\\nGoogle and others could employ the Java language\u2014much\\nlike
        anyone could employ the English language to write a\\nparagraph without violating
        the copyrights of other\\nEnglish language writers. And, that Google may employ\\nthe
        \u201Cpackage-class-method\u201D structure much like authors\\ncan employ
        the same rules of grammar chosen by other\\nauthors without fear of infringement.
        What Oracle con-\\ntends is that, beyond that point, Google, like any author,\\nis
        not permitted to employ the precise phrasing or precise\\nstructure chosen
        by Oracle to flesh out the substance of\\nits packages\u2014the details and
        arrangement of the prose.\\n    As the district court acknowledged, Google
        could have\\nstructured Android differently and could have chosen\\ndifferent
        ways to express and implement the functionality\\nthat it copied. 14 Specifically,
        the court found that \u201Cthe\\n\\n\\n\\n     14 Amici McNealy and Sutphin
        explain that \u201Ca quick\\nexamination of other programming environments
        shows\\nthat creators of other development platforms provide the\\nsame functions
        with wholly different creative choices.\u201D\\nBr. of McNealy and Sutphin
        17. For example, in Java, a\\ndeveloper setting the time zone would call the
        \u201CsetTime-\\nZone\u201D method within the \u201CDateFormat\u201D class
        of the ja-\\nva.text package. </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><a
        href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"id_token\\\">Id.</span>
        Apple\u2019s iOS </a></span><pre class=\\\"inline\\\">platform, on the other\\nhand,
        \u201Cdevotes an entire class to set the time zone in an\\napplication\u2014the
        \u2018NSTimeZone\u2019 class\u201D which is in the\\n\u201CFoundation framework.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 17-18 </a></span><pre class=\\\"inline\\\">(noting
        that a\\n\u201Cframework is Apple\u2019s terminology for a structure concep-\\ntually
        similar to Java\u2019s \u2018package\u2019\u201D). Microsoft provides\\nsimilar
        functionality with \u201Can entirely different structure,\\nnaming scheme,
        and selection.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"155289\\\"><a
        href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"id_token\\\">Id.</span>
        at 18 </a></span><pre class=\\\"inline\\\">(\u201CIn its Windows\\nPhone development
        platform, Microsoft stores its time\\n\\fORACLE AMERICA, INC.   v. GOOGLE
        INC.                   45\\n\\n\\n\\nvery same functionality could have been
        offered in An-\\ndroid without duplicating the exact command structure\\nused
        in Java.\u201D Copyrightability Decision, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F. Supp.</span>
        <span class=\\\"page\\\">2d</span>\\n</span><pre class=\\\"inline\\\">at 976.
        The court further explained that Google could\\nhave offered the same functions
        in Android by \u201Cre-\\narranging the various methods under different groupings\\namong
        the various classes and packages.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"id_token\\\">Id.</span> The evi-\\n</span><pre class=\\\"inline\\\">dence
        showed, moreover, that Google designed many of its\\nown API packages from
        scratch, and, thus, could have\\ndesigned its own corresponding 37 API packages
        if it\\nwanted to do so.\\n    Given the court\u2019s findings that the SSO
        is original and\\ncreative, and that the declaring code could have been\\nwritten
        and organized in any number of ways and still\\nhave achieved the same functions,
        we conclude that\\nSection 102(b) does not bar the packages from copyright\\nprotection
        just because they also perform functions.\\n         3. Google\u2019s Interoperability
        Arguments\\n            are Irrelevant to Copyrightability\\n    Oracle also
        argues that the district court erred in in-\\nvoking interoperability in its
        copyrightability analysis.\\nSpecifically, Oracle argues that Google\u2019s
        interoperability\\narguments are only relevant, if at all, to fair use\u2014not
        to\\nthe question of whether the API packages are copyrighta-\\nble. We agree.\\n
        \   In characterizing the SSO of the Java API packages\\nas a \u201Cmethod
        of operation,\u201D the district court explained\\nthat \u201C[d]uplication
        of the command structure is necessary\\nfor interoperability.\u201D Copyrightability
        Decision, 872 F.\\nSupp. 2d at 977. The court found that, \u201C[i]n order
        for at\\n\\n\\nzone programs in the \u2018TimeZoneInfo\u2019 class in its
        \u2018Systems\u2019\\nnamespace (Microsoft\u2019s version of a \u2018package\u2019
        or \u2018frame-\\nwork\u2019).\u201D). Again, this is consistent with the
        evidence\\npresented at trial.\\n\\f46                      ORACLE AMERICA,
        INC.   v. GOOGLE INC.\\n\\n\\n\\nleast some of [the pre-Android Java] code
        to run on An-\\ndroid, Google was required to provide the same ja-\\nva.package.Class.method()
        command system using the\\nsame names with the same \u2018taxonomy\u2019 and
        with the same\\nfunctional specifications.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 1000 </span><pre class=\\\"inline\\\">(emphasis
        omitted).\\nAnd, the court concluded that \u201CGoogle replicated what\\nwas
        necessary to achieve a degree of interoperability\u2014but\\nno more, taking
        care, as said before, to provide its own\\nimplementations.\u201D </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span> In
        reaching </span><pre class=\\\"inline\\\">this conclusion, the\\ncourt relied
        primarily on two Ninth Circuit decisions:\\nSega Enterprises v. Accolade,
        Inc., </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">977</span>
        <span class=\\\"reporter\\\">F.2d</span> <span class=\\\"page\\\">1510</span>
        </span><pre class=\\\"inline\\\">(9th Cir.\\n1992), and Sony Computer Entertainment,
        Inc. v. Con-\\nnectix, Corp., </pre><span class=\\\"citation\\\" data-id=\\\"767633\\\"><a
        href=\\\"/opinion/767633/sony-computer-entertainment-inc-a-japanese-corporation-sony-computer/\\\"><span
        class=\\\"volume\\\">203</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">596</span> </a></span><pre class=\\\"inline\\\">(9th Cir.
        2000).\\n    Both Sega and Sony are fair use cases in which copy-\\nrightability
        was addressed only tangentially. In Sega, for\\nexample, Sega manufactured
        a video game console and\\ngame cartridges that contained hidden functional
        pro-\\ngram elements necessary to achieve compatibility with\\nthe console.
        Defendant Accolade: (1) reverse-engineered\\nSega\u2019s video game programs
        to discover the requirements\\nfor compatibility; and (2) created its own
        games for the\\nSega console. </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"antecedent_guess\\\">Sega,</span> <span class=\\\"volume\\\">977</span>
        <span class=\\\"reporter\\\">F.2d</span> at <span class=\\\"page\\\">1514-15</span></span><pre
        class=\\\"inline\\\">. As part of the\\nreverse-engineering process, Accolade
        made intermediate\\ncopies of object code from Sega\u2019s console. </pre><span
        class=\\\"citation\\\" data-id=\\\"691310\\\"><a href=\\\"/opinion/691310/lotus-development-corporation-v-borland-international-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> Although\\nthe </a></span><pre class=\\\"inline\\\">court
        recognized that the intermediate copying of\\ncomputer code may infringe Sega\u2019s
        copyright, it concluded\\nthat \u201Cdisassembly of copyrighted object code
        is, as a\\nmatter of law, a fair use of the copyrighted work if such\\ndisassembly
        provides the only means of access to those\\nelements of the code that are
        not protected by copyright\\nand the copier has a legitimate reason for seeking
        such\\naccess.\u201D </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 1518. </span><pre class=\\\"inline\\\">The court agreed with Accolade that\\nits
        copying was necessary to examine the unprotected\\nfunctional aspects of the
        program. </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        at 1520. </span><pre class=\\\"inline\\\">And,\\nbecause Accolade had a legitimate
        interest in making its\\ncartridges compatible with Sega\u2019s console, the
        court found\\nthat Accolade\u2019s intermediate copying was fair use.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                   47\\n\\n\\n\\n    Likewise,
        in Sony, the Ninth Circuit found that the\\ndefendant\u2019s reverse engineering
        and intermediate copying\\nof Sony\u2019s copyrighted software program \u201Cwas
        a fair use for\\nthe purpose of gaining access to the unprotected elements\\nof
        Sony\u2019s software.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"767633\\\"><span
        class=\\\"antecedent_guess\\\">Sony,</span> <a href=\\\"/opinion/767633/sony-computer-entertainment-inc-a-japanese-corporation-sony-computer/\\\"><span
        class=\\\"volume\\\">203</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">602</span></a></span><pre class=\\\"inline\\\">.
        The court\\nexplained that Sony\u2019s software program contained unpro-\\ntected
        functional elements and that the defendant could\\nonly access those elements
        through reverse engineering.\\n</pre><span class=\\\"citation\\\" data-id=\\\"767633\\\"><a
        href=\\\"/opinion/767633/sony-computer-entertainment-inc-a-japanese-corporation-sony-computer/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 603. </a></span><pre class=\\\"inline\\\">The
        defendant used that information to create\\na software program that let consumers
        play games de-\\nsigned for Sony\u2019s PlayStation console on their computers.\\nNotably,
        the defendant\u2019s software program did not con-\\ntain any of Sony\u2019s
        copyrighted material. </pre><span class=\\\"citation\\\" data-id=\\\"767633\\\"><a
        href=\\\"/opinion/767633/sony-computer-entertainment-inc-a-japanese-corporation-sony-computer/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 598.\\n</a></span><pre class=\\\"inline\\\">
        \   The district court characterized Sony and Sega as\\n\u201Cclose analogies\u201D
        to this case. Copyrightability Decision,\\n</pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        1000. According to the court, both\\ndecisions \u201Cheld that interface procedures
        that were neces-\\nsary to duplicate in order to achieve interoperability
        were\\nfunctional aspects not copyrightable under Section\\n102(b).\u201D
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"id_token\\\">Id.</span>
        The district </span><pre class=\\\"inline\\\">court\u2019s reliance on Sega
        and\\nSony in the copyrightability context is misplaced, howev-\\ner.\\n    As
        noted, both cases were focused on fair use, not cop-\\nyrightability. In Sega,
        for example, the only question was\\nwhether Accolade\u2019s intermediate
        copying was fair use.\\nThe court never addressed the question of whether
        Sega\u2019s\\nsoftware code, which had functional elements, also con-\\ntained
        separable creative expression entitled to protec-\\ntion. Likewise, although
        the court in Sony determined\\nthat Sony\u2019s computer program had functional
        elements, it\\nnever addressed whether it also had expressive elements.\\nSega
        and Sony are also factually distinguishable because\\nthe defendants in those
        cases made intermediate copies to\\nunderstand the functional aspects of the
        copyrighted\\nworks and then created new products. See </pre><span class=\\\"citation\\\"
        data-id=\\\"767633\\\"><span class=\\\"antecedent_guess\\\">Sony,</span> <a
        href=\\\"/opinion/767633/sony-computer-entertainment-inc-a-japanese-corporation-sony-computer/\\\"><span
        class=\\\"volume\\\">203</span> <span class=\\\"reporter\\\">F.3d</span>\\nat
        <span class=\\\"page\\\">606-07</span></a></span><pre class=\\\"inline\\\">;
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"antecedent_guess\\\">Sega,</span>
        <span class=\\\"volume\\\">977</span> <span class=\\\"reporter\\\">F.2d</span>
        at <span class=\\\"page\\\">1522-23</span></span><pre class=\\\"inline\\\">.
        This is not a case\\nwhere Google reverse-engineered Oracle\u2019s Java packages\\n\\f48
        \                     ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nto
        gain access to unprotected functional elements con-\\ntained therein. As the
        former Register of Copyrights of\\nthe United States pointed out in his brief
        amicus curiae,\\n\u201C[h]ad Google reverse engineered the programming pack-\\nages
        to figure out the ideas and functionality of the origi-\\nnal, and then created
        its own structure and its own literal\\ncode, Oracle would have no remedy
        under copyright\\nwhatsoever.\u201D Br. for Amicus Curiae Ralph Oman 29.\\nInstead,
        Google chose to copy both the declaring code and\\nthe overall SSO of the
        37 Java API packages at issue.\\n     We disagree with Google\u2019s suggestion
        that Sony and\\nSega created an \u201Cinteroperability exception\u201D to
        copyright-\\nability. See Appellee Br. 39 (citing Sony and Sega for the\\nproposition
        that \u201Ccompatibility elements are not copy-\\nrightable under section
        102(b)\u201D (emphasis omitted)).\\nAlthough both cases recognized that the
        software pro-\\ngrams at issue there contained unprotected functional\\nelements,
        a determination that some elements are unpro-\\ntected is not the same as
        saying that the entire work loses\\ncopyright protection. To accept Google\u2019s
        reading would\\ncontradict Ninth Circuit case law recognizing that both\\nthe
        literal and non-literal components of a software\\nprogram are eligible for
        copyright protection. See John-\\nson </pre><span class=\\\"citation\\\" data-id=\\\"530034\\\"><span
        class=\\\"antecedent_guess\\\">Controls,</span> <a href=\\\"/opinion/530034/johnson-controls-inc-a-wisconsin-corporation-v-phoenix-control-systems/\\\"><span
        class=\\\"volume\\\">886</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">1175</span></a></span><pre class=\\\"inline\\\">.
        And it would ignore the\\nfact that the Ninth Circuit endorsed the abstraction-\\nfiltration-comparison
        inquiry in Sega itself.\\n    As previously discussed, a court must examine
        the\\nsoftware program to determine whether it contains crea-\\ntive expression
        that can be separated from the underlying\\nfunction. See </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"antecedent_guess\\\">Sega,</span> <span class=\\\"volume\\\">977</span>
        <span class=\\\"reporter\\\">F.2d</span> at <span class=\\\"page\\\">1524-25</span></span><pre
        class=\\\"inline\\\">. In doing so, the\\ncourt filters out the elements of
        the program that are\\n\u201Cideas\u201D as well as elements that are \u201Cdictated
        by consider-\\nations of efficiency, so as to be necessarily incidental to\\nthat
        idea; required by factors external to the program\\nitself.\u201D </pre><span
        class=\\\"citation\\\" data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">707</span></a></span><pre class=\\\"inline\\\">.\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                  49\\n\\n\\n\\n     To determine
        \u201Cwhether certain aspects of an allegedly\\ninfringed software are not
        protected by copyright law, the\\nfocus is on external factors that influenced
        the choice of\\nthe creator of the infringed product.\u201D Dun & Bradstreet\\nSoftware
        Servs., Inc. v. Grace Consulting, Inc., </pre><span class=\\\"citation\\\"
        data-id=\\\"779443\\\"><a href=\\\"/opinion/779443/dun-bradstreet-software-services-inc-geac-computer-systems-inc-v/\\\"><span
        class=\\\"volume\\\">307</span> <span class=\\\"reporter\\\">F.3d</span>\\n<span
        class=\\\"page\\\">197</span></a></span><pre class=\\\"inline\\\">, 215 (3d
        Cir. 2002) (citing </pre><span class=\\\"citation\\\" data-id=\\\"597418\\\"><span
        class=\\\"antecedent_guess\\\">Altai,</span> <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">714</span></a></span><pre class=\\\"inline\\\">;\\n</pre><span
        class=\\\"citation\\\" data-id=\\\"155289\\\"><span class=\\\"antecedent_guess\\\">Mitel,</span>
        <a href=\\\"/opinion/155289/mitel-inc-v-iqtel-inc/\\\"><span class=\\\"volume\\\">124</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1375</span></a></span><pre
        class=\\\"inline\\\">). The Second Circuit, for example,\\nhas noted that
        programmers are often constrained in\\ntheir design choices by \u201Cextrinsic
        considerations\u201D includ-\\ning \u201Cthe mechanical specifications of
        the computer on\\nwhich a particular program is intended to run\u201D and
        \u201Ccom-\\npatibility requirements of other programs with which a\\nprogram
        is designed to operate in conjunction.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"597418\\\"><span class=\\\"antecedent_guess\\\">Altai,</span>
        <a href=\\\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\\\"><span
        class=\\\"volume\\\">982</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        at <span class=\\\"page\\\">709-10</span> </a></span><pre class=\\\"inline\\\">(citing
        3 Melville B. Nimmer & David\\nNimmer, Nimmer on Copyright \xA7 13.01 at 13-66-71\\n(1991)).
        The Ninth Circuit has likewise recognized that:\\n(1) computer programs \u201Ccontain
        many logical, structural,\\nand visual display elements that are dictated
        by . . .\\nexternal factors such as compatibility requirements and\\nindustry
        demands\u201D; and (2) \u201C[i]n some circumstances,\\neven the exact set
        of commands used by the programmer\\nis deemed functional rather than creative
        for purposes of\\ncopyright.\u201D </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"antecedent_guess\\\">Sega,</span> <span class=\\\"volume\\\">977</span>
        <span class=\\\"reporter\\\">F.2d</span> at <span class=\\\"page\\\">1524</span>
        </span><pre class=\\\"inline\\\">(internal citation\\nomitted).\\n    Because
        copyrightability is focused on the choices\\navailable to the plaintiff at
        the time the computer pro-\\ngram was created, the relevant compatibility
        inquiry asks\\nwhether the plaintiff\u2019s choices were dictated by a need
        to\\nensure that its program worked with existing third-party\\nprograms.
        Dun & </pre><span class=\\\"citation\\\" data-id=\\\"779443\\\"><span class=\\\"antecedent_guess\\\">Bradstreet,</span>
        <a href=\\\"/opinion/779443/dun-bradstreet-software-services-inc-geac-computer-systems-inc-v/\\\"><span
        class=\\\"volume\\\">307</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">215</span></a></span><pre class=\\\"inline\\\">;
        see also\\n</pre><span class=\\\"citation\\\" data-id=\\\"591021\\\"><span
        class=\\\"antecedent_guess\\\">Atari,</span> <a href=\\\"/opinion/591021/atari-games-corp-and-tengen-inc-v-nintendo-of-america-inc-and-nintendo/\\\"><span
        class=\\\"volume\\\">975</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">840</span> </a></span><pre class=\\\"inline\\\">(\u201CExternal
        factors did not dictate\\nthe design of the 10NES program.\u201D). Whether
        a defend-\\nant later seeks to make its program interoperable with\\nthe plaintiff\u2019s
        program has no bearing on whether the\\nsoftware the plaintiff created had
        any design limitations\\ndictated by external factors. See Dun & </pre><span
        class=\\\"citation\\\" data-id=\\\"779443\\\"><span class=\\\"antecedent_guess\\\">Bradstreet,</span>
        <a href=\\\"/opinion/779443/dun-bradstreet-software-services-inc-geac-computer-systems-inc-v/\\\"><span
        class=\\\"volume\\\">307</span>\\n<span class=\\\"reporter\\\">F.3d</span>
        at <span class=\\\"page\\\">215</span> </a></span><pre class=\\\"inline\\\">(finding
        an expert\u2019s testimony on interopera-\\n\\f50                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nbility \u201Cwholly misplaced\u201D
        because he \u201Clooked at externali-\\nties from the eyes of the plagiarist,
        not the eyes of the\\nprogram\u2019s creator\u201D). Stated differently, the
        focus is on the\\ncompatibility needs and programming choices of the party\\nclaiming
        copyright protection\u2014not the choices the de-\\nfendant made to achieve
        compatibility with the plaintiff\u2019s\\nprogram. Consistent with this approach,
        courts have\\nrecognized that, once the plaintiff creates a copyrightable\\nwork,
        a defendant\u2019s desire \u201Cto achieve total compatibil-\\nity . . . is
        a commercial and competitive objective which\\ndoes not enter into the . .
        . issue of whether particular\\nideas and expressions have merged.\u201D Apple
        </pre><span class=\\\"citation\\\" data-id=\\\"423653\\\"><span class=\\\"antecedent_guess\\\">Computer,</span>\\n<a
        href=\\\"/opinion/423653/apple-computer-inc-a-california-corporation-v-franklin-computer/\\\"><span
        class=\\\"volume\\\">714</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">1253</span></a></span><pre class=\\\"inline\\\">.\\n
        \    Given this precedent, we conclude that the district\\ncourt erred in
        focusing its interoperability analysis on\\nGoogle\u2019s desires for its
        Android software. See Copyrighta-\\nbility Decision, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        1000 (\u201CGoogle replicat-\\ned what was necessary to achieve a degree of\\ninteroperability\u201D
        with Java.). Whether Google\u2019s software\\nis \u201Cinteroperable\u201D
        in some sense with any aspect of the\\nJava platform (although as Google concedes,
        certainly not\\nwith the JVM) has no bearing on the threshold question of\\nwhether
        Oracle\u2019s software is copyrightable. It is the\\ninteroperability and
        other needs of Oracle\u2014not those of\\nGoogle\u2014that apply in the copyrightability
        context, and\\nthere is no evidence that when Oracle created the Java\\nAPI
        packages at issue it did so to meet compatibility\\nrequirements of other
        pre-existing programs.\\n     Google maintains on appeal that its use of the
        \u201CJava\\nclass and method names and declarations was \u2018the only\\nand
        essential means\u2019 of achieving a degree of interopera-\\nbility with existing
        programs written in the [Java lan-\\nguage].\u201D Appellee Br. 49. Indeed,
        given the record\\nevidence that Google designed Android so that it would\\nnot
        be compatible with the Java platform, or the JVM\\nspecifically, we find Google\u2019s
        interoperability argument\\nconfusing. While Google repeatedly cites to the
        district\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    51\\n\\n\\n\\ncourt\u2019s
        finding that Google had to copy the packages so\\nthat an app written in Java
        could run on Android, it cites\\nto no evidence in the record that any such
        app exists and\\npoints to no Java apps that either pre-dated or post-dated\\nAndroid
        that could run on the Android platform. 15 The\\ncompatibility Google sought
        to foster was not with Ora-\\ncle\u2019s Java platform or with the JVM central
        to that plat-\\nform. Instead, Google wanted to capitalize on the fact\\nthat
        software developers were already trained and experi-\\nenced in using the
        Java API packages at issue. The\\ndistrict court agreed, finding that, as
        to the 37 Java API\\npackages, \u201CGoogle believed Java application programmers\\nwould
        want to find the same 37 sets of functionalities in\\nthe new Android system
        callable by the same names as\\nused in Java.\u201D Copyrightability Decision,
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span>
        <span class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>\\n</span><pre
        class=\\\"inline\\\">at 978. Google\u2019s interest was in accelerating its
        develop-\\nment process by \u201Cleverag[ing] Java for its existing base of\\ndevelopers.\u201D
        J.A. 2033, 2092. Although this competitive\\nobjective might be relevant to
        the fair use inquiry, we\\nconclude that it is irrelevant to the copyrightability
        of\\nOracle\u2019s declaring code and organization of the API pack-\\nages.\\n
        \   Finally, to the extent Google suggests that it was enti-\\ntled to copy
        the Java API packages because they had\\n\\n\\n\\n   15   During oral argument,
        Google\u2019s counsel stated\\nthat \u201Ca program written in the Java language
        can run on\\nAndroid if it\u2019s only using packages within the 37. So if\\nI\u2019m
        a developer and I have written a program, I\u2019ve written\\nit in Java,
        I can stick an Android header on it and it will\\nrun in Android because it
        is using the identical names of\\nthe classes, methods, and packages.\u201D
        Oral Argument at\\n31:31. Counsel did not identify any programs that use\\nonly
        the 37 API packages at issue, however, and did not\\nattest that any such
        program would be useful. Nor did\\nGoogle cite to any record evidence to support
        this claim.\\n\\f52                      ORACLE AMERICA, INC.   v. GOOGLE
        INC.\\n\\n\\n\\nbecome the effective industry standard, we are unper-\\nsuaded.
        Google cites no authority for its suggestion that\\ncopyrighted works lose
        protection when they become\\npopular, and we have found none. 16 In fact,
        the Ninth\\nCircuit has rejected the argument that a work that later\\nbecomes
        the industry standard is uncopyrightable. See\\nPractice Mgmt. Info. Corp.
        v. Am. Med. Ass\u2019n, </pre><span class=\\\"citation\\\" data-id=\\\"744681\\\"><a
        href=\\\"/opinion/744681/practice-management-information-corporation-a-california-corporation-v/\\\"><span
        class=\\\"volume\\\">121</span> <span class=\\\"reporter\\\">F.3d</span>\\n<span
        class=\\\"page\\\">516</span></a></span><pre class=\\\"inline\\\">, 520 n.8
        (9th Cir. 1997) (noting that the district court\\nfound plaintiff\u2019s medical
        coding system entitled to copy-\\nright protection, and that, although the
        system had\\nbecome the industry standard, plaintiff\u2019s copyright did
        not\\nprevent competitors \u201Cfrom developing comparative or\\nbetter coding
        systems and lobbying the federal govern-\\nment and private actors to adopt
        them. It simply pre-\\nvents wholesale copying of an existing system.\u201D).
        Google\\nwas free to develop its own API packages and to \u201Clobby\u201D\\nprogrammers
        to adopt them. Instead, it chose to copy\\n\\n\\n     16 Google argues that,
        in the same way a formerly\\ndistinctive trademark can become generic over
        time, a\\nprogram element can lose copyright protection when it\\nbecomes
        an industry standard. But \u201Cit is to be expected\\nthat phrases and other
        fragments of expression in a\\nhighly successful copyrighted work will become
        part of the\\nlanguage. That does not mean they lose all protection in\\nthe
        manner of a trade name that has become generic.\u201D\\nWarner Bros., Inc.
        v. Am. Broadcasting Cos., </pre><span class=\\\"citation\\\" data-id=\\\"426378\\\"><a
        href=\\\"/opinion/426378/warner-bros-inc-film-export-ag-and-dc-comics-inc-plaintiffs-/\\\"><span
        class=\\\"volume\\\">720</span> <span class=\\\"reporter\\\">F.2d</span>\\n<span
        class=\\\"page\\\">231</span></a></span><pre class=\\\"inline\\\">, 242 (2d
        Cir. 1983) (\u201CNo matter how well known a\\ncopyrighted phrase becomes,
        its author is entitled to\\nguard against its appropriation to promote the
        sale of\\ncommercial products.\u201D). Notably, even when a patented\\nmethod
        or system becomes an acknowledged industry\\nstandard with acquiescence of
        the patent owner, any\\npermissible use generally requires payment of a reasona-\\nble
        royalty, which Google refused to do here. See general-\\nly In re Innovatio
        IP Ventures, LLC, No. 11-C-9308, </pre><span class=\\\"citation no-link\\\"><span
        class=\\\"volume\\\">2013</span>\\n<span class=\\\"reporter\\\">U.S. Dist.
        LEXIS</span> <span class=\\\"page\\\">144061</span> </span><pre class=\\\"inline\\\">(N.D.
        Ill. Sept. 27, 2013).\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    53\\n\\n\\n\\nOracle\u2019s
        declaring code and the SSO to capitalize on the\\npreexisting community of
        programmers who were accus-\\ntomed to using the Java API packages. That desire
        has\\nnothing to do with copyrightability. For these reasons, we\\nfind that
        Google\u2019s industry standard argument has no\\nbearing on the copyrightability
        of Oracle\u2019s work.\\n                         B. Fair Use\\n    As noted,
        the jury hung on Google\u2019s fair use defense,\\nand the district court
        declined to order a new trial given\\nits conclusion that the code and structure
        Google copied\\nwere not entitled to copyright protection. On appeal,\\nOracle
        argues that: (1) a remand to decide fair use \u201Cis\\npointless\u201D; and
        (2) this court should find, as a matter of\\nlaw, that \u201CGoogle\u2019s
        commercial use of Oracle\u2019s work in a\\nmarket where Oracle already competed
        was not fair use.\u201D\\nAppellant Br. 68.\\n    Fair use is an affirmative
        defense to copyright in-\\nfringement and is codified in Section 107 of the
        Copyright\\nAct. </pre><span class=\\\"citation\\\" data-id=\\\"2959739\\\"><span
        class=\\\"antecedent_guess\\\">Golan,</span> <a href=\\\"/opinion/2959739/golan-v-holder/\\\"><span
        class=\\\"volume\\\">132</span> <span class=\\\"reporter\\\">S. Ct.</span>
        at <span class=\\\"page\\\">890</span> </a></span><pre class=\\\"inline\\\">(\u201C[T]he
        fair use defense, is\\ncodified at 17 U.S.C. \xA7 107.\u201D). Section 107
        permits use of\\ncopyrighted work if it is \u201Cfor purposes such as criticism,\\ncomment,
        news reporting, teaching (including multiple\\ncopies for classroom use),
        scholarship, or research.\u201D 17\\nU.S.C. \xA7 107. The fair use doctrine
        has been referred to\\nas \u201C\u2018the most troublesome in the whole law
        of copyright.\u2019\u201D\\nMonge v. Maya Magazines, Inc., </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">688</span> <span class=\\\"reporter\\\">F.3d</span>
        <span class=\\\"page\\\">1164</span></span><pre class=\\\"inline\\\">, 1170
        (9th\\nCir. 2012) (quoting Dellar v. Samuel Goldwyn, Inc., </pre><span class=\\\"citation\\\"
        data-id=\\\"1492993\\\"><a href=\\\"/opinion/1492993/dellar-v-samuel-goldwyn-inc/\\\"><span
        class=\\\"volume\\\">104</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        <span class=\\\"page\\\">661</span></a></span><pre class=\\\"inline\\\">,
        662 (2d Cir. 1939) (per curiam)). It both per-\\nmits and requires \u201Ccourts
        to avoid rigid application of the\\ncopyright statute when, on occasion, it
        would stifle the\\nvery creativity which that law is designed to foster.\u201D\\nCampbell
        v. Acuff-Rose Music, Inc., </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><a
        href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span class=\\\"volume\\\">510</span>
        <span class=\\\"reporter\\\">U.S.</span> <span class=\\\"page\\\">569</span></a></span><pre
        class=\\\"inline\\\">, 577\\n(1994) (quoting Stewart v. Abend, </pre><span
        class=\\\"citation\\\" data-id=\\\"112420\\\"><a href=\\\"/opinion/112420/stewart-v-abend/\\\"><span
        class=\\\"volume\\\">495</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">207</span></a></span><pre class=\\\"inline\\\">, 236\\n(1990)).\\n
        \  \u201CSection 107 requires a case-by-case determination\\nwhether a particular
        use is fair, and the statute notes four\\n\\f54                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nnonexclusive factors to be considered.\u201D
        Harper & Row\\nPublishers, Inc. v. Nation Enters., </pre><span class=\\\"citation\\\"
        data-id=\\\"111432\\\"><a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">539</span></a></span><pre class=\\\"inline\\\">, 549\\n(1985).
        Those factors are: (1) \u201Cthe purpose and character\\nof the use, including
        whether such use is of a commercial\\nnature or is for nonprofit educational
        purposes;\u201D (2) \u201Cthe\\nnature of the copyrighted work;\u201D (3)
        \u201Cthe amount and\\nsubstantiality of the portion used in relation to the
        copy-\\nrighted work as a whole;\u201D and (4) \u201Cthe effect of the use\\nupon
        the potential market for or value of the copyrighted\\nwork.\u201D 17 U.S.C.
        \xA7 107. The Supreme Court has ex-\\nplained that all of the statutory factors
        \u201Care to be ex-\\nplored, and the results weighed together, in light of
        the\\npurpose[] of copyright,\u201D which is \u201C[t]o promote the Pro-\\ngress
        of Science and useful Arts.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><span
        class=\\\"antecedent_guess\\\">Campbell,</span> <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"volume\\\">510</span> <span class=\\\"reporter\\\">U.S.</span> at\\n<span
        class=\\\"page\\\">578</span></a></span><pre class=\\\"inline\\\">, 575 (internal
        citations omitted).\\n    \u201CFair use is a mixed question of law and fact.\u201D
        Harper\\n& </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><span
        class=\\\"antecedent_guess\\\">Row,</span> <a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">560</span></a></span><pre class=\\\"inline\\\">.
        Thus, while subsidiary and\\ncontroverted findings of fact must be reviewed
        for clear\\nerror under Rule 52 of the Federal Rules of Civil Proce-\\ndure,
        the Ninth Circuit reviews the ultimate application\\nof those facts de novo.
        See Seltzer v. Green Day, Inc., </pre><span class=\\\"citation\\\" data-id=\\\"1036738\\\"><a
        href=\\\"/opinion/1036738/dereck-seltzer-v-green-day-inc/\\\"><span class=\\\"volume\\\">725</span>\\n<span
        class=\\\"reporter\\\">F.3d</span> <span class=\\\"page\\\">1170</span></a></span><pre
        class=\\\"inline\\\">, 1175 (9th Cir. 2013) (citing SOFA Entm\u2019t, Inc.\\nv.
        Dodger Prods., Inc., </pre><span class=\\\"citation\\\" data-id=\\\"854924\\\"><a
        href=\\\"/opinion/854924/sofa-entertainment-inc-v-dodger-productions-inc/\\\"><span
        class=\\\"volume\\\">709</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1273</span></a></span><pre class=\\\"inline\\\">, 1277
        (9th Cir.\\n2013)). Where there are no material facts at issue and\\n\u201Cthe
        parties dispute only the ultimate conclusions to be\\ndrawn from those facts,
        we may draw those conclusions\\nwithout usurping the function of the jury.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"854924\\\"><a href=\\\"/opinion/854924/sofa-entertainment-inc-v-dodger-productions-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> (citing\\nFisher </a></span><pre class=\\\"inline\\\">v.
        Dees, </pre><span class=\\\"citation\\\" data-id=\\\"472224\\\"><a href=\\\"/opinion/472224/marvin-fisher-dba-marvin-music-company-and-jack-segal-v-rick-dees/\\\"><span
        class=\\\"volume\\\">794</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">432</span></a></span><pre class=\\\"inline\\\">, 436 (9th
        Cir. 1986)). Indeed,\\nthe Supreme Court has specifically recognized that,\\n\u201C[w]here
        the district court has found facts sufficient to\\nevaluate each of the statutory
        factors, an appellate court\\n\u2018need not remand for further factfinding
        . . . [but] may\\nconclude as a matter of law that [the challenged use]\\n[does]
        not qualify as a fair use of the copyrighted work.\u2019\u201D\\nHarper &
        </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><span class=\\\"antecedent_guess\\\">Row,</span>
        <a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">560</span> </a></span><pre class=\\\"inline\\\">(citation
        omitted).\\n   Of course, the corollary to this point is true as well\u2014\\nwhere
        there are material facts in dispute and those facts\\n\\fORACLE AMERICA, INC.
        \  v. GOOGLE INC.                      55\\n\\n\\n\\nhave not yet been resolved
        by the trier of fact, appellate\\ncourts may not make findings of fact in
        the first instance.\\nSee Shawmut Bank, N.A. v. Kress Assocs., </pre><span
        class=\\\"citation no-link\\\"><span class=\\\"volume\\\">33</span> <span
        class=\\\"reporter\\\">F.3d</span> <span class=\\\"page\\\">1477</span></span><pre
        class=\\\"inline\\\">,\\n1504 (9th Cir. 1994) (\u201C[W]e must avoid finding
        facts in the\\nfirst instance.\u201D); see also Golden Bridge Tech., Inc.
        v.\\nNokia, Inc., </pre><span class=\\\"citation\\\" data-id=\\\"209884\\\"><a
        href=\\\"/opinion/209884/golden-bridge-technology-inc-v-nokia-inc/\\\"><span
        class=\\\"volume\\\">527</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1318</span></a></span><pre class=\\\"inline\\\">, 1323
        (Fed. Cir. 2008) (\u201CAppel-\\nlate courts review district court judgments;
        we do not find\\nfacts.\u201D). Here, it is undisputed that neither the jury
        nor\\nthe district court made findings of fact to which we can\\nrefer in
        assessing the question of whether Google\u2019s use of\\nthe API packages
        at issue was a \u201Cfair use\u201D within the\\nmeaning of Section 107. Oracle
        urges resolution of the\\nfair use question by arguing that the trial court
        should\\nhave decided the question as a matter of law based on the\\nundisputed
        facts developed at trial, and that we can do so\\nas well. Google, on the
        other hand, argues that many\\ncritical facts regarding fair use are in dispute.
        It asserts\\nthat the fact that the jury could not reach a resolution on\\nthe
        fair use defense indicates that at least some presuma-\\nbly reasonable jurors
        found its use to be fair. And, Google\\nasserts that, even if it is true that
        the district court erred\\nin discussing concepts of \u201Cinteroperability\u201D
        when consider-\\ning copyrightability, those concepts are still relevant to
        its\\nfair use defense. We turn first to a more detailed exami-\\nnation of
        fair use.\\n    The first factor in the fair use inquiry involves \u201Cthe\\npurpose
        and character of the use, including whether such\\nuse is of a commercial
        nature or is for nonprofit educa-\\ntional purposes.\u201D 17 U.S.C. \xA7
        107(1). This factor involves\\ntwo sub-issues: (1) \u201Cwhether and to what
        extent the new\\nwork is transformative,\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"112936\\\"><span class=\\\"antecedent_guess\\\">Campbell,</span>
        <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span class=\\\"volume\\\">510</span>
        <span class=\\\"reporter\\\">U.S.</span> at <span class=\\\"page\\\">579</span>
        </a></span><pre class=\\\"inline\\\">(cita-\\ntion and internal quotation
        marks omitted); and\\n(2) whether the use serves a commercial purpose.\\n
        \    A use is \u201Ctransformative\u201D if it \u201Cadds something new,\\nwith
        a further purpose or different character, altering the\\nfirst with new expression,
        meaning or message.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><a
        href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span class=\\\"id_token\\\">Id.</span>
        The\\ncritical </a></span><pre class=\\\"inline\\\">question is \u201Cwhether
        the new work merely super-\\n\\f56                       ORACLE AMERICA, INC.
        \  v. GOOGLE INC.\\n\\n\\n\\nsede[s] the objects of the original creation
        . . . or instead\\nadds something new.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"112936\\\"><a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> (citations and </a></span><pre class=\\\"inline\\\">internal
        quota-\\ntion marks omitted). This inquiry \u201Cmay be guided by the\\nexamples
        given in the preamble to \xA7 107, looking to\\nwhether the use is for criticism,
        or comment, or news\\nreporting, and the like.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 578-79. </span><pre
        class=\\\"inline\\\">\u201CThe Supreme\\nCourt has recognized that parodic
        works, like other works\\nthat comment and criticize, are by their nature
        often\\nsufficiently transformative to fit clearly under the fair use\\nexception.\u201D
        Mattel Inc. v. Walking Mountain Prods., </pre><span class=\\\"citation\\\"
        data-id=\\\"784601\\\"><a href=\\\"/opinion/784601/mattel-inc-a-delaware-corporation-v-walking-mountain-productions-a/\\\"><span
        class=\\\"volume\\\">353</span>\\n<span class=\\\"reporter\\\">F.3d</span>
        <span class=\\\"page\\\">792</span></a></span><pre class=\\\"inline\\\">,
        800 (9th Cir. 2003) (citing </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><span
        class=\\\"antecedent_guess\\\">Campbell,</span> <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"volume\\\">510</span> <span class=\\\"reporter\\\">U.S.</span> at\\n<span
        class=\\\"page\\\">579</span></a></span><pre class=\\\"inline\\\">).\\n     Courts
        have described new works as \u201Ctransformative\u201D\\nwhen \u201Cthe works
        use copy-righted material for purposes\\ndistinct from the purpose of the
        original material.\u201D Elvis\\nPresley Enters., Inc. v. Passport Video,
        </pre><span class=\\\"citation\\\" data-id=\\\"784183\\\"><a href=\\\"/opinion/784183/elvis-presley-enterprises-inc-v-passport-video/\\\"><span
        class=\\\"volume\\\">349</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">622</span></a></span><pre class=\\\"inline\\\">, 629\\n(9th
        Cir. 2003) (\u201CHere, Passport\u2019s use of many of the\\ntelevision clips
        is transformative because they are cited as\\nhistorical reference points
        in the life of a remarkable\\nentertainer.\u201D), overruled on other grounds
        by Flexible\\nLifeline Sys., Inc. v. Precision Lift, Inc., </pre><span class=\\\"citation\\\"
        data-id=\\\"223716\\\"><a href=\\\"/opinion/223716/flexible-lifeline-systems-inc-v-precision-lift-inc/\\\"><span
        class=\\\"volume\\\">654</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">989</span></a></span><pre class=\\\"inline\\\">, 995\\n(9th
        Cir. 2011) (per curiam); see also Bouchat v. Baltimore\\nRavens Ltd. P\u2019ship,
        </pre><span class=\\\"citation\\\" data-id=\\\"174657\\\"><a href=\\\"/opinion/174657/bouchat-v-baltimore-ravens-ltd-partnership/\\\"><span
        class=\\\"volume\\\">619</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">301</span></a></span><pre class=\\\"inline\\\">, 309-10
        (4th Cir. 2010)\\n(quoting A.V. ex rel. Vanderhyge v. iParadigms, LLC, </pre><span
        class=\\\"citation\\\" data-id=\\\"1028513\\\"><a href=\\\"/opinion/1028513/av-ex-rel-vanderhye-v-iparadigms-llc/\\\"><span
        class=\\\"volume\\\">562</span>\\n<span class=\\\"reporter\\\">F.3d</span>
        <span class=\\\"page\\\">630</span></a></span><pre class=\\\"inline\\\">,
        638 (4th Cir. 2009) (\u201C[A] transformative use is\\none that \u2018employ[s]
        the quoted matter in a different man-\\nner or for a different purpose from
        the original.\u2019\u201D)). \u201CA use\\nis considered transformative only
        where a defendant\\nchanges a plaintiff\u2019s copyrighted work or uses the
        plain-\\ntiff\u2019s copyrighted work in a different context such that the\\nplaintiff\u2019s
        work is transformed into a new creation.\u201D\\nPerfect 10, Inc. v. Amazon.com,
        Inc., </pre><span class=\\\"citation\\\" data-id=\\\"1228127\\\"><a href=\\\"/opinion/1228127/perfect-10-inc-v-amazon-com-inc/\\\"><span
        class=\\\"volume\\\">508</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1146</span></a></span><pre class=\\\"inline\\\">, 1165\\n(9th
        Cir. 2007) (quoting Wall Data Inc. v. L.A. County\\nSheriff\u2019s Dep\u2019t,
        </pre><span class=\\\"citation\\\" data-id=\\\"794298\\\"><a href=\\\"/opinion/794298/wall-data-inc-v-los-angeles-county-sheriffs-dept/\\\"><span
        class=\\\"volume\\\">447</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">769</span></a></span><pre class=\\\"inline\\\">, 778 (9th
        Cir. 2006), and\\nfinding that Google\u2019s use of thumbnail images in its\\nsearch
        engine was \u201Chighly transformative\u201D).\\n\\fORACLE AMERICA, INC.   v.
        GOOGLE INC.                    57\\n\\n\\n\\n    A work is not transformative
        where the user \u201Cmakes\\nno alteration to the expressive content or message
        of the\\noriginal work.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"1036738\\\"><span
        class=\\\"antecedent_guess\\\">Seltzer,</span> <a href=\\\"/opinion/1036738/dereck-seltzer-v-green-day-inc/\\\"><span
        class=\\\"volume\\\">725</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1177</span></a></span><pre class=\\\"inline\\\">;
        see also Wall\\n</pre><span class=\\\"citation\\\" data-id=\\\"794298\\\"><span
        class=\\\"antecedent_guess\\\">Data,</span> <a href=\\\"/opinion/794298/wall-data-inc-v-los-angeles-county-sheriffs-dept/\\\"><span
        class=\\\"volume\\\">447</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">778</span> </a></span><pre class=\\\"inline\\\">(\u201CThe
        Sheriff\u2019s Department created\\nexact copies of RUMBA\u2019s software.
        It then put those\\ncopies to the identical purpose as the original software.\\nSuch
        a use cannot be considered transformative.\u201D); </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"antecedent_guess\\\">Monge,</span>\\n<span class=\\\"volume\\\">688</span>
        <span class=\\\"reporter\\\">F.3d</span> at <span class=\\\"page\\\">1176</span>
        </span><pre class=\\\"inline\\\">(finding that a magazine\u2019s publication
        of\\nphotographs of a secret celebrity wedding \u201Csprinkled with\\nwritten
        commentary\u201D was \u201Cat best minimally transforma-\\ntive\u201D where
        the magazine \u201Cdid not transform the photos\\ninto a new work . . . or
        incorporate the photos as part of a\\nbroader work\u201D); Elvis Presley </pre><span
        class=\\\"citation\\\" data-id=\\\"784183\\\"><span class=\\\"antecedent_guess\\\">Enters.,</span>
        <a href=\\\"/opinion/784183/elvis-presley-enterprises-inc-v-passport-video/\\\"><span
        class=\\\"volume\\\">349</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">629</span>\\n</a></span><pre class=\\\"inline\\\">(finding
        that use of copyrighted clips of Elvis\u2019s television\\nappearances was
        not transformative where \u201Csome of the\\nclips [we]re played without much
        interruption, if any . . .\\n[and] instead serve[d] the same intrinsic entertainment\\nvalue
        that is protected by Plaintiffs\u2019 copyrights.\u201D). Where\\nthe use
        \u201Cis for the same intrinsic purpose as [the copyright\\nholder\u2019s]
        . . . such use seriously weakens a claimed fair\\nuse.\u201D Worldwide Church
        of God v. Phila. Church of God,\\nInc., </pre><span class=\\\"citation\\\"
        data-id=\\\"770584\\\"><a href=\\\"/opinion/770584/worldwide-church-of-god-a-california-corporation/\\\"><span
        class=\\\"volume\\\">227</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1110</span></a></span><pre class=\\\"inline\\\">, 1117
        (9th Cir. 2000) (quoting Weiss-\\nmann v. Freeman, </pre><span class=\\\"citation\\\"
        data-id=\\\"519154\\\"><a href=\\\"/opinion/519154/heidi-s-weissmann-md-cross-appellee-v-leonard-m-freeman-md/\\\"><span
        class=\\\"volume\\\">868</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">1313</span></a></span><pre class=\\\"inline\\\">, 1324
        (2d Cir. 1989)).\\n     Analysis of the first factor also requires inquiry
        into\\nthe commercial nature of the use. Use of the copyrighted\\nwork that
        is commercial \u201Ctends to weigh against a finding\\nof fair use.\u201D
        Harper & </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><span class=\\\"antecedent_guess\\\">Row,</span>
        <a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">562</span> </a></span><pre class=\\\"inline\\\">(\u201CThe
        crux of\\nthe profit/nonprofit distinction is not whether the sole\\nmotive
        of the use is monetary gain but whether the user\\nstands to profit from exploitation
        of the copyrighted\\nmaterial without paying the customary price.\u201D).
        \u201C[T]he\\nmore transformative the new work, the less will be the\\nsignificance
        of other factors, like commercialism, that may\\nweigh against a finding of
        fair use.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><span
        class=\\\"antecedent_guess\\\">Campbell,</span> <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"volume\\\">510</span> <span class=\\\"reporter\\\">U.S.</span>\\nat
        <span class=\\\"page\\\">579</span></a></span><pre class=\\\"inline\\\">.\\n
        \  The second factor\u2014the nature of the copyrighted\\nwork\u2014\u201Ccalls
        for recognition that some works are closer to\\n\\f58                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nthe core of intended copyright protection
        than others, with\\nthe consequence that fair use is more difficult to establish\\nwhen
        the former works are copied.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><a
        href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span class=\\\"id_token\\\">Id.</span>
        at 586. </a></span><pre class=\\\"inline\\\">This\\nfactor \u201Cturns on
        whether the work is informational or\\ncreative.\u201D Worldwide Church of
        </pre><span class=\\\"citation\\\" data-id=\\\"770584\\\"><span class=\\\"antecedent_guess\\\">God,</span>
        <a href=\\\"/opinion/770584/worldwide-church-of-god-a-california-corporation/\\\"><span
        class=\\\"volume\\\">227</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1118</span></a></span><pre class=\\\"inline\\\">;\\nsee
        also Harper & </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><span
        class=\\\"antecedent_guess\\\">Row,</span> <a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">563</span> </a></span><pre class=\\\"inline\\\">(\u201CThe
        law general-\\nly recognizes a greater need to disseminate factual works\\nthan
        works of fiction or fantasy.\u201D). Creative expression\\n\u201Cfalls within
        the core of the copyright\u2019s protective purpos-\\nes.\u201D </pre><span
        class=\\\"citation\\\" data-id=\\\"112936\\\"><span class=\\\"antecedent_guess\\\">Campbell,</span>
        <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span class=\\\"volume\\\">510</span>
        <span class=\\\"reporter\\\">U.S.</span> at <span class=\\\"page\\\">586</span></a></span><pre
        class=\\\"inline\\\">. Because computer pro-\\ngrams have both functional
        and expressive components,\\nhowever, where the functional components are
        themselves\\nunprotected (because, e.g., they are dictated by considera-\\ntions
        of efficiency or other external factors), those ele-\\nments should be afforded
        \u201Ca lower degree of protection\\nthan more traditional literary works.\u201D
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"antecedent_guess\\\">Sega,</span>
        <span class=\\\"volume\\\">977</span> <span class=\\\"reporter\\\">F.2d</span>
        at\\n<span class=\\\"page\\\">1526</span></span><pre class=\\\"inline\\\">.
        Thus, where the nature of the work is such that\\npurely functional elements
        exist in the work and it is\\nnecessary to copy the expressive elements in
        order to\\nperform those functions, consideration of this second\\nfactor
        arguably supports a finding that the use is fair.\\n    The third factor asks
        the court to examine \u201Cthe\\namount and substantiality of the portion
        used in relation\\nto the copyrighted work as a whole.\u201D 17 U.S.C. \xA7
        107(3).\\nAnalysis of this factor is viewed in the context of the\\ncopyrighted
        work, not the infringing work. Indeed, the\\nstatutory language makes clear
        that \u201Ca taking may not be\\nexcused merely because it is insubstantial
        with respect to\\nthe infringing work.\u201D Harper & </pre><span class=\\\"citation\\\"
        data-id=\\\"111432\\\"><span class=\\\"antecedent_guess\\\">Row,</span> <a
        href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">565</span></a></span><pre class=\\\"inline\\\">.\\n\u201CAs
        Judge Learned Hand cogently remarked, \u2018no plagia-\\nrist can excuse the
        wrong by showing how much of his\\nwork he did not pirate.\u2019\u201D </pre><span
        class=\\\"citation\\\" data-id=\\\"111432\\\"><a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"id_token\\\">Id.</span> (quoting Sheldon </a></span><pre class=\\\"inline\\\">v.
        Metro-\\nGoldwyn Pictures Corp., </pre><span class=\\\"citation\\\" data-id=\\\"1475281\\\"><a
        href=\\\"/opinion/1475281/sheldon-v-metro-goldwyn-pictures-corporation/\\\"><span
        class=\\\"volume\\\">81</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">49</span></a></span><pre class=\\\"inline\\\">, 56 (2d
        Cir. 1936)). In\\ncontrast, \u201Cthe fact that a substantial portion of the
        in-\\nfringing work was copied verbatim is evidence of the\\nqualitative value
        of the copied material, both to the origi-\\nnator and to the plagiarist who
        seeks to profit from mar-\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                      59\\n\\n\\n\\nketing
        someone else\u2019s copyrighted expression.\u201D </pre><span class=\\\"citation\\\"
        data-id=\\\"1475281\\\"><a href=\\\"/opinion/1475281/sheldon-v-metro-goldwyn-pictures-corporation/\\\"><span
        class=\\\"id_token\\\">Id.</span> The\\nNinth </a></span><pre class=\\\"inline\\\">Circuit
        has recognized that, while \u201Cwholesale\\ncopying does not preclude fair
        use per se, copying an\\nentire work militates against a finding of fair use.\u201D\\nWorldwide
        Church of </pre><span class=\\\"citation\\\" data-id=\\\"770584\\\"><span
        class=\\\"antecedent_guess\\\">God,</span> <a href=\\\"/opinion/770584/worldwide-church-of-god-a-california-corporation/\\\"><span
        class=\\\"volume\\\">227</span> <span class=\\\"reporter\\\">F.3d</span> at
        <span class=\\\"page\\\">1118</span> </a></span><pre class=\\\"inline\\\">(internal\\ncitation
        and quotation omitted). \u201CIf the secondary user\\nonly copies as much
        as is necessary for his or her intended\\nuse, then this factor will not weigh
        against him or her.\u201D\\nKelly v. Arriba Soft Corp., </pre><span class=\\\"citation\\\"
        data-id=\\\"782791\\\"><a href=\\\"/opinion/782791/kelly-v-arriba-soft-corp/\\\"><span
        class=\\\"volume\\\">336</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">811</span></a></span><pre class=\\\"inline\\\">, 820-21
        (9th Cir.\\n2003). Under this factor, \u201Cattention turns to the persua-\\nsiveness
        of a parodist\u2019s justification for the particular\\ncopying done, and
        the enquiry will harken back to the\\nfirst of the statutory factors . . .
        [because] the extent of\\npermissible copying varies with the purpose and
        character\\nof the use.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><span
        class=\\\"antecedent_guess\\\">Campbell,</span> <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"volume\\\">510</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">586</span></a></span><pre class=\\\"inline\\\">-87.\\n
        \    The fourth and final factor focuses on \u201Cthe effect of the\\nuse
        upon the potential market for or value of the copy-\\nrighted work.\u201D
        Harper & </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><span class=\\\"antecedent_guess\\\">Row,</span>
        <a href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"volume\\\">471</span> <span class=\\\"reporter\\\">U.S.</span> at
        <span class=\\\"page\\\">566</span></a></span><pre class=\\\"inline\\\">.
        This\\nfactor reflects the idea that fair use \u201Cis limited to copying\\nby
        others which does not materially impair the marketa-\\nbility of the work
        which is copied.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><a
        href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 566-67. </a></span><pre class=\\\"inline\\\">The\\nSupreme
        Court has said that this factor is \u201Cundoubtedly\\nthe single most important
        element of fair use.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"111432\\\"><a
        href=\\\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 566.\\n</a></span><pre class=\\\"inline\\\">It
        requires that courts \u201Cconsider not only the extent of\\nmarket harm caused
        by the particular actions of the\\nalleged infringer, but also whether unrestricted
        and\\nwidespread conduct of the sort engaged in by the defend-\\nant . . .
        would result in a substantially adverse impact on\\nthe potential market for
        the original.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><span
        class=\\\"antecedent_guess\\\">Campbell,</span> <a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"volume\\\">510</span> <span class=\\\"reporter\\\">U.S.</span>\\nat
        <span class=\\\"page\\\">590</span> </a></span><pre class=\\\"inline\\\">(citation
        and quotation marks omitted). \u201CMarket\\nharm is a matter of degree, and
        the importance of this\\nfactor will vary, not only with the amount of harm,
        but\\nalso with the relative strength of the showing on the other\\nfactors.\u201D
        </pre><span class=\\\"citation\\\" data-id=\\\"112936\\\"><a href=\\\"/opinion/112936/campbell-v-acuff-rose-music-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 590 </a></span><pre class=\\\"inline\\\">n.21.\\n
        \    Oracle asserts that all of these factors support its po-\\nsition that
        Google\u2019s use was not \u201Cfair use\u201D\u2014Google know-\\ningly and
        illicitly copied a creative work to further its own\\n\\f60                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\ncommercial purposes, did so verbatim,
        and did so to the\\ndetriment of Oracle\u2019s market position. These undisputa-\\nble
        facts, according to Oracle, should end the fair use\\ninquiry. Oracle\u2019s
        position is not without force. On many\\nof these points, Google does not
        debate Oracle\u2019s character-\\nization of its conduct, nor could it on
        the record evidence.\\n     Google contends, however, that, although it admitted-\\nly
        copied portions of the API packages and did so for what\\nwere purely commercial
        purposes, a reasonable juror still\\ncould find that: (1) Google\u2019s use
        was transformative;\\n(2) the Java API packages are entitled only to weak\\nprotection;
        (3) Google\u2019s use was necessary to work within\\na language that had become
        an industry standard; and\\n(4) the market impact on Oracle was not substantial.\\n
        \    On balance, we find that due respect for the limit of\\nour appellate
        function requires that we remand the fair\\nuse question for a new trial.
        First, although it is undis-\\nputed that Google\u2019s use of the API packages
        is commer-\\ncial, the parties disagree on whether its use is\\n\u201Ctransformative.\u201D
        Google argues that it is, because it\\nwrote its own implementing code, created
        its own virtual\\nmachine, and incorporated the packages into a\\nsmartphone
        platform. For its part, Oracle maintains that\\nGoogle\u2019s use is not transformative
        because: (1) \u201C[t]he same\\ncode in Android . . . enables programmers
        to invoke the\\nsame pre-programmed functions in exactly the same\\nway;\u201D
        and (2) Google\u2019s use of the declaring code and\\npackages does not serve
        a different function from Java.\\nAppellant Reply Br. 47. While Google overstates
        what\\nactivities can be deemed transformative under a correct\\napplication
        of the law, we cannot say that there are no\\nmaterial facts in dispute on
        the question of whether\\nGoogle\u2019s use is \u201Ctransformative,\u201D
        even under a correct\\nreading of the law. As such, we are unable to resolve
        this\\nissue on appeal.\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    61\\n\\n\\n\\n
        \    Next, while we have concluded that it was error for\\nthe trial court
        to focus unduly on the functional aspects of\\nthe packages, and on Google\u2019s
        competitive desire to\\nachieve commercial \u201Cinteroperability\u201D when
        deciding\\nwhether Oracle\u2019s API packages are entitled to copyright\\nprotection,
        we expressly noted that these factors may be\\nrelevant to a fair use analysis.
        While the trial court erred\\nin concluding that these factors were sufficient
        to over-\\ncome Oracle\u2019s threshold claim of copyrightability, reason-\\nable
        jurors might find that they are relevant to Google\u2019s\\nfair use defense
        under the second and third factors of the\\ninquiry. See </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"antecedent_guess\\\">Sega,</span> <span class=\\\"volume\\\">977</span>
        <span class=\\\"reporter\\\">F.2d</span> at <span class=\\\"page\\\">1524-25</span>
        </span><pre class=\\\"inline\\\">(discussing the\\nSecond Circuit\u2019s approach
        to \u201Cbreak[ing] down a computer\\nprogram into its component subroutines
        and sub-\\nsubroutines and then identif[ying] the idea or core func-\\ntional
        element of each\u201D in the context of the second fair\\nuse factor: the
        nature of the copyrighted work). We find\\nthis particularly true with respect
        to those core packages\\nwhich it seems may be necessary for anyone to copy
        if\\nthey are to write programs in the Java language. And, it\\nmay be that
        others of the packages were similarly essen-\\ntial components of any Java
        language-based program. So\\nfar, that type of filtration analysis has not
        occurred.\\n    Finally, as to market impact, the district court found\\nthat
        \u201CSun and Oracle never successfully developed its own\\nsmartphone platform
        using Java technology.\u201D Copyright-\\nability Decision, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">872</span> <span class=\\\"reporter\\\">F.
        Supp.</span> <span class=\\\"page\\\">2d</span> </span><pre class=\\\"inline\\\">at
        978. But Oracle\\nargues that, when Google copied the API packages, Oracle\\nwas
        licensing in the mobile and smartphone markets, and\\nthat Android\u2019s
        release substantially harmed those com-\\nmercial opportunities as well as
        the potential market for a\\nJava smartphone device. Because there are material\\nfacts
        in dispute on this factor as well, remand is neces-\\nsary.\\n   Ultimately,
        we conclude that this is not a case in\\nwhich the record contains sufficient
        factual findings upon\\nwhich we could base a de novo assessment of Google\u2019s\\n\\f62
        \                      ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\naffirmative
        defense of fair use. Accordingly, we remand\\nthis question to the district
        court for further proceedings.\\nOn remand, the district court should revisit
        and revise its\\njury instructions on fair use consistent with this opinion\\nso
        as to provide the jury with a clear and appropriate\\npicture of the fair
        use defense. 17\\n               II. GOOGLE\u2019S CROSS-APPEAL\\n    Google
        cross-appeals from the portion of the district\\ncourt\u2019s final judgment
        entered in favor of Oracle on its\\nclaim for copyright infringement as to
        the nine lines of\\n\\n\\n     17  Google argues that, if we allow it to retry
        its fair\\nuse defense on remand, it is entitled to a retrial on in-\\nfringement
        as well. We disagree. The question of wheth-\\ner Google\u2019s copying constituted
        infringement of a\\ncopyrighted work is \u201Cdistinct and separable\u201D
        from the\\nquestion of whether Google can establish a fair use de-\\nfense
        to its copying. See Gasoline Prods. Co. v. Champlin\\nRefining Co., </pre><span
        class=\\\"citation\\\" data-id=\\\"101754\\\"><a href=\\\"/opinion/101754/gasoline-prods-co-v-champlin-co/\\\"><span
        class=\\\"volume\\\">283</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">494</span></a></span><pre class=\\\"inline\\\">, 500 (1931)
        (\u201CWhere the prac-\\ntice permits a partial new trial, it may not properly
        be\\nresorted to unless it clearly appears that the issue to be\\nretried
        is so distinct and separable from the others that a\\ntrial of it alone may
        be had without injustice.\u201D). Indeed,\\nwe have emphasized more than once
        in this opinion the\\nextent to which the questions are separable, and the\\nconfusion
        and error caused when they are blurred. The\\nissues are not \u201Cinterwoven\u201D
        and it would not create \u201Ccon-\\nfusion and uncertainty\u201D to reinstate
        the infringement\\nverdict and submit fair use to a different jury. </pre><span
        class=\\\"citation\\\" data-id=\\\"101754\\\"><a href=\\\"/opinion/101754/gasoline-prods-co-v-champlin-co/\\\"><span
        class=\\\"id_token\\\">Id.</span> We\\nnote, </a></span><pre class=\\\"inline\\\">moreover,
        that, because Google only mentions this\\npoint in passing, with no development
        of an argument in\\nsupport of it, under our case law, it has not been properly\\nraised.
        See SmithKline Beecham Corp. v. Apotex Corp.,\\n</pre><span class=\\\"citation\\\"
        data-id=\\\"211420\\\"><a href=\\\"/opinion/211420/smithkline-beecham-corp-v-apotex-corrected-date/\\\"><span
        class=\\\"volume\\\">439</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1312</span></a></span><pre class=\\\"inline\\\">, 1320
        (Fed. Cir. 2006) (when a party pro-\\nvides no developed argument on a point,
        we treat that\\nargument as waived) (collecting cases).\\n\\fORACLE AMERICA,
        INC.   v. GOOGLE INC.                     63\\n\\n\\n\\nrangeCheck code and
        the eight decompiled files. Final\\nJudgment, Oracle Am., Inc. v. Google Inc.,
        No. 3:10-cv-\\n3561 (N.D. Cal. June 20, 2012), ECF No. 1211. Specifical-\\nly,
        Google appeals from the district court\u2019s decisions:\\n(1) granting Oracle\u2019s
        motion for JMOL of infringement as\\nto the eight decompiled Java files that
        Google copied into\\nAndroid; and (2) denying Google\u2019s motion for JMOL
        with\\nrespect to rangeCheck.\\n    When reviewing a district court\u2019s
        grant or denial of a\\nmotion for JMOL, we apply the procedural law of the\\nrelevant
        regional circuit, here the Ninth Circuit. Trading\\nTechs. Int\u2019l, Inc.
        v. eSpeed, Inc., </pre><span class=\\\"citation\\\" data-id=\\\"1312587\\\"><a
        href=\\\"/opinion/1312587/trading-technologies-intern-inc-v-espeed-inc/\\\"><span
        class=\\\"volume\\\">595</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">1340</span></a></span><pre class=\\\"inline\\\">, 1357
        (Fed.\\nCir. 2010). The Ninth Circuit reviews a district court\u2019s\\nJMOL
        decision de novo, applying the same standard as\\nthe district court. Mangum
        v. Action Collection Serv.,\\nInc., </pre><span class=\\\"citation\\\" data-id=\\\"1213892\\\"><a
        href=\\\"/opinion/1213892/mangum-v-action-collection-service-inc/\\\"><span
        class=\\\"volume\\\">575</span> <span class=\\\"reporter\\\">F.3d</span> <span
        class=\\\"page\\\">935</span></a></span><pre class=\\\"inline\\\">, 938 (9th
        Cir. 2009). To grant judg-\\nment as a matter of law, the court must find
        that \u201Cthe\\nevidence presented at trial permits only one reasonable\\nconclusion\u201D
        and that \u201Cno reasonable juror could find in the\\nnon-moving party\u2019s
        favor.\u201D </pre><span class=\\\"citation\\\" data-id=\\\"1213892\\\"><a
        href=\\\"/opinion/1213892/mangum-v-action-collection-service-inc/\\\"><span
        class=\\\"id_token\\\">Id.</span> at 938-39 </a></span><pre class=\\\"inline\\\">(citation
        and\\ninternal quotation marks omitted).\\n    Oracle explains that the eight
        decompiled files at is-\\nsue \u201Ccontain security functions governing access
        to net-\\nwork files\u201D while rangeCheck \u201Cfacilitates an important\\nsorting
        function, frequently called upon during the opera-\\ntion of Java and Android.\u201D
        Oracle Response to Cross-\\nAppeal 60-61. At trial, Google conceded that it
        copied the\\neight decompiled Java code files and the nine lines of code\\nreferred
        to as rangeCheck into Android. Its only defense\\nwas that the copying was
        de minimis. Accordingly, the\\ndistrict court instructed the jury that, \u201C[w]ith
        respect to\\nthe infringement issues concerning the rangeCheck and\\nother
        similar files, Google agrees that the accused lines of\\ncode and comments
        came from the copyrighted materials\\nbut contends that the amounts involved
        were so negligible\\nas to be de minimis and thus should be excluded.\u201D
        Final\\nCharge to the Jury (Phase One), Oracle Am., Inc. v.\\n\\f64                      ORACLE
        AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nGoogle, Inc., No. 3:10-cv-3561 (N.D.
        Cal. Apr. 30, 2012),\\nECF No. 1018, at 14.\\n     Although the jury found
        that Google infringed Ora-\\ncle\u2019s copyright in the nine lines of code
        comprising\\nrangeCheck, it returned a noninfringement verdict as to\\neight
        decompiled security files. But because the trial\\ntestimony was that Google\u2019s
        use of the decompiled files\\nwas significant\u2014and there was no testimony
        to the con-\\ntrary\u2014the district court concluded that \u201C[n]o reasonable\\njury
        could find that this copying was de minimis.\u201D Order\\nGranting JMOL on
        Decompiled Files, 2012 U.S. Dist.\\nLEXIS 66417, at *6. As such, the court
        granted Oracle\u2019s\\nmotion for JMOL of infringement as to the decompiled\\nsecurity
        files.\\n     On appeal, Google maintains that its copying of\\nrangeCheck
        and the decompiled security files was de\\nminimis and thus did not infringe
        any of Oracle\u2019s copy-\\nrights. According to Google, the district court
        should\\nhave denied Oracle\u2019s motion for JMOL \u201Cbecause substan-\\ntial
        evidence supported the jury\u2019s verdict that Google\u2019s use\\nof eight
        decompiled test files was de minimis.\u201D Cross-\\nAppellant Br. 76. Google
        further argues that the court\\nshould have granted its motion for JMOL as
        to\\nrangeCheck because the \u201Ctrial evidence revealed that the\\nnine
        lines of rangeCheck code were both quantitatively\\nand qualitatively insignificant
        in relation to the [Java]\\nplatform.\u201D </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"id_token\\\">Id.</span> at 78.\\n</span><pre class=\\\"inline\\\">
        \   In response, Oracle argues that the Ninth Circuit does\\nnot recognize
        a de minimis defense to copyright infringe-\\nment and that, even if it does,
        we should affirm the judg-\\nments of infringement on grounds that Google\u2019s
        copying\\nwas significant. Because we agree with Oracle on its\\nsecond point,
        we need not address the first, except to note\\nthat there is some conflicting
        Ninth Circuit precedent on\\nthe question of whether there is a free-standing
        de mini-\\nmis defense to copyright infringement or whether the\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                    65\\n\\n\\n\\nsubstantiality
        of the alleged copying is best addressed as\\npart of a fair use defense.
        Compare Norse v. Henry Holt &\\nCo., </pre><span class=\\\"citation\\\" data-id=\\\"604912\\\"><a
        href=\\\"/opinion/604912/harold-norse-v-henry-holt-and-co-and-ted-morgan/\\\"><span
        class=\\\"volume\\\">991</span> <span class=\\\"reporter\\\">F.2d</span> <span
        class=\\\"page\\\">563</span></a></span><pre class=\\\"inline\\\">, 566 (9th
        Cir. 1993) (indicating that\\n\u201Ceven a small taking may sometimes be actionable\u201D
        and\\nthe \u201Cquestion of whether a copying is substantial enough\\nto be
        actionable may be best resolved through the fair use\\ndoctrine\u201D), with
        Newton v. Diamond, </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">388</span>
        <span class=\\\"reporter\\\">F.3d</span> <span class=\\\"page\\\">1189</span></span><pre
        class=\\\"inline\\\">, 1192-\\n93 (9th Cir. 2003) (\u201CFor an unauthorized
        use of a copy-\\nrighted work to be actionable, the use must be significant\\nenough
        to constitute infringement. This means that even\\nwhere the fact of copying
        is conceded, no legal conse-\\nquences will follow from that fact unless the
        copying is\\nsubstantial.\u201D) (internal citation omitted)). 18\\n    Even
        assuming that the Ninth Circuit recognizes a\\nstand-alone de minimis defense
        to copyright infringement,\\nhowever, we conclude that: (1) the jury reasonably
        found\\nthat Google\u2019s copying of the rangeCheck files was more\\nthan
        de minimis; and (2) the district court correctly\\nconcluded that the defense
        failed as a matter of law with\\nrespect to the decompiled security files.\\n
        \   First, the unrebutted testimony at trial revealed that\\nrangeCheck and
        the decompiled security files were signif-\\nicant to both Oracle and Google.
        Oracle\u2019s expert, Dr. John\\nMitchell, testified that Android devices
        call the\\n\\n\\n   18   At least one recent district court decision has rec-\\nognized
        uncertainty in Ninth Circuit law on this point.\\nSee Brocade Commc\u2019ns
        Sys. v. A10 Networks, Inc., No. 10-\\ncv-3428, </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">2013</span> <span class=\\\"reporter\\\">U.S.
        Dist. LEXIS</span> <span class=\\\"page\\\">8113</span></span><pre class=\\\"inline\\\">,
        at *33 (N.D. Cal.\\nJan. 10, 2013) (\u201CThe Ninth Circuit has been unclear
        about\\nwhether the de minimis use doctrine serves as an affirma-\\ntive defense
        under the Copyright Act\u2019s fair use exceptions\\nor whether the doctrine
        merely highlights plaintiffs\u2019\\nobligation to show that \u2018the use
        must be significant\\nenough to constitute infringement.\u2019\u201D) (citing
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"antecedent_guess\\\">Newton,</span>
        <span class=\\\"volume\\\">388</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        at <span class=\\\"page\\\">1193</span></span><pre class=\\\"inline\\\">;
        </pre><span class=\\\"citation\\\" data-id=\\\"604912\\\"><span class=\\\"antecedent_guess\\\">Norse,</span>
        <a href=\\\"/opinion/604912/harold-norse-v-henry-holt-and-co-and-ted-morgan/\\\"><span
        class=\\\"volume\\\">991</span> <span class=\\\"reporter\\\">F.2d</span> at
        <span class=\\\"page\\\">566</span></a></span><pre class=\\\"inline\\\">).\\n\\f66
        \                      ORACLE AMERICA, INC.   v. GOOGLE INC.\\n\\n\\n\\nrangeCheck
        function 2,600 times just in powering on the\\ndevice. Although Google argues
        that the eight decompiled\\nfiles were insignificant because they were used
        only to\\ntest the Android platform, Dr. Mitchell testified that\\n\u201Cusing
        the copied files even as test files would have been\\nsignificant use\u201D
        and the district court specifically found\\nthat \u201C[t]here was no testimony
        to the contrary.\u201D Order\\nGranting JMOL on Decompiled Files, 2012 U.S.
        Dist.\\nLEXIS 66417, at *6. Given this testimony, a reasonable\\njury could
        not have found Google\u2019s copying de minimis.\\n    Google emphasizes that
        the nine lines of rangeCheck\\ncode \u201Crepresented an infinitesimal percentage
        of the 2.8\\nmillion lines of code in the 166 Java packages\u2014let alone\\nthe
        millions of lines of code in the entire [Java] platform.\u201D\\nGoogle Cross-Appeal
        Br. 78-79. To the extent Google is\\narguing that a certain minimum number
        of lines of code\\nmust be copied before a court can find infringement, that\\nargument
        is without merit. See Baxter v. MCA, Inc., </pre><span class=\\\"citation\\\"
        data-id=\\\"483610\\\"><a href=\\\"/opinion/483610/leslie-t-baxter-v-mca-inc-a-delaware-corporation-universal-city/\\\"><span
        class=\\\"volume\\\">812</span>\\n<span class=\\\"reporter\\\">F.2d</span>
        <span class=\\\"page\\\">421</span></a></span><pre class=\\\"inline\\\">,
        425 (9th Cir. 1987) (\u201C[N]o bright line rule exists\\nas to what quantum
        of similarity is permitted.\u201D). And,\\ngiven the trial testimony that
        both rangeCheck and the\\ndecompiled security files are qualitatively significant
        and\\nGoogle copied them in their entirety, Google cannot show\\nthat the
        district court erred in denying its motion for\\nJMOL.\\n    We have considered
        Google\u2019s remaining arguments\\nand find them unpersuasive. Accordingly,
        we affirm both\\nof the JMOL decisions at issue in Google\u2019s cross-appeal.\\n
        \        III. GOOGLE\u2019S POLICY-BASED ARGUMENTS\\n    Many of Google\u2019s
        arguments, and those of some amici,\\nappear premised on the belief that copyright
        is not the\\ncorrect legal ground upon which to protect intellectual\\nproperty
        rights to software programs; they opine that\\npatent protection for such
        programs, with its insistence on\\nnon-obviousness, and shorter terms of protection,
        might\\nbe more applicable, and sufficient. Indeed, the district\\n\\fORACLE
        AMERICA, INC.   v. GOOGLE INC.                    67\\n\\n\\n\\ncourt\u2019s
        method of operation analysis seemed to say as\\nmuch. Copyrightability Decision,
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">872</span>
        <span class=\\\"reporter\\\">F. Supp.</span> <span class=\\\"page\\\">2d</span>
        </span><pre class=\\\"inline\\\">at 984\\n(stating that this case raises the
        question of \u201Cwhether the\\ncopyright holder is more appropriately asserting
        an\\nexclusive right to a functional system, process, or method\\nof operation
        that belongs in the realm of patents, not\\ncopyrights\u201D). Google argues
        that \u201C[a]fter Sega, developers\\ncould no longer hope to protect [software]
        interfaces by\\ncopyright . . . Sega signaled that the only reliable means\\nfor
        protecting the functional requirements for achieving\\ninteroperability was
        by patenting them.\u201D Appellee Br. 40\\n(quoting Pamela Samuelson, Are
        Patents on Interfaces\\nImpeding Interoperability? </pre><span class=\\\"citation
        no-link\\\"><span class=\\\"volume\\\">93</span> <span class=\\\"reporter\\\">Minn.</span>
        <span class=\\\"page\\\">L</span></span><pre class=\\\"inline\\\">. Rev. 1943,
        1959\\n(2009)). And, Google relies heavily on articles written by\\nProfessor
        Pamela Samuelson, who has argued that \u201Cit\\nwould be best for a commission
        of computer program\\nexperts to draft a new form of intellectual property
        law for\\nmachine-readable programs.\u201D           Pamela Samuelson,\\nCONTU
        Revisited: The Case Against Copyright Protection\\nfor Computer Programs in
        Machine-Readable Form, 1984\\nDuke L.J. 663, 764 (1984). Professor Samuelson
        has more\\nrecently argued that \u201CAltai and Sega contributed to the\\neventual
        shift away from claims of copyright in program\\ninterfaces and toward reliance
        on patent protection.\\nPatent protection also became more plausible and attrac-\\ntive
        as the courts became more receptive to software\\npatents.\u201D Samuelson,
        </pre><span class=\\\"citation no-link\\\"><span class=\\\"volume\\\">93</span>
        <span class=\\\"reporter\\\">Minn.</span> <span class=\\\"page\\\">L</span></span><pre
        class=\\\"inline\\\">. Rev. at 1959.\\n    Although Google, and the authority
        on which it relies,\\nseem to suggest that software is or should be entitled
        to\\nprotection only under patent law\u2014not copyright law\u2014\\nseveral
        commentators have recently argued the exact\\nopposite.       See     Technology
        \  Quarterly, Stalking\\nTrolls, ECONOMIST, Mar. 8, 2014, http://www.economist.\\ncom/news/technology-quarterly/21598321-intellectual-\\nproperty-after-being-blamed-stymying-innovation-\\namerica-vague
        (\u201C[M]any innovators have argued that the\\nelectronics and software industries
        would flourish if\\n\\f68                       ORACLE AMERICA, INC.   v.
        GOOGLE INC.\\n\\n\\n\\ncompanies trying to bring new technology (software\\ninnovations
        included) to market did not have to worry\\nabout being sued for infringing
        thousands of absurd\\npatents at every turn. A perfectly adequate means of\\nprotecting
        and rewarding software developers for their\\ningenuity has existed for over
        300 years. It is called\\ncopyright.\u201D); Timothy B. Lee, Will the Supreme
        Court save\\nus from software patents?, WASH. POST, Feb. 26, 2014, 1:13\\nPM,
        http://www.washingtonpost.com/blogs/the-switch/wp/\\n2014/02/26/will-the-supreme-court-save-us-from-software-\\npatents/
        (\u201CIf you write a book or a song, you can get copy-\\nright protection
        for it. If you invent a new pill or a better\\nmousetrap, you can get a patent
        on it. But for the last\\ntwo decades, software has had the distinction of
        being\\npotentially eligible for both copyright and patent protec-\\ntion.
        Critics say that\u2019s a mistake. They argue that the\\ncomplex and expensive
        patent system is a terrible fit for\\nthe fast-moving software industry. And
        they argue that\\npatent protection is unnecessary because software innova-\\ntors
        already have copyright protection available.\u201D).\\n     Importantly for
        our purposes, the Supreme Court has\\nmade clear that \u201C[n]either the
        Copyright Statute nor any\\nother says that because a thing is patentable
        it may not\\nbe copyrighted.\u201D Mazer v. Stein, </pre><span class=\\\"citation\\\"
        data-id=\\\"105200\\\"><a href=\\\"/opinion/105200/mazer-v-stein/\\\"><span
        class=\\\"volume\\\">347</span> <span class=\\\"reporter\\\">U.S.</span> <span
        class=\\\"page\\\">201</span></a></span><pre class=\\\"inline\\\">, 217 (1954).\\nIndeed,
        the thrust of the CONTU Report is that copyright\\nis \u201Cthe most suitable
        mode of legal protection for computer\\nsoftware.\u201D Peter S. Menell, An
        Analysis of the Scope of\\nCopyright Protection for Application Programs,
        41 Stan.\\nL. Rev. 1045, 1072 (1989); see also CONTU Report at 1\\n(recommending
        that copyright law be amended \u201Cto make\\nit explicit that computer programs,
        to the extent that they\\nembody an author\u2019s original creation, are proper
        subject\\nmatter of copyright\u201D). Until either the Supreme Court or\\nCongress
        tells us otherwise, we are bound to respect the\\nNinth Circuit\u2019s decision
        to afford software programs\\nprotection under the copyright laws. We thus
        decline any\\n\\fORACLE AMERICA, INC.   v. GOOGLE INC.                    69\\n\\n\\n\\ninvitation
        to declare that protection of software programs\\nshould be the domain of
        patent law, and only patent law.\\n                         CONCLUSION\\n
        \    For the foregoing reasons, we conclude that the de-\\nclaring code and
        the structure, sequence, and organiza-\\ntion of the 37 Java API packages
        at issue are entitled to\\ncopyright protection. We therefore reverse the
        district\\ncourt\u2019s copyrightability determination with instructions to\\nreinstate
        the jury\u2019s infringement verdict. Because the\\njury hung on fair use,
        we remand Google\u2019s fair use defense\\nfor further proceedings consistent
        with this decision.\\n    With respect to Google\u2019s cross-appeal, we affirm
        the\\ndistrict court\u2019s decisions: (1) granting Oracle\u2019s motion for\\nJMOL
        as to the eight decompiled Java files that Google\\ncopied into Android; and
        (2) denying Google\u2019s motion for\\nJMOL with respect to the rangeCheck
        function. Accord-\\ningly, we affirm-in-part, reverse-in-part, and remand
        for\\nfurther proceedings.\\n    AFFIRMED-IN-PART, REVERSED-IN-PART,\\n              AND
        REMANDED\\n\\f</pre>\",\"extracted_by_ocr\":false,\"ordering_key\":null,\"opinions_cited\":[\"https://www.courtlistener.com/api/rest/v4/opinions/101754/\",\"https://www.courtlistener.com/api/rest/v4/opinions/105200/\",\"https://www.courtlistener.com/api/rest/v4/opinions/111432/\",\"https://www.courtlistener.com/api/rest/v4/opinions/112420/\",\"https://www.courtlistener.com/api/rest/v4/opinions/112568/\",\"https://www.courtlistener.com/api/rest/v4/opinions/112936/\",\"https://www.courtlistener.com/api/rest/v4/opinions/117991/\",\"https://www.courtlistener.com/api/rest/v4/opinions/118019/\",\"https://www.courtlistener.com/api/rest/v4/opinions/155289/\",\"https://www.courtlistener.com/api/rest/v4/opinions/174657/\",\"https://www.courtlistener.com/api/rest/v4/opinions/209884/\",\"https://www.courtlistener.com/api/rest/v4/opinions/211420/\",\"https://www.courtlistener.com/api/rest/v4/opinions/223716/\",\"https://www.courtlistener.com/api/rest/v4/opinions/423653/\",\"https://www.courtlistener.com/api/rest/v4/opinions/426378/\",\"https://www.courtlistener.com/api/rest/v4/opinions/429815/\",\"https://www.courtlistener.com/api/rest/v4/opinions/468175/\",\"https://www.courtlistener.com/api/rest/v4/opinions/472224/\",\"https://www.courtlistener.com/api/rest/v4/opinions/474509/\",\"https://www.courtlistener.com/api/rest/v4/opinions/483610/\",\"https://www.courtlistener.com/api/rest/v4/opinions/519154/\",\"https://www.courtlistener.com/api/rest/v4/opinions/530034/\",\"https://www.courtlistener.com/api/rest/v4/opinions/537780/\",\"https://www.courtlistener.com/api/rest/v4/opinions/588898/\",\"https://www.courtlistener.com/api/rest/v4/opinions/591021/\",\"https://www.courtlistener.com/api/rest/v4/opinions/597418/\",\"https://www.courtlistener.com/api/rest/v4/opinions/604912/\",\"https://www.courtlistener.com/api/rest/v4/opinions/678566/\",\"https://www.courtlistener.com/api/rest/v4/opinions/691310/\",\"https://www.courtlistener.com/api/rest/v4/opinions/714044/\",\"https://www.courtlistener.com/api/rest/v4/opinions/743588/\",\"https://www.courtlistener.com/api/rest/v4/opinions/744681/\",\"https://www.courtlistener.com/api/rest/v4/opinions/746914/\",\"https://www.courtlistener.com/api/rest/v4/opinions/767633/\",\"https://www.courtlistener.com/api/rest/v4/opinions/770331/\",\"https://www.courtlistener.com/api/rest/v4/opinions/770584/\",\"https://www.courtlistener.com/api/rest/v4/opinions/774772/\",\"https://www.courtlistener.com/api/rest/v4/opinions/779443/\",\"https://www.courtlistener.com/api/rest/v4/opinions/781339/\",\"https://www.courtlistener.com/api/rest/v4/opinions/782791/\",\"https://www.courtlistener.com/api/rest/v4/opinions/784183/\",\"https://www.courtlistener.com/api/rest/v4/opinions/784601/\",\"https://www.courtlistener.com/api/rest/v4/opinions/785344/\",\"https://www.courtlistener.com/api/rest/v4/opinions/787063/\",\"https://www.courtlistener.com/api/rest/v4/opinions/788158/\",\"https://www.courtlistener.com/api/rest/v4/opinions/794298/\",\"https://www.courtlistener.com/api/rest/v4/opinions/805822/\",\"https://www.courtlistener.com/api/rest/v4/opinions/854924/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1028513/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1036738/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1213892/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1228127/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1312587/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1475281/\",\"https://www.courtlistener.com/api/rest/v4/opinions/1492993/\",\"https://www.courtlistener.com/api/rest/v4/opinions/2959739/\"]}"
    headers:
      Alt-Svc:
      - h3=":443"; ma=86400
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 20 Jan 2025 11:19:19 GMT
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 1cae0bb0106fc058447f3b32dee7b228.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - 1hrnWHw-pYijXuS9Y044VDHc9ff6TW3loOQVItTsAFwczYVidAaXuA==
      X-Amz-Cf-Pop:
      - IAH50-C4
      X-Cache:
      - Miss from cloudfront
      allow:
      - GET, PUT, PATCH, DELETE, HEAD, OPTIONS
      content-encoding:
      - gzip
      content-security-policy:
      - 'object-src ''self'' https://storage.courtlistener.com/; frame-src ''self''
        https://storage.courtlistener.com/ https://hcaptcha.com/ https://*.hcaptcha.com/;
        media-src ''self'' https://storage.courtlistener.com/ data:; font-src ''self''
        https://storage.courtlistener.com/ data:; base-uri ''self''; upgrade-insecure-requests;
        connect-src ''self'' https://storage.courtlistener.com/ https://hcaptcha.com/
        https://*.hcaptcha.com/ https://plausible.io/; style-src ''self'' ''report-sample''
        https://storage.courtlistener.com/ https://hcaptcha.com/ https://*.hcaptcha.com/
        ''unsafe-inline''; script-src ''self'' ''report-sample'' https://storage.courtlistener.com/
        https://hcaptcha.com/ https://*.hcaptcha.com/ https://plausible.io/; default-src
        ''self'' https://storage.courtlistener.com/; img-src ''self'' https://storage.courtlistener.com/
        https://portraits.free.law/ https://seals.free.law/ data:'
      cross-origin-opener-policy:
      - same-origin
      permissions-policy:
      - browsing-topics=()
      referrer-policy:
      - same-origin
      server:
      - uvicorn
      strict-transport-security:
      - max-age=63072000; includeSubDomains; preload
      vary:
      - Accept, origin, Cookie
      - accept-encoding
      x-content-type-options:
      - nosniff
      x-frame-options:
      - DENY
    status:
      code: 200
      message: OK
version: 1
