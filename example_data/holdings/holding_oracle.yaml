holdings:
  - inputs:
      type: fact
      content: "{the Java API} was an original work"
      truth: false
    outputs:
      type: fact
      content: the Java API was copyrightable
      truth: false
    mandatory: true
    enactments:
      node: /us/usc/t17/s102/a
      exact:
        Copyright protection subsists, in accordance with this title, in original
        works of authorship fixed in any tangible medium of expression, now known or
        later developed, from which they can be perceived, reproduced, or otherwise
        communicated, either directly or with the aid of a machine or device.
      name: copyright protection provision
      anchors:
        - qualify for copyright protection. |17 U.S.C. § 102(a)|.
    anchors: By statute, a work |must be “original” to qualify| for
  - inputs:
      - type: fact
        content:
          the Java API was independently created by the author, as opposed to copied
          from other works
      - type: fact
        content: the Java API possessed at least some minimal degree of creativity
    outputs:
      type: fact
      content: the Java API was an original work
    mandatory: true
    universal: true
    enactments: copyright protection provision
  - inputs:
      - the Java API was an original work
      - type: fact
        content: the Java API was the expression of an idea
      - type: fact
        content: the Java API was an idea
        truth: false
    despite:
      - type: fact
        content:
          the Java API was essentially the only way to express the idea that it
          embodied
      - type: fact
        content: the Java API was a scene a faire
    outputs:
      type: fact
      content: the Java API was copyrightable
    mandatory: true
    enactments: copyright protection provision
    enactments_despite:
      node: /us/usc/t17/s102/b
      selection: true
      name: copyright exceptions full
  - inputs:
      - type: fact
        content: "{the Java language} was a computer program"
      - type: fact
        content: the Java API was the source code of the Java language
    outputs:
      type: fact
      content: the Java API was a literal element of the Java language
    mandatory: true
    universal: true
    enactments:
      - copyright protection provision
      - copyright exceptions full
  - inputs:
      - the Java language was a computer program
      - type: fact
        content: the Java API was the object code of the Java language
    outputs: the Java API was a literal element of the Java language
    mandatory: true
    universal: true
    enactments:
      - copyright protection provision
      - copyright exceptions full
  - inputs:
      - the Java language was a computer program
      - the Java API was a literal element of the Java language
    outputs: the Java API was copyrightable
    mandatory: true
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
  - inputs:
      - the Java language was a computer program
      - type: fact
        content:
          the Java API was the sequence, structure, and organization of the Java
          language
    outputs:
      type: fact
      content: the Java API was a non-literal element of the Java language
    mandatory: true
    universal: true
    enactments:
      - copyright protection provision
      - copyright exceptions full
  - inputs:
      - type: fact
        content: the Java language was a computer program
      - type: fact
        content: the Java API was the user interface of the Java language
    outputs:
      type: fact
      content: the Java API was a non-literal element of the Java language
    mandatory: true
    universal: true
    enactments:
      - copyright protection provision
      - copyright exceptions full
  - inputs:
      - type: fact
        content: the Java language was a computer program
      - type: fact
        content: the Java API was a non-literal element of the Java language
      - type: fact
        content: the Java API was the expression of an idea
      - type: fact
        content: the Java API was an idea
        truth: false
    outputs: the Java API was copyrightable
    mandatory: true
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
  - inputs:
      - the Java language was a computer program
      - the Java API was a non-literal element of the Java language
      - type: fact
        content: the Java API was the expression of an idea
        truth: false
      - type: fact
        content: the Java API was an idea
    outputs:
      type: fact
      content: the Java API was copyrightable
      truth: false
    mandatory: true
    enactments: copyright exceptions full
    enactments_despite: copyright protection provision
  - inputs:
      - the Java language was a computer program
      - type: fact
        content: the Java API was a set of application programming interface declarations
      - the Java API was an original work
      - the Java API was a non-literal element of the Java language
      - the Java API was the expression of an idea
      - type: fact
        content:
          the Java API was essentially the only way to express the idea that it
          embodied
        truth: false
      - type: fact
        content: the Java API was creative
      - type: fact
        content: it was possible to use the Java language without copying the Java API
    despite:
      - type: fact
        content: the Java API was a method of operation
      - type: fact
        content: the Java API contained short phrases
      - type: fact
        content: the Java API became so popular that it was the industry standard
      - type: fact
        content:
          there was a preexisting community of programmers accustomed to using
          the Java API
    outputs:
      type: fact
      content: the Java API was copyrightable
    mandatory: true
    enactments: copyright protection provision
    enactments_despite:
      - node: /us/usc/t17/s102/b
        selection:
          - exact:
              In no case does copyright protection for an original work of authorship
              extend to any
          - exact: method of operation
        name: in no case method of operation
      - node: /us/cfr/t37/s202.1
        heading: Material not subject to copyright.
        content:
          "The following are examples of works not subject to copyright and applications
          for registration of such works cannot be entertained:"
        children:
          - node: /us/cfr/t37/s202.1/a
            start_date: "1992-02-21"
            selection: true
            heading: ""
            content:
              Words and short phrases such as names, titles, and slogans; familiar
              symbols or designs; mere variations of typographic ornamentation, lettering
              or coloring; mere listing of ingredients or contents;
          - node: /us/cfr/t37/s202.1/b
            start_date: "1992-02-21"
            selection: true
            heading: ""
            content:
              "Ideas, plans, methods, systems, or devices, as distinguished from
              the particular manner in which they are expressed or described in a writing;  "
          - node: /us/cfr/t37/s202.1/c
            start_date: "1992-02-21"
            selection: true
            heading: ""
            content:
              Blank forms, such as time cards, graph paper, account books, diaries,
              bank checks, scorecards, address books, report forms, order forms and the
              like, which are designed for recording information and do not in themselves
              convey information;
          - node: /us/cfr/t37/s202.1/d
            start_date: "1992-02-21"
            selection: true
            heading: ""
            content:
              "Works consisting entirely of information that is common property containing
              no original authorship, such as, for example: Standard calendars, height and
              weight charts, tape measures and rulers, schedules of sporting events, and
              lists or tables taken from public documents or other common sources."
          - node: /us/cfr/t37/s202.1/e
            start_date: "1992-02-21"
            selection: true
            heading: ""
            content: Typeface as typeface.
        start_date: "1992-02-21"
        name: short phrases copyright exception
        suffix: familiar symbols or designs
  - inputs:
      type: fact
      content: the Java API was a scene a faire
    despite:
      type: fact
      content: the Java API was copyrightable
    outputs:
      type: fact
      content: "{Google} infringed the copyright on the Java API"
      truth: false
    mandatory: true
    enactments: copyright exceptions full
    enactments_despite: copyright protection provision
  - inputs:
      type: fact
      content:
        the Java API was essentially the only way to express the idea that it
        embodied
    despite:
      type: fact
      content: the Java API was copyrightable
    outputs:
      type: fact
      content: Google infringed the copyright on the Java API
      truth: false
    mandatory: true
    enactments: copyright exceptions full
    enactments_despite: copyright protection provision
  - inputs:
      - type: fact
        content: the Java API was copyrightable
      - type: fact
        content:
          the Java API was essentially the only way to express the idea that it
          embodied
        absent: true
        name: absent essentially the only way
      - type: fact
        content: the Java API was a scene a faire
        absent: true
        name: absent scene a faire
    outputs:
      type: fact
      content: Google infringed the copyright on the Java API
    mandatory: true
    enactments: copyright exceptions full
    enactments_despite: copyright protection provision
  - inputs:
      - type: fact
        content: "{Sun Microsystems} created the Java API"
      - type: fact
        content:
          when creating the Java API, Sun Microsystems could have selected and
          arranged its names and phrases in unlimited different ways
    outputs:
      type: fact
      content:
        the Java API was essentially the only way to express the idea that it
        embodied
      truth: false
    mandatory: true
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
  - inputs:
      - type: fact
        content: the Java API was a literary work
      - type: fact
        content: the Java API contained short phrases that were creative
    despite:
      type: fact
      content: the Java API contained short phrases
    outputs:
      type: fact
      content: the Java API was copyrightable
    mandatory: true
    enactments: copyright protection provision
    enactments_despite:
      - copyright exceptions full
      - short phrases copyright exception
  - inputs:
      - type: fact
        content: the Java language was a computer program
      - type: fact
        content: the Java API was an element of the Java language
      - type: fact
        content:
          the creation of the Java API was dictated by external factors such as
          the mechanical specifications of the computer on which the Java language was
          intended to run or widely accepted programming practices within the computer
          industry
    outputs:
      type: fact
      content: the Java API was a scene a faire
    enactments: copyright exceptions full
    enactments_despite: copyright protection provision
  - inputs:
      - type: fact
        content: the Java language was a computer program
      - type: fact
        content:
          the Java API was the structure, sequence, and organization of the Java
          language
      - type: fact
        content: the Java API was the expression of an idea
      - type: fact
        content: the Java API was an idea
        truth: false
    outputs:
      type: fact
      content: the Java API was copyrightable
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
  - inputs:
      - the Java API was an original work
      - type: fact
        content: Sun Microsystems was the author of the Java API
      - type: fact
        content:
          when creating the Java API, Sun Microsystems had multiple ways to express
          its underlying idea
    despite:
      type: fact
      content: the Java API served a function
    outputs:
      type: fact
      content: the Java API was copyrightable
    mandatory: true
    universal: true
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
  - inputs:
      type: fact
      content: the Java language was a computer program
    outputs:
      type: fact
      content: the Java language was copyrightable
    enactments: copyright protection provision
    enactments_despite: copyright exceptions full
factor_anchors:
  - name: the Java API was an original work
    anchors: a work must be “original”
  - name: the Java API was copyrightable
    anchors:
      - questions regarding originality are considered questions of |copyrightability|
      - that element may nevertheless contain expression that is eligible for copyright
        protection
      - structure, sequence, and organization of a computer program |is eligible for copyright
        protection|
  - name: false the Java API was copyrightable
    anchors:
      - must be “original” to qualify for |copyright protection.|
      - whether the non-literal elements of a program “are protected
  - name:
      the Java API was independently created by the author, as opposed to copied
      from other works
    anchors:
      the work was independently created by the author (as opposed to copied from
      other works)
  - name: the Java API was an original work
    anchors: Original, as the term is used in copyright
  - name: the Java API possessed at least some minimal degree of creativity
    anchors: it possesses at least some minimal degree of creativity.
  - name: the Java API was the expression of an idea
    anchors:
      - Copyright protection extends only to |the expression of an idea|
      - the component in question qualifies as an expression of an idea
      - "|where it qualifies as an expression of an idea|, rather than the idea itself."
  - name: false the Java API was an idea
    anchors:
      - not to the underlying idea itself
      - "|the component in question qualifies as| an expression of an idea,"
      - or |an idea itself.|
      - where it qualifies as an expression of an idea, |rather than the idea itself.|
  - name: the Java API was essentially the only way to express the idea that it embodied
    anchors:
      - concepts of|merger|and scenes a faire
      - "|concepts of merger| and scenes a faire are affirmative defenses to claims of
        infringement."
  - name: the Java API was a scene a faire
    anchors:
      - concepts of merger and |scenes a faire|
      - concepts of merger and |scenes a faire| are affirmative defenses to claims of
        infringement.
      - the scene a faire doctrine denies protection
  - name: the Java language was a computer program
    anchors:
      - The literal elements of |a computer program|are
      - the scene a faire doctrine denies protection to |program| elements
  - name: the Java API was the source code of the Java language
    anchors: "|are the source code|and object code."
  - name: the Java API was a set of application programming interface declarations
    anchors:
      literal elements of its API packages — the 7,000 lines of declaring source
      code
  - name:
      false the Java API was essentially the only way to express the idea that it
      embodied
    anchors:
      - we agree that merger cannot bar copyright protection for any lines of declaring
        source code unless Sun/Oracle had only one way, or a limited number of ways, to
        write them
      - Oracle had “unlimited options as to the selection and arrangement of the 7000
        lines Google copied.
  - name: the Java API was creative
    anchors:
      it is undisputed here that the declaring code and the structure and organization
      of the API packages are both creative
  - name: it was possible to use the Java language without copying the Java API
    anchors:
      Google did not need to copy the structure, sequence, and organization of
      the Java API packages to write programs in the Java language
  - name: the Java API was a literal element of the Java language
    anchors: The literal elements of a computer program are
  - name: absent essentially the only way
    anchors: "|concepts of merger| and scenes a faire are affirmative defenses "
  - name: absent scene a faire
    anchors: "concepts of merger and |scenes a faire| are affirmative defenses "
  - name: the Java API was a method of operation
    anchors: although an element of a work may be characterized as a method of operation
  - name: the Java API contained short phrases
    anchors: purposes is not whether |the work at issue contains short phrases|
  - name: the Java API became so popular that it was the industry standard
    anchors: the Java API packages because they had become the effective industry standard
  - name:
      there was a preexisting community of programmers accustomed to using the Java
      API
    anchors:
      the preexisting community of programmers who were accustomed to using the
      Java API packages
  - name: false Google infringed the copyright on the Java API
    anchors:
      concepts of merger and scenes a faire are |affirmative defenses to claims
      of infringement.|
  - name: Sun Microsystems created the Java API
    anchors:
      Sun Microsystems, Inc. (“Sun”) developed the Java “platform” for computer
      programming
  - name:
      when creating the Java API, Sun Microsystems could have selected and arranged
      its names and phrases in unlimited different ways
    anchors:
      Oracle had “unlimited options as to the selection and arrangement of the
      7000 lines Google copied.
  - name:
      false the Java API was essentially the only way to express the idea that it
      embodied
    anchors: merger does not apply on the record before us
  - name: the Java API was the object code of the Java language
    anchors: are the source code and |object code.|
  - name: the Java API was the sequence, structure, and organization of the Java language
    anchors: include, among other things, |the program’s sequence, structure, and organization,|
  - name: the Java API was a non-literal element of the Java language
    anchors: "|The non-literal components of a computer program|include,"
  - name: false the Java API was the expression of an idea
    anchors:
      - whether, on the particular facts of each case, the component in question qualifies
        as
      - an expression of an idea, or |an idea itself.|
  - name: the Java API was an idea
    anchors:
      - whether, on the particular facts of each case, the component in question qualifies
        as an expression of an idea
  - name: the Java API was a literary work
    anchors: as literary works often do
  - name: the Java API contained short phrases that were creative
    anchors: whether those phrases are creative.
  - name: the Java API contained short phrases
    anchors: whether the work at issue contains short phrases
  - name: the Java API was an element of the Java language
    anchors: the scene a faire doctrine denies protection to program| elements|
  - name:
      the creation of the Java API was dictated by external factors such as the
      mechanical specifications of the computer on which the Java language was intended
      to run or widely accepted programming practices within the computer industry
    anchors:
      that are dictated by external factors such as ‘the mechanical specifications
      of the computer on which a particular program is intended to run’ or ‘widely accepted
      programming practices within the computer industry.
  - name:
      when creating the Java API, Sun Microsystems had multiple ways to express
      its underlying idea
    anchors: as long as the author had multiple ways to express the underlying idea
  - name: the Java API served a function
    anchors: an original work — even one that serves a function
  - name: the Java API was the structure, sequence, and organization of the Java language
    anchors:
      "|the structure, sequence, and organization of a computer program| is eligible
      for copyright protection"
